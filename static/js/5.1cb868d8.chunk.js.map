{"version":3,"sources":["components/ui/IconButton.tsx","components/ui/ReduxForm/normalizers.ts","components/ui/RebassWidgets/index.ts","components/ui/ReduxForm/Input.tsx","hooks/ReduxForm.ts","components/ui/ReduxForm/Checkbox.tsx","../node_modules/@emotion-icons/emotion-icon/index.esm.js","../node_modules/@emotion-icons/boxicons-solid/ChevronDownSquare/ChevronDownSquare.esm.js","components/ui/Dropdown/context.ts","components/ui/Dropdown/DropdownItem.tsx","components/ui/Dropdown/DropdownList.tsx","components/ui/Dropdown/Dropdown.tsx","components/ui/Modal/ModalContainer.tsx","components/ui/Modal/Modal.tsx","utils/csv.ts","components/Calculator/FertilizerSelect/SelectedListItem.tsx","utils/downloads.ts","components/Calculator/FertilizerManager/AddItemElementForm.tsx","components/Calculator/FertilizerManager/AddEditCompositionList.tsx","components/Calculator/FertilizerManager/AddEditNPKString.tsx","components/Calculator/FertilizerManager/AddEdit.tsx","components/Calculator/FertilizerSelect/AddItem.tsx","components/Calculator/FertilizerSelect/SelectedList.tsx","components/Calculator/FertilizerSelect/Container.tsx","components/Calculator/FertilizerSelect/index.ts","components/ui/ReduxForm/validators.ts","components/Calculator/Options/IgnoreElement.tsx","components/ui/ReduxForm/Radio.tsx","components/Calculator/Options/Accuracy.tsx","components/Calculator/Options/Solution.tsx","components/Calculator/Options/Dilution.tsx","components/Calculator/Options/ToppingUp.tsx","components/Calculator/Options/Options.tsx","../node_modules/@styled-icons/fa-solid/Broom/Broom.esm.js","../node_modules/@styled-icons/boxicons-regular/Save/Save.esm.js","../node_modules/@styled-icons/material-sharp/Tune/Tune.esm.js","components/Calculator/Options/RecipeElementForm.tsx","components/ui/RebassWidgets/Number.tsx","components/Calculator/Options/RecipeTuneForm.tsx","components/Calculator/Options/Recipe.tsx","components/Calculator/Result/ResultFertilizerList.tsx","components/Calculator/Result/hooks.ts","components/Calculator/Result/ResultDilution.tsx","../node_modules/@styled-icons/fa-regular/Save/Save.esm.js","components/Calculator/Mixer/MixerForm.tsx","components/Calculator/Mixer/Mixer.tsx","components/Calculator/Result/Result.tsx","components/Calculator/ImportExport/ExportRecipes.tsx","components/Calculator/ImportExport/ImportRecipes.tsx","components/ui/styled.ts","components/Calculator/ImportExport/ExportState.tsx","calculator/format/json.ts","calculator/format/index.ts","components/Calculator/ImportExport/ImportState.tsx","components/Calculator/index.tsx"],"names":["IconButton","forwardRef","props","buttonRef","IconComponent","component","size","children","extraProps","useState","containerSize","setSize","theme","useTheme","useEffect","current","offsetWidth","marginRight","type","ref","color","colors","background","style","number","value","parseInt","decimal","parseFloat","Input","styled","RebassInput","WrappedInput","input","label","lang","placeholder","name","useFormName","useContext","ReduxFormContext","form","useFormValues","formName","dispatch","useDispatch","useSelector","state","getFormValues","change","WrappedCheckbox","checked","Checkbox","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","filterSVGProps","reduce","p","k","key","validProp","EmotionIconBaseBase","React","iconAttrs","iconViewBox","iconVerticalAlign","title","otherProps","_objectWithoutProperties","iconProps","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","viewBox","height","undefined","width","focusable","role","svgProps","_extends","EmotionIconBase","_styled","ChevronDownSquare","d","displayName","DropdownContext","createContext","ItemContainer","padding","sx","position","zIndex","backgroundColor","content","left","top","opacity","StyledItemBox","Box","disabled","css","DropdownItem","index","ctx","onClick","onItemClick","checkDisabledItem","renderItem","item","DropdownList","items","itemRef","useRef","setHeight","offsetHeight","maxHeight","overflowY","flexDirection","Array","from","map","s","margin","IconDown","text","Dropdown","renderValue","opened","setOpened","setItem","setValue","editing","setEditing","containerRef","handleClickOutside","event","contains","document","addEventListener","removeEventListener","onClickItemHandler","onChange","context","Provider","val","onKeyDown","stopPropagation","onEdit","onBlur","right","StyledOverlay","Flex","window","pageYOffset","ModalContainer","modalRoot","el","querySelector","createElement","setAttribute","body","appendChild","useModalRoot","ReactDOM","createPortal","Helmet","Modal","button","container","closed","setClose","onClose","modalActions","open","close","renderCbProps","modal","justifyContent","fontSize","Icon","Cross","csvParse","parse","csvExport","stringify","Element","delta","isOxide","NPKOxides","hasOwnProperty","bg","flex","mx","px","minWidth","maxWidth","alignItems","SelectedListItem","onRemove","weight","normalizedFertilizer","normalizeFertilizer","id","FERTILIZER_ELEMENT_NAMES","v","elements","textAlign","volume","liquid_weight","alignSelf","saveData","a","data","fileName","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","AddItemElementForm","min","max","autoComplete","normalize","AddEditCompositionList","fields","formula","percent","f","step","remove","AddEditNPKString","composition_enable","npk","stringifyProfile","isEditing","e","parseProfileStringToNPK","console","log","onFocus","getInitialValues","formData","composition","solution_concentration","solution_density","solution_density_enable","formToFertilizer","formValues","AddEdit","reduxForm","FERTILIZER_EDIT_FORM_NAME","enableReinitialize","Form","MACRO_ELEMENT_NAMES","MICRO_ELEMENT_NAMES","FieldArray","whiteSpace","required","AddItem","onAdd","fertilizers","calculator","calculationForm","selected","setSelected","fertilizersIDs","pr","includes","onAddHandler","Plus","SelectedList","error","meta","result","calculatedFertilizersWeights","fromEntries","marginTop","Container","validate","message","IgnoreElement","Radio","toString","ACCURACY_VARIANTS","Accuracy","Solution","REDUX_FORM_NAME","topping_up_enabled","field","newCon","newConcentration","normalizeConcentration","htmlFor","paddingTop","Dilution","dilution_enabled","dilution_concentration","display","pattern","ToppingUp","Options","my","marginLeft","Broom","StyledIconBase","fill","Save","Tune","getRecipeFieldName","RecipeElementForm","StyledInput","StyledSpinnerButton","NumberInput","precision","countDecimals","showBtn","setShowBtn","inputSize","setInputSize","inputRef","upButtonRef","downButtonRef","offset","focus","round","relatedTarget","bottom","ELEMENT_IN_MATRIX","ALLOWED_ELEMENT_IN_MATRIX","IMPORTANT_CELLS","BLOCKING_CELLS","RecipeTuneForm","formValue","recipe","setRecipe","recipeInfo","getNPKDetailInfo","ratio","setRatio","EC","setEC","HPGFormat","profileString","setProfileString","onChangeRecipe","newRecipe","Ca","fixIonicBalanceByCa","S","fixIonicBalanceByS","calculateEC","getProfileRatioMatrix","onChangeRatio","El1","El2","newNpk","convertProfileWithRatio","convertProfileWithEC","RecipeInput","ion_balance","NH4","NO3","K","N","Mg","getMultiElementRatio","el2","marginY","parseProfileString","entries","fillNPKElements","onChangeProfileString","onSave","getOptimalRatioDisplay","split","el1","OPTIMAL_RATIO","n","reverse","join","isImportant","isBlocking","borderColor","StyledBalanceCell","trim","m","Recipe","recipes","values","NPKBalance","getEmptyElements","DEFAULT_MICRO_RECIPE","zeroValues","recipeRemove","onRemoveItemHandler","recipePush","ResultFertilizerList","accuracy","useFertilizerSolutionGroup","fertilizersWeights","fertilizerWeightsMap","toMap","groupFertilizerBySolution","sort","ResultDilution","solution_volume","fertilizerWeightGroups","ppm","fertilizerWeights","calculatePPM","usePPM","dilution_con","newPpm","dilution","dilution_solution","concentration","ppmToEC","MixerOptionsForm","MixerModal","mixerOptions","initialMixerOptions","initialValues","weights","params","pump_number","StyledList","ul","Result","deltaElements","totalWeight","sum","complexFertilizer","buildFertilizerFromSolution","fertilizer_weights","g","f_weights","stats","count","time","fertilizerPush","ExportRecipes","rows","cols","csvData","columns","header","Export","COLUMNS","ImportRecipes","createRef","newSize","handleOnChange","files","file","reader","FileReader","onload","csv","isNaN","P","splice","loadCSV","readAsText","Import","accept","mobileStyles","styles","ExportState","created","Date","toISOString","version","__VERSION__","__COMMIT_HASH__","fileData","JSON","JSONFormat","string","BaseFormat","ext","FORMATS","FORMATS_MAP","ACCEPT_FORMATS","ImportState","pop","import","loadStateStart","loadData","DEFAULT_RECIPES","Cl","CalculatorContainer","handleSubmit","onSubmit","calculateStart","FertilizerSelect","marginBottom","flexWrap","Restart","recipeReset","InitializerCalculator","ReduxCalculator","connect"],"mappings":"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","file":"static/js/5.1cb868d8.chunk.js","sourcesContent":["import React, {forwardRef, MouseEventHandler, PropsWithChildren, useEffect, useState} from \"react\";\nimport {Button, ButtonProps} from \"rebass\";\nimport {EmotionIcon} from '@emotion-icons/emotion-icon'\n\nimport {useTheme} from \"emotion-theming\";\nimport {Theme} from \"@/themes/types\";\n\n\ninterface IconButtonProps extends\n  PropsWithChildren<Omit<ButtonProps, keyof React.HTMLProps<HTMLButtonElement>>> {\n  component: EmotionIcon,\n  disabled?: boolean,\n  onClick?: MouseEventHandler<HTMLButtonElement>,\n  size?: number | string,\n  title?: string\n}\n\nexport const IconButton = forwardRef<HTMLButtonElement, IconButtonProps>(\n  (props, buttonRef) => {\n    const {\n      component: IconComponent,\n      size = \"1.5em\",\n      children,\n      ...extraProps\n    } = props\n    const [containerSize, setSize] = useState<number | string>(size || 0)\n    const theme = useTheme<Theme>()\n\n    useEffect(() => {\n      if (!size && buttonRef && 'current' in buttonRef) {\n        setSize(buttonRef.current?.offsetWidth || 0)\n      }\n    }, [buttonRef, setSize, size])\n    let marginRight = 0;\n    if (children) {\n      marginRight = 2;\n    }\n    return (\n      <Button type=\"button\" {...extraProps} ref={buttonRef}>\n        <IconComponent\n          color={theme.colors?.background}\n          size={containerSize}\n          style={{marginRight}}\n        />\n        {children}\n      </Button>\n    )\n  })\n","\n\nexport function number(value: any) {\n  return value && parseInt(value)\n}\n\nexport function decimal(value: any) {\n  return value && parseFloat(value)\n}\n","import {Input as RebassInput, InputProps as RebassInputProps} from \"@rebass/forms\";\nimport styled from \"styled-components\";\n\n\nexport type InputProps = RebassInputProps\n\nexport const Input = styled(RebassInput)`\n  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n    width: 0;\n    height: 0;\n  }\n  -moz-appearance: textfield;\n`\n\n\n\n","import React from \"react\";\nimport {Field as ReduxField} from \"redux-form\";\n\nimport {Input as RebassInput, InputProps as RebassInputProps} from \"../RebassWidgets\";\nimport {ReduxFormComponentType, WrapperInputType} from \"./types\";\n\ninterface InputProps extends RebassInputProps {\n  label?: string\n}\n\nexport const StyledInput = RebassInput\n\nexport const WrappedInput: WrapperInputType<InputProps> = ({input, label, type = \"text\", ...props}: any) =>\n  <RebassInput  {...props}\n                {...input}\n                type={type}\n                lang=\"en-US\"\n                placeholder={props.placeholder || label}\n  />\n\n\n// TODO вывести тип\nexport const Input: ReduxFormComponentType<InputProps> = (\n  {\n    name,\n    ...props\n  }) => {\n\n  return (\n    <ReduxField\n      component={WrappedInput}\n      name={name}\n      {...props as any}\n    />\n  )\n}\n","import {useContext} from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {change, FormContext, getFormValues, ReduxFormContext} from \"redux-form\";\n\nexport function useReduxForm(): FormContext {\n  return useContext(ReduxFormContext)\n}\n\nexport function useFormName(): string {\n  return useReduxForm().form\n}\n\nexport function useFormValues<FormValues=object>(formName: string): [FormValues, (name: string, value: any) => void] {\n  const dispatch = useDispatch()\n  const values = useSelector(state => getFormValues(formName)(state)) as FormValues\n\n  const setValue = (name: string, value: any) => {\n    dispatch(change(formName, name, value))\n  }\n  return [\n    values,\n    setValue\n    ]\n}\n","import React from \"react\";\n\nimport {Checkbox as RebassCheckbox, CheckboxProps as RebassCheckboxProps, Label} from \"@rebass/forms\";\nimport {Field as ReduxField} from \"redux-form\";\nimport {ReduxFormComponentType, WrapperInputType} from \"./types\";\n\ninterface CheckboxProps extends RebassCheckboxProps {\n  label: string\n}\n\nconst WrappedCheckbox: WrapperInputType<CheckboxProps> = ({input, label, ...props}: any) =>\n  <Label>\n    <RebassCheckbox\n      {...props} {...input}\n      checked={input.value}\n    />\n    {label}\n  </Label>\n\n// TODO вывести тип\nexport const Checkbox: ReduxFormComponentType<CheckboxProps> = ({name, ...props}) => {\n  return (\n    <ReduxField\n      component={WrappedCheckbox}\n      name={name}\n      {...props as any}\n    />\n  )\n}\n\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _styled from \"@emotion/styled-base\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport validProp from '@emotion/is-prop-valid';\n\nfunction isValidProp(key) {\n  return validProp(key);\n}\n\nfunction filterSVGProps(props) {\n  return Object.keys(props).reduce(function (p, k) {\n    if (isValidProp(k)) {\n      // hack to satisfy TypeScript complexity\n      ;\n      p[k] = props[k];\n    }\n\n    return p;\n  }, {});\n}\n\nvar EmotionIconBaseBase = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var children = props.children,\n      iconAttrs = props.iconAttrs,\n      iconVerticalAlign = props.iconVerticalAlign,\n      iconViewBox = props.iconViewBox,\n      size = props.size,\n      title = props.title,\n      otherProps = _objectWithoutProperties(props, [\"children\", \"iconAttrs\", \"iconVerticalAlign\", \"iconViewBox\", \"size\", \"title\"]);\n\n  var iconProps = _objectSpread({\n    viewBox: iconViewBox,\n    height: props.height !== undefined ? props.height : size,\n    width: props.width !== undefined ? props.width : size,\n    'aria-hidden': title == null ? 'true' : undefined,\n    focusable: 'false',\n    role: title != null ? 'img' : undefined\n  }, iconAttrs);\n\n  var svgProps = filterSVGProps(otherProps);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, iconProps, svgProps, {\n    ref: ref\n  }), title && /*#__PURE__*/React.createElement(\"title\", {\n    key: \"icon-title\"\n  }, title), children);\n});\nexport var EmotionIconBase = /*#__PURE__*/_styled(EmotionIconBaseBase, {\n  target: \"ex0cdmw0\",\n  label: \"EmotionIconBase\"\n})(\"display:inline-block;vertical-align:\", function (props) {\n  return props.iconVerticalAlign;\n}, \";overflow:hidden;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3RDBEIiwiZmlsZSI6ImluZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnXG5pbXBvcnQgdmFsaWRQcm9wIGZyb20gJ0BlbW90aW9uL2lzLXByb3AtdmFsaWQnXG5cbmV4cG9ydCB0eXBlIEVtb3Rpb25JY29uID0gUmVhY3QuRm9yd2FyZFJlZkV4b3RpY0NvbXBvbmVudDxcbiAgUmVhY3QuUHJvcHNXaXRob3V0UmVmPEVtb3Rpb25JY29uUHJvcHM+ICYgUmVhY3QuUmVmQXR0cmlidXRlczxTVkdTVkdFbGVtZW50PlxuPlxuXG5leHBvcnQgaW50ZXJmYWNlIEVtb3Rpb25JY29uUHJvcHMgZXh0ZW5kcyBSZWFjdC5Qcm9wc1dpdGhSZWY8UmVhY3QuU1ZHUHJvcHM8U1ZHU1ZHRWxlbWVudD4+IHtcbiAgc2l6ZT86IG51bWJlciB8IHN0cmluZ1xuICB0aXRsZT86IHN0cmluZyB8IG51bGxcbn1cblxuaW50ZXJmYWNlIEVtb3Rpb25JY29uQmFzZVByb3BzIHtcbiAgaWNvbkF0dHJzOiBSZWFjdC5TVkdQcm9wczxTVkdTVkdFbGVtZW50PlxuICBpY29uVmlld0JveDogc3RyaW5nXG4gIGljb25WZXJ0aWNhbEFsaWduOiBzdHJpbmdcbn1cblxuZnVuY3Rpb24gaXNWYWxpZFByb3Aoa2V5OiBzdHJpbmcpOiBrZXkgaXMga2V5b2YgUmVhY3QuU1ZHUHJvcHM8U1ZHU1ZHRWxlbWVudD4ge1xuICByZXR1cm4gdmFsaWRQcm9wKGtleSlcbn1cblxuZnVuY3Rpb24gZmlsdGVyU1ZHUHJvcHMocHJvcHM6IEVtb3Rpb25JY29uUHJvcHMpOiBSZWFjdC5TVkdQcm9wczxTVkdTVkdFbGVtZW50PiB7XG4gIHJldHVybiAoT2JqZWN0LmtleXMocHJvcHMpIGFzIEFycmF5PGtleW9mIEVtb3Rpb25JY29uUHJvcHM+KS5yZWR1Y2U8UmVhY3QuU1ZHUHJvcHM8U1ZHU1ZHRWxlbWVudD4+KChwLCBrKSA9PiB7XG4gICAgaWYgKGlzVmFsaWRQcm9wKGspKSB7XG4gICAgICAvLyBoYWNrIHRvIHNhdGlzZnkgVHlwZVNjcmlwdCBjb21wbGV4aXR5XG4gICAgICA7KHAgYXMgYW55KVtrXSA9IHByb3BzW2tdXG4gICAgfVxuICAgIHJldHVybiBwXG4gIH0sIHt9KVxufVxuXG5jb25zdCBFbW90aW9uSWNvbkJhc2VCYXNlID0gUmVhY3QuZm9yd2FyZFJlZjxTVkdTVkdFbGVtZW50LCBFbW90aW9uSWNvblByb3BzICYgRW1vdGlvbkljb25CYXNlUHJvcHM+KChwcm9wcywgcmVmKSA9PiB7XG4gIGNvbnN0IHtjaGlsZHJlbiwgaWNvbkF0dHJzLCBpY29uVmVydGljYWxBbGlnbiwgaWNvblZpZXdCb3gsIHNpemUsIHRpdGxlLCAuLi5vdGhlclByb3BzfSA9IHByb3BzXG5cbiAgY29uc3QgaWNvblByb3BzOiBSZWFjdC5TVkdQcm9wczxTVkdTVkdFbGVtZW50PiA9IHtcbiAgICB2aWV3Qm94OiBpY29uVmlld0JveCxcbiAgICBoZWlnaHQ6IHByb3BzLmhlaWdodCAhPT0gdW5kZWZpbmVkID8gcHJvcHMuaGVpZ2h0IDogc2l6ZSxcbiAgICB3aWR0aDogcHJvcHMud2lkdGggIT09IHVuZGVmaW5lZCA/IHByb3BzLndpZHRoIDogc2l6ZSxcbiAgICAnYXJpYS1oaWRkZW4nOiB0aXRsZSA9PSBudWxsID8gJ3RydWUnIDogdW5kZWZpbmVkLFxuICAgIGZvY3VzYWJsZTogJ2ZhbHNlJyxcbiAgICByb2xlOiB0aXRsZSAhPSBudWxsID8gJ2ltZycgOiB1bmRlZmluZWQsXG4gICAgLi4uaWNvbkF0dHJzLFxuICB9XG5cbiAgY29uc3Qgc3ZnUHJvcHMgPSBmaWx0ZXJTVkdQcm9wcyhvdGhlclByb3BzKVxuXG4gIHJldHVybiAoXG4gICAgPHN2ZyB7Li4uaWNvblByb3BzfSB7Li4uc3ZnUHJvcHN9IHJlZj17cmVmfT5cbiAgICAgIHt0aXRsZSAmJiA8dGl0bGUga2V5PVwiaWNvbi10aXRsZVwiPnt0aXRsZX08L3RpdGxlPn1cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L3N2Zz5cbiAgKVxufSlcblxuZXhwb3J0IGNvbnN0IEVtb3Rpb25JY29uQmFzZSA9IHN0eWxlZChFbW90aW9uSWNvbkJhc2VCYXNlKWBcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogJHsocHJvcHMpID0+IHByb3BzLmljb25WZXJ0aWNhbEFsaWdufTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbmBcbiJdfQ== */\"));","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { EmotionIconBase } from '@emotion-icons/emotion-icon';\nexport var ChevronDownSquare = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(EmotionIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5 21h14c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2zM7.707 9.293L12 13.586l4.293-4.293 1.414 1.414L12 16.414l-5.707-5.707 1.414-1.414z\"\n  }));\n});\nChevronDownSquare.displayName = 'ChevronDownSquare';\nexport var ChevronDownSquareDimensions = {\n  height: 24,\n  width: 24\n};","import React, {Context} from \"react\";\nimport {ItemCallback, RenderItemCallback} from \"./types\";\n\n// TODO  сделать генерик\nexport interface DropdownContextInterface<T=any> {\n  onItemClick?: ItemCallback<T>,\n  renderItem?: RenderItemCallback<T>\n  checkDisabledItem?: ItemCallback<T,  boolean>,\n}\n\nexport type DropdownContext<T> = Context<DropdownContextInterface<T>>\nexport const DropdownContext: DropdownContext<any> = React.createContext({})\n\n\n","import React, {FunctionComponent, useContext} from \"react\";\nimport {Box, Flex} from \"rebass\";\n// import styled from '@emotion/styled'\nimport {DropdownContext} from \"./context\";\nimport styled, {css} from \"styled-components\";\n\ninterface DropdownItemProps<T> {\n  value: T,\n  index: number,\n}\n\n\nconst ItemContainer: FunctionComponent = ({\n                                            children,\n                                          }) => {\n  return <Flex\n    padding={2}\n    sx={{\n      position: \"relative\",\n      zIndex: 1,\n      '&::before': {\n        backgroundColor: 'highlight',\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        opacity: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: -1,\n      },\n      '&:hover::before': {\n        opacity: 0.1,\n        // boxShadow: \"inset 0 0 0 99999px rgba(0,0,0,0.1)\"\n      }\n    }}\n  >\n    {children}\n  </Flex>\n\n}\n\nconst StyledItemBox = styled(Box)`\n  ${props => props.disabled \n    && css`\n      pointer-events: none;\n      opacity: 0.4;\n  `}\n\n`\n\nexport function DropdownItem<T>(props: DropdownItemProps<T>) {\n  const {value, index} = props;\n  const ctx = useContext(DropdownContext);\n\n  const renderItem = () => {\n    if (ctx.renderItem) {\n      return <ctx.renderItem item={value} index={index} />\n    }\n    return (value + '')\n  }\n\n  const onItemClickHandler = () => {\n    if (ctx.onItemClick) {\n      ctx.onItemClick(value)\n    }\n  }\n\n  return (\n    <StyledItemBox\n      onClick={onItemClickHandler}\n      disabled={ctx.checkDisabledItem && ctx.checkDisabledItem(value)}\n    >\n      <ItemContainer>\n        {renderItem()}\n      </ItemContainer>\n    </StyledItemBox>\n  )\n}\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {Box, Card, Flex} from \"rebass\";\nimport {DropdownItem} from \"./DropdownItem\";\n\ninterface DropdownListProps<T> {\n  items: T[],\n}\n\nexport function DropdownList<T>(props: DropdownListProps<T>) {\n  const items = props.items\n\n  const itemRef = useRef<HTMLDivElement>()\n  const [height, setHeight] = useState(0)\n\n  useEffect(() => {\n    setHeight(itemRef?.current?.offsetHeight || 0)\n  }, [itemRef])\n\n  return (\n    <Card\n      backgroundColor={\"background\"}\n      padding={0}\n      maxHeight={height * 5}\n      overflowY={'auto'}\n      sx={{zIndex: 3}}\n    >\n      <Flex flexDirection=\"column\">\n        {Array.from(items).map((s, i) => {\n          return (\n            <Box ref={i === 0 ? itemRef: null}>\n              <DropdownItem<T>\n                value={s}\n                index={i}\n                key={i}\n              />\n              {i < items.length - 1 ? <hr style={{margin: 0}}/> : null}\n            </Box>\n          )\n        })}\n      </Flex>\n    </Card>\n  )\n}\n","import React, {ChangeEvent, KeyboardEvent, useEffect, useRef, useState} from \"react\";\nimport {Input} from \"@rebass/forms\";\nimport {Box, Flex} from \"rebass\";\nimport styled from '@emotion/styled'\nimport {ChevronDownSquare} from '@emotion-icons/boxicons-solid/ChevronDownSquare'\nimport {DropdownList} from \"./DropdownList\";\nimport {DropdownContext, DropdownContextInterface} from \"./context\";\nimport {ItemCallback, ItemType, RenderItemCallback, RenderValueCallback} from \"./types\";\n\nconst IconDown = styled(ChevronDownSquare)`\n  color: ${(props: any) => props.theme.colors.text};\n  height: 3rem;\n  opacity: 0.5;\n  \n  &:hover {\n    opacity: 0.7;\n  }\n`\n\nexport interface DropdownProps<T> {\n  value?: ItemType<T>,\n  items: T[],\n  renderValue?: RenderValueCallback<T>,\n  renderItem?: RenderItemCallback<T>,\n  checkDisabledItem?: ItemCallback<T,  boolean>,\n\n  onEdit?: (value: string) => void,\n  onChange?: (item: ItemType<T>) => void,\n  width?: number\n}\n\nexport function Dropdown<T>(props: DropdownProps<T>) {\n  const {width} = props\n  const renderValue: RenderValueCallback<T> = item => {\n    if (props.renderValue) {\n      return props.renderValue(item)\n    }\n    return (item || '') + ''\n  }\n\n  const [opened, setOpened] = useState(false)\n  const [item, setItem] = useState(props.value || null)\n  const [value, setValue] = useState(renderValue(props.value || null))\n  const [editing, setEditing] = useState(false)\n  const containerRef = useRef<HTMLDivElement>()\n\n  useEffect(() => {\n    function handleClickOutside(event: MouseEvent) {\n      if (containerRef.current\n        && !containerRef.current.contains(event.target as any)) {\n        setOpened(false)\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [containerRef])\n\n  const onClickItemHandler = (item: ItemType<T>) => {\n    setItem(item)\n    setValue(renderValue(item))\n\n    props.onChange && props.onChange(item)\n    setEditing(false)\n    setOpened(false)\n  }\n  const onChangeInputHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    const val = event.target.value\n    setValue(val)\n    setEditing(true)\n    setOpened(false)\n  }\n\n  const onKeyDownInputHandler = (event: KeyboardEvent<HTMLInputElement>) => {\n    event.stopPropagation()\n    if (event.key === 'Enter') {\n      props.onEdit && props.onEdit(value)\n    }\n    if (event.key === 'Escape') {\n      onClickItemHandler(item)\n    }\n  }\n\n  const onBlurInputHandler = () => {\n    if (editing) {\n      value && props.onEdit && props.onEdit(value)\n    }\n  }\n\n  const context: DropdownContextInterface<T> = {\n    onItemClick: onClickItemHandler,\n    renderItem: props.renderItem,\n    checkDisabledItem: props.checkDisabledItem,\n  }\n\n  return (\n    <DropdownContext.Provider value={context}>\n      <Flex flexDirection=\"column\" width={width} ref={containerRef}>\n        <Flex sx={{position: 'relative'}}>\n          <Input\n            value={value}\n            onChange={onChangeInputHandler}\n            onKeyDown={onKeyDownInputHandler}\n            onBlur={onBlurInputHandler}\n          />\n          <Box\n            sx={{\n              position: \"absolute\",\n              right: 0\n            }}\n          >\n            <IconDown\n              onClick={() => setOpened(!opened)}\n            />\n          </Box>\n        </Flex>\n        <Flex sx={{position: 'relative'}}>\n          <Flex sx={{position: \"absolute\"}}\n                flexDirection=\"column\"\n                width=\"100%\"\n          >\n            {opened && <DropdownList<T> items={props.items}/>}\n          </Flex>\n        </Flex>\n      </Flex>\n    </DropdownContext.Provider>\n  )\n}\n","import React, {ReactNode} from \"react\";\nimport ReactDOM from 'react-dom'\nimport {Card, Flex} from \"rebass\";\nimport styled from '@emotion/styled'\nimport {Helmet} from \"react-helmet\";\n\n\ninterface ModalContainerProps {\n  children: ReactNode,\n}\n\nconst useModalRoot = () => {\n  let el = document.querySelector('#modal-root')\n  if (!el) {\n    el = document.createElement('div')\n    el.setAttribute('id', 'modal-root')\n    document.body.appendChild(el)\n  }\n  return el\n}\n\nconst StyledOverlay = styled(Flex)`\n  overflow-y: auto;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: ${() => `${window.pageYOffset}px`};\n  left: 0;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.5);\n  z-index: 999;\n  \n  // Mobile\n  @media screen and (max-height: 500px), screen and (max-width: 500px) {\n    align-items: initial;\n  }\n`\n\nexport function ModalContainer(props: ModalContainerProps) {\n  const {\n    children,\n  } = props\n  const modalRoot = useModalRoot()\n  return ReactDOM.createPortal(\n    <>\n      <Helmet>\n        <style type='text/css'>\n          {`\n          body {\n            overflow: hidden;\n          }\n        `}\n        </style>\n      </Helmet>\n      <StyledOverlay>\n        <Card backgroundColor='#fff' height=\"max-content\">\n          {children}\n        </Card>\n      </StyledOverlay>\n    </>\n    , modalRoot)\n}\n","import React, {ReactNode, useEffect, useState} from \"react\";\nimport {ModalContainer} from \"@/components/ui/Modal/ModalContainer\";\nimport {Box, Flex, Heading} from \"rebass\";\nimport {Icon} from \"@/components/ui/Icon\";\nimport {Cross} from \"@styled-icons/entypo/Cross\";\n\nexport interface ModalActions {\n  open: () => void,\n  close: () => void,\n}\n\ntype RenderCb = (props: {modal: ModalActions}) => ReactNode\n\ninterface ModalProps {\n  opened?: boolean,\n  onClose?: () => void,\n  button?: RenderCb,\n  title?: string,\n  container: RenderCb,\n}\n\nexport function Modal(props: ModalProps) {\n  const {\n    opened = false,\n    button,\n    container,\n  } = props\n\n  const [closed, setClose] = useState(!opened)\n\n  useEffect(() => {\n    setClose(!opened)\n  }, [opened])\n\n  useEffect(() => {\n    if (closed && props.onClose) {\n      props.onClose()\n    }\n  }, [closed, props])\n\n  const modalActions: ModalActions = {\n    open: () => setClose(false),\n    close: () => setClose(true),\n  }\n  const renderCbProps = {modal: modalActions}\n\n  return (\n    <>\n      {button && button(renderCbProps)}\n      {closed ? null : <ModalContainer>\n        <Flex justifyContent='space-between'>\n          <Heading fontSize={2}>{props.title}</Heading>\n          <Icon component={Cross} onClick={modalActions.close}/>\n        </Flex>\n        <Box>\n          {container(renderCbProps)}\n        </Box>\n      </ModalContainer>\n      }\n    </>\n  )\n}\n","import parse from \"csv-parse/lib/sync\"\nimport stringify from \"csv-stringify/lib/sync\"\n\nexport const csvParse = parse\nexport const csvExport = stringify\n\n\n","import React, {FunctionComponent} from \"react\";\nimport {Box, Card, Flex, Text} from \"rebass\";\nimport {Cross} from \"@styled-icons/entypo/Cross\"\nimport {FertilizerType} from \"./types\";\nimport {normalizeFertilizer} from \"@/calculator/fertilizer\";\nimport {FERTILIZER_ELEMENT_NAMES, NPKOxides} from \"@/calculator/constants\";\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {FertilizerWeights} from \"@/calculator\";\nimport {Elements} from \"@/calculator/types\";\n\ninterface ElementProps {\n  name: keyof Elements,\n  isOxide?: boolean,\n  value: number,\n  delta?: number,\n}\n\nexport const Element: FunctionComponent<ElementProps> = (props) => {\n  const {name,\n    value,\n    delta,\n    isOxide\n  } = props\n  let displayName: string = name;\n  if (isOxide && NPKOxides.hasOwnProperty(name)) {\n    displayName = NPKOxides[name] as string\n  }\n  return (\n    <Box bg={name} flex={1} mx=\"2px\" px={1} color={'black'} minWidth=\"2.1em\" maxWidth=\"4em\" fontSize={1}>\n      <Flex flexDirection='column' alignItems={'center'}>\n        <Box>{displayName}</Box>\n        <Box>{value}</Box>\n        {typeof delta !== \"undefined\" ? <Box>{delta}</Box> : null}\n      </Flex>\n    </Box>\n  )\n}\n\ninterface SelectedListItemProps {\n  item: FertilizerType,\n  onRemove: () => void,\n  weight?: FertilizerWeights,\n}\n\n\nexport const SelectedListItem: FunctionComponent<SelectedListItemProps> = ({item, onRemove, weight}) => {\n  const normalizedFertilizer = normalizeFertilizer(item, false)\n  return (\n    <Card width={'auto'}>\n      <Flex justifyContent={'space-between'} alignItems=\"center\">\n        <Box flex={1}>\n          <Text flex={1}>\n            {item.id}\n          </Text>\n          <Flex>\n            {\n              FERTILIZER_ELEMENT_NAMES.map((name) => {\n                  let v = normalizedFertilizer.elements[name]\n                  if (!v) {\n                    return null\n                  }\n                  return <Element\n                    name={name}\n                    key={name}\n                    value={v}\n                    isOxide\n                  />\n                }\n              )\n            }\n          </Flex>\n        </Box>\n        <Flex>\n          <Flex alignItems=\"center\" justifyContent=\"center\" margin={1}>\n            {weight ? (\n              <Text textAlign=\"center\" minWidth=\"3em\">\n                {weight.weight}г\n                {weight.volume ? (\n                  <>\n                    <br/>\n                    <span\n                      title=\"Объем или вес раствора\">{weight.volume && `${weight.volume} мл${weight.liquid_weight? `, ${weight.liquid_weight}г`:''}`}</span>\n                  </>\n                ) : null}\n              </Text>\n            ) : null}\n          </Flex>\n          <IconButton\n            padding={1}\n            alignSelf=\"center\"\n            component={Cross}\n            onClick={() => onRemove()}\n          />\n        </Flex>\n      </Flex>\n    </Card>\n  )\n}\n","export const saveData = (function () {\n  const a = document.createElement(\"a\");\n  document.body.appendChild(a);\n  a.setAttribute('style', \"display: none\")\n  return function (data: string, fileName: string) {\n    const blob = new Blob([data], {type: \"octet/stream\"})\n    const url = window.URL.createObjectURL(blob)\n    a.href = url;\n    a.download = fileName;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n})();\n\nexport {}\n","import React, {FunctionComponent} from \"react\";\nimport {Flex} from \"rebass\";\nimport {Input} from \"@/components/ui/ReduxForm/Input\";\nimport {decimal} from \"@/components/ui/ReduxForm/normalizers\";\nimport {Elements} from \"@/calculator/types\";\nimport {NPKOxides} from \"@/calculator/constants\";\n\ninterface RecipeElementFormProps {\n  name: keyof Elements,\n  disabled?: boolean\n}\n\n\nexport const AddItemElementForm: FunctionComponent<RecipeElementFormProps> = (props) => {\n  const {name, disabled} = props\n  let displayName: string = name;\n  if (NPKOxides.hasOwnProperty(name)) {\n    displayName = NPKOxides[name] as string\n  }\n  return (\n    <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" width='4rem'>\n      <label style={{textAlign: 'center'}}>\n        {displayName}\n      </label>\n      <Input\n        name={'npk.' + name}\n        type=\"number\"\n        min=\"0\"\n        max=\"100\"\n        autoComplete=\"off\"\n        width=\"3rem\"\n        style={{\n          textAlign: \"center\"\n        }}\n        normalize={decimal}\n        disabled={disabled}\n      />\n    </Flex>\n  )\n}\n","import React from \"react\";\nimport {ReduxFieldArrayType} from \"@/components/ui/ReduxForm/types\";\nimport {Card, Flex} from \"rebass\";\nimport {FertilizerComposition} from \"@/calculator/types\";\nimport {Input} from \"@/components/ui/ReduxForm/Input\";\nimport {decimal} from \"@/components/ui/ReduxForm/normalizers\";\n\ninterface AddEditCompositionListProps {\n}\n\ntype AddEditCompositionListType = ReduxFieldArrayType<AddEditCompositionListProps, FertilizerComposition>\nexport const AddEditCompositionList: AddEditCompositionListType = (props) => {\n  const {fields} = props\n  return (\n    <Card width=\"100%\">\n      <Flex>\n        <button type=\"button\"  onClick={() => fields.push({formula: '', percent: 98})}>+</button>\n      </Flex>\n      <Flex flexDirection=\"column\">\n        {fields.map((f, i) => (\n          <Flex key={i} width=\"100%\">\n            <Input name={`${f}.formula`} flex={2} placeholder={\"NH4NO3\"}/>\n            <Input\n              name={`${f}.percent`}\n              type=\"number\"\n              step=\"0.1\"\n              min=\"0\"\n              max=\"100\"\n              placeholder={\"98\"}\n              normalize={decimal}\n              flex={1}\n            />\n            <button type=\"button\" onClick={() => fields.remove(i)}>-</button>\n          </Flex>\n        ))}\n      </Flex>\n    </Card>\n  )\n}\n","import React, {ChangeEvent, FunctionComponent, useEffect, useState} from \"react\";\nimport {Flex} from \"rebass\";\nimport {NPKElements} from \"@/calculator/types\";\nimport {Input} from \"@rebass/forms\";\nimport {useFormName, useFormValues} from \"@/hooks/ReduxForm\";\nimport {AddEditFormType} from \"@/components/Calculator/FertilizerManager/types\";\nimport {parseProfileStringToNPK, stringifyProfile} from \"@/calculator/profile\";\n\ninterface AddEditNPKStringProps {\n  npk?: NPKElements,\n  onChange?: (elements: NPKElements) => void\n}\n\n\nexport const AddEditNPKString: FunctionComponent<AddEditNPKStringProps> = (props) => {\n  const {composition_enable} = useFormValues<AddEditFormType>(useFormName())[0]\n  const {\n    npk,\n    onChange,\n  } = props\n  // TODO разобрать useReducer вместо useState\n  const [value, setValue] = useState<string|undefined>(\n    npk && stringifyProfile(npk))\n  const [isEditing, setEditing] = useState(false)\n\n  useEffect(() => {\n    if (!isEditing) {\n      setValue(props.npk && stringifyProfile(props.npk))\n    }\n  }, [isEditing, props.npk]);\n\n  const onChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value)\n    const elements = parseProfileStringToNPK(e.target.value)\n    console.log(elements)\n    onChange && onChange(elements)\n  }\n  return (\n    <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" width={\"100%\"} padding={2}>\n      <label style={{textAlign: 'center'}}>\n\n      </label>\n      <Input\n        disabled={composition_enable}\n        placeholder={'Быстрое редактирование в формате \"NO3=10 P2O5=12 K=5\"'}\n        value={value}\n        type=\"string\"\n        autoComplete=\"off\"\n        style={{\n          textAlign: \"center\"\n        }}\n        onChange={onChangeInput}\n        onFocus={() => setEditing(true)}\n        onBlur={() => {\n          setEditing(false)\n          setValue(props.npk && stringifyProfile(props.npk))}\n        }\n      />\n    </Flex>\n  )\n}\n","import React from \"react\";\nimport {Box, Flex, Text} from \"rebass\";\n\nimport {change, FieldArray, Form, reduxForm} from 'redux-form'\nimport {ReduxFormType} from \"@/components/ui/ReduxForm/types\";\nimport {Input} from \"@/components/ui/ReduxForm/Input\";\nimport {normalizeFertilizer} from \"@/calculator/fertilizer\";\nimport {MACRO_ELEMENT_NAMES, MICRO_ELEMENT_NAMES} from \"@/calculator/constants\";\n\nimport {AddItemElementForm} from \"./AddItemElementForm\";\n\nimport {FERTILIZER_EDIT_FORM_NAME} from \"./constants\";\nimport {AddEditFormType} from \"./types\";\nimport {Checkbox} from \"@/components/ui/ReduxForm/Checkbox\";\nimport {AddEditCompositionList} from \"@/components/Calculator/FertilizerManager/AddEditCompositionList\";\nimport {useFormName, useFormValues} from \"@/hooks/ReduxForm\";\nimport {decimal, number} from \"@/components/ui/ReduxForm/normalizers\";\nimport {Label} from \"@rebass/forms\";\nimport {FertilizerInfo} from \"@/components/Calculator/types\";\nimport {AddEditNPKString} from \"@/components/Calculator/FertilizerManager/AddEditNPKString\";\nimport {useDispatch} from \"react-redux\";\n\ninterface AddEditProps {\n  fertilizer?: FertilizerInfo,\n}\n\nexport const getElements = (f: FertilizerInfo) => {\n  return normalizeFertilizer(f, false).elements\n}\n\nexport function getInitialValues(f: FertilizerInfo): AddEditFormType {\n  let formData: AddEditFormType = {...f}\n\n  if (f.composition) {\n    formData.npk = normalizeFertilizer(f, false).elements\n    formData.composition_enable = true\n  }\n  if (f.solution_concentration) {\n    formData.solution_concentration = f.solution_concentration\n    formData.solution_density = f.solution_density || 1000\n    formData.solution_density_enable = true\n  }\n  return formData\n}\n\nexport function formToFertilizer(formValues: AddEditFormType): FertilizerInfo {\n  const {\n    composition_enable, composition, npk,\n    solution_density_enable, solution_density, solution_concentration,\n    ..._f\n  } = formValues\n  const f: FertilizerInfo = _f\n  if (composition_enable) {\n    f.composition = composition\n  } else {\n    f.npk = npk\n  }\n  if (solution_density_enable) {\n    f.solution_density = solution_density\n    f.solution_concentration = solution_concentration\n  }\n  return f\n}\n\nconst AddEditForm: ReduxFormType<AddEditProps, AddEditFormType> = (props) => {\n  const formName = useFormName();\n  const formValues = useFormValues<AddEditFormType>(formName)[0]\n  const dispatch = useDispatch()\n\n  return (\n    <Form>\n      <Flex flexDirection='column'>\n        <Input name=\"id\" title=\"Name\" label=\"Name\"/>\n        <Box>\n          Макроэлементы\n        </Box>\n        <Flex>\n          {MACRO_ELEMENT_NAMES.map(el => (\n            <AddItemElementForm\n              name={el}\n              disabled={formValues.composition_enable}\n            />\n          ))}\n        </Flex>\n        <Box>\n          Микроэлементы\n        </Box>\n        <Flex>\n          {MICRO_ELEMENT_NAMES.map(el => (\n            <AddItemElementForm\n              name={el}\n              disabled={formValues.composition_enable}\n            />\n          ))}\n        </Flex>\n        <Flex>\n          <AddEditNPKString\n            npk={formValues.npk}\n            onChange={(npk) => {\n              dispatch(change(formName, 'npk', npk))\n            }}/>\n        </Flex>\n\n        <Flex>\n          <Checkbox name=\"composition_enable\" label=\"Формула\"/>\n        </Flex>\n        {formValues.composition_enable ?\n          <Flex>\n            <FieldArray<{}>\n              name=\"composition\"\n              component={AddEditCompositionList}\n            />\n          </Flex> : null\n        }\n        <Flex alignItems='center'>\n          <Box width=\"auto\" marginRight={2}>\n            <Checkbox\n              name=\"solution_density_enable\" label=\"Раствор\"\n            />\n          </Box>\n          {formValues.solution_density_enable ?\n            <Flex flexDirection=\"column\">\n              <Flex alignItems=\"flex-end\">\n                <Label flexDirection=\"column\">\n                  Концентрация\n                  <Input\n                    name=\"solution_concentration\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    min=\"0\"\n                    max=\"3000\"\n                    normalize={decimal}\n                    width='5em'\n                    marginRight={2}\n                  />\n                  <Text sx={{whiteSpace: 'nowrap'}}>г/л</Text>\n                </Label>\n              </Flex>\n              <Flex alignItems=\"flex-end\">\n                <Label flexDirection=\"column\">\n                  Плотность\n                  <Input\n                    name=\"solution_density\"\n                    type=\"number\"\n                    step=\"1\"\n                    min=\"800\"\n                    max=\"3000\"\n                    normalize={number}\n                    width='5em'\n                    marginRight={2}\n                  />\n                </Label>\n                <Text sx={{whiteSpace: 'nowrap'}}>г/л</Text>\n              </Flex>\n            </Flex>\n            : null}\n        </Flex>\n        <Flex>\n          <Label flexDirection=\"column\">\n            Миксер, номер помпы\n            <Input\n              name=\"pump_number\"\n              type=\"number\"\n              step=\"1\"\n              min=\"1\"\n              max=\"16\"\n              required={false}\n              normalize={number}\n              maxWidth={'3em'}\n            />\n          </Label>\n        </Flex>\n      </Flex>\n    </Form>\n  )\n}\n\n\nexport const AddEdit = reduxForm<AddEditFormType>({\n  form: FERTILIZER_EDIT_FORM_NAME,\n  enableReinitialize: true\n})(AddEditForm)\n","import React, {FunctionComponent, useState} from \"react\";\nimport {Box, Card, Flex} from \"rebass\";\nimport {FertilizerType} from \"./types\";\nimport {Dropdown} from \"@/components/ui/Dropdown/Dropdown\";\nimport {Plus} from \"@styled-icons/boxicons-regular/Plus\"\n\nimport {useSelector} from \"react-redux\";\nimport {CalculatorState} from \"../types\";\nimport {IconButton} from \"@/components/ui/IconButton\";\n\ninterface AddItemProps {\n  onAdd: (item: FertilizerType) => void\n}\n\n\nexport const AddItem: FunctionComponent<AddItemProps> = ({onAdd}) => {\n  const {\n    fertilizers,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n  const {\n    calculationForm,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n\n  const [selected, setSelected] = useState<FertilizerType | undefined>(fertilizers[0])\n\n  const selectedFertilizers = calculationForm?.fertilizers || [];\n  const fertilizersIDs = selectedFertilizers.map(f => f?.id)\n\n  const onChangeHandler = (item: FertilizerType | null) => {\n    item && setSelected(item)\n  }\n\n\n  const onAddHandler = (item: FertilizerType) => {\n    onAdd(item)\n  }\n  return (\n    <Card>\n      <Flex flexDirection=\"column\">\n        <Flex justifyContent=\"space-between\">\n          <Box flex={1} pr={2}>\n            <Dropdown<FertilizerType>\n              value={selected}\n              items={fertilizers}\n              onChange={onChangeHandler}\n              checkDisabledItem={item => fertilizersIDs.includes(item?.id || \"\")}\n              renderItem={({item}) => (\n                <Flex flex={1} justifyContent=\"space-between\">\n                  <Box>\n                    {item.id}\n                  </Box>\n                  <IconButton\n                    onClick={(event) => {\n                      event.stopPropagation()\n                      onAddHandler(item)\n                    }}\n                    component={Plus}\n                  />\n                </Flex>\n              )}\n              renderValue={item => item?.id || \"\"}\n            />\n          </Box>\n        </Flex>\n      </Flex>\n\n    </Card>\n  )\n}\n\n","import React from \"react\";\nimport {Flex} from \"rebass\";\nimport {SelectedListItem} from \"./SelectedListItem\";\nimport {AddItem} from \"./AddItem\";\nimport {ReduxFieldArrayType} from \"../../ui/ReduxForm/types\";\nimport {FertilizerType} from \"./types\";\nimport {CalculatorState} from \"../types\";\nimport {useSelector} from \"react-redux\";\n\ninterface SelectedListProps {\n}\n\nexport const SelectedList: ReduxFieldArrayType<SelectedListProps, FertilizerType> = (\n  {fields, meta: {error}}) => {\n  const {\n    calculationForm,\n    result,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n  const fertilizers = calculationForm?.fertilizers || [];\n\n  const calculatedFertilizersWeights = Object.fromEntries((result?.fertilizers || []).map(f => [f.id, f]))\n\n  const onAddHandler = (item: FertilizerType) => {\n    for (let f of fertilizers) {\n      if (f.id === item.id) {\n        return\n      }\n    }\n    fields.push(item)\n  }\n  return (\n    <Flex sx={{flexDirection: 'column'}} width='auto'>\n      <AddItem onAdd={onAddHandler}/>\n      <Flex sx={{\n        flexDirection: 'column',\n        '& > *': {\n          marginTop: '8px !important',\n        }\n      }}>\n        {error ? <span>{error}</span> : null}\n        {fertilizers.map((item, index) =>\n          <SelectedListItem\n            item={item}\n            key={item.id}\n            weight={calculatedFertilizersWeights[item.id]}\n            onRemove={() => fields.remove(index)}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n","import React from \"react\";\nimport {SelectedList} from \"./SelectedList\";\nimport {FieldArray} from \"redux-form\";\nimport {required} from \"../../ui/ReduxForm/validators\";\n\n\nexport const Container = () => {\n  return (\n    <FieldArray<{}>\n      name={\"fertilizers\"}\n      component={SelectedList}\n      validate={required(\"Выберите удобрения\")}\n    />\n  )\n}\n\n","import {Container} from \"./Container\";\n\nexport default Container\n","\ntype ValidatorCallback = {\n  (value: any): void|string\n}\n\nexport function pattern(pattern: RegExp|string, message?: string): ValidatorCallback {\n  message = message || 'Значение должно соответствовать регулярному выражению'\n  return (value) => {\n    pattern = new RegExp(pattern) as RegExp\n    if (pattern.test(value)) {\n      return message\n    }\n  }\n}\n\nexport function minLength(length: number, message?: string): ValidatorCallback {\n  message = message || `Количество элементов должно быть не менее ${length}`\n\n  return value => {\n    if (value.length < length) {\n      return message\n    }\n  }\n}\n\n\nexport function required(message?: string): ValidatorCallback {\n  message = message || `Должно быть заполнено`\n\n  return value => {\n    if (!value || !value?.length) {\n      return message\n    }\n  }\n}\n\n","import React, {FunctionComponent} from \"react\";\nimport {Card, Flex, Heading} from \"rebass\";\nimport {Checkbox} from \"../../ui/ReduxForm/Checkbox\";\n\ninterface IgnoreElementProps {\n}\n\n\nexport const IgnoreElement: FunctionComponent<IgnoreElementProps> = () => {\n  return (\n    <Card>\n      <Flex flexDirection=\"column\">\n        <Heading fontSize={2}>Игнорировать</Heading>\n        <Checkbox name=\"ignore.Ca\" label=\"Кальций\" />\n        <Checkbox name=\"ignore.Mg\" label=\"Магний\" />\n        <Checkbox name=\"ignore.S\" label=\"Сера\" />\n        <Checkbox name=\"ignore.Cl\" label=\"Хлор\" />\n      </Flex>\n    </Card>\n  )\n}\n","import React from \"react\";\n\nimport {Label, Radio as RebassRadio, RadioProps as RebassRadioProps} from \"@rebass/forms\";\nimport {Field as ReduxField} from \"redux-form\";\nimport {ReduxFormComponentType, WrapperInputType} from \"./types\";\n\ninterface RadioProps extends RebassRadioProps {\n  label: string,\n  value: string | number,\n}\n\nconst WrappedCheckbox: WrapperInputType<RadioProps> = ({input, label, value, ...props}: any) =>\n  <Label>\n    <RebassRadio\n      {...props}\n      {...input}\n    />\n    {label}\n  </Label>\n\n// TODO вывести тип\nexport const Radio: ReduxFormComponentType<RadioProps> = ({\n                                                            name,\n                                                            value,\n                                                            normalize= (v) => v.toString(),\n                                                            ...props\n                                                          }) => {\n  return (\n    <ReduxField\n      component={WrappedCheckbox}\n      name={name}\n      normalize={normalize}\n      // onClick={() => setChecked(!checked)}\n      // checked={checked}\n      type='radio'\n      value={normalize(value)}\n      {...props as any}\n    />\n  )\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Card, Flex, Heading} from \"rebass\";\nimport {Radio} from \"../../ui/ReduxForm/Radio\";\nimport {decimal} from \"../../ui/ReduxForm/normalizers\";\n\nconst ACCURACY_VARIANTS = [\n  0.2,\n  0.1,\n  0.05,\n  0.01,\n]\ninterface AccuracyProps {\n}\n\nexport const Accuracy: FunctionComponent<AccuracyProps> = () => {\n    return (\n      <Card>\n          <Flex flexDirection=\"column\">\n            <Heading fontSize={2}>Точность</Heading>\n            {ACCURACY_VARIANTS.map(a =>\n                <Radio\n                  name=\"accuracy\"\n                  value={a}\n                  label={`${a} г.`}\n                  normalize={decimal}\n                />\n            )}\n          </Flex>\n      </Card>\n    )\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Card, Flex, Heading, Text} from \"rebass\";\nimport {Label} from \"@rebass/forms\";\nimport {Input} from \"../../ui/ReduxForm/Input\";\nimport {decimal} from \"../../ui/ReduxForm/normalizers\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {change, getFormValues} from \"redux-form\";\nimport {REDUX_FORM_NAME} from \"@/components/Calculator/constants\";\nimport {CalculatorFormValues} from \"@/components/Calculator/types\";\nimport {Concentration, normalizeConcentration} from \"@/calculator/dilution\";\n\n\ninterface SolutionVolumeProps {\n}\n\nexport const Solution: FunctionComponent<SolutionVolumeProps> = () => {\n    const {\n        topping_up_enabled, solution_concentration,\n    } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n    const dispatch = useDispatch();\n\n    const onChange = (field: string) => (event: any) => {\n        if (!event.target.value) {\n            return\n        }\n        let k = parseFloat(event.target.value)\n\n        let newCon: Partial<Concentration> = {}\n        if (field === 'k') {\n            newCon.k = k\n        } else {\n            newCon = {...solution_concentration, [field]: k}\n            delete newCon.k\n        }\n        const newConcentration = normalizeConcentration(newCon)\n        dispatch(change(REDUX_FORM_NAME, 'solution_concentration', newConcentration))\n    }\n    return (\n        <Card>\n            <Heading fontSize={2}>Раствор</Heading>\n            <Flex flexDirection=\"column\">\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                    <Label htmlFor=\"solution_volume\">Объем, л</Label>\n                    <Input\n                        disabled={topping_up_enabled}\n                        name=\"solution_volume\"\n                        width=\"4rem\"\n                        type=\"number\"\n                        step=\"0.05\"\n                        min=\"0.1\"\n                        max=\"100\"\n                        normalize={decimal}\n                        style={{\n                            textAlign: \"center\"\n                        }}\n                        autoComplete=\"off\"\n                    />\n                </Flex>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\" paddingTop={2}>\n                    <Label htmlFor=\"solution_concentration.k\">Концентрация</Label>\n                </Flex>\n                <Flex alignItems=\"center\" paddingTop={2}>\n\n                    <Text fontSize={\"2rem\"}>1:</Text>\n                        <Input\n                            disabled={topping_up_enabled}\n                            name=\"solution_concentration.k\"\n                            type=\"number\"\n                            step=\"0.01\"\n                            width={\"auto\"}\n                            min=\"1\"\n                            max=\"1000\"\n                            normalize={decimal}\n                            style={{\n                                textAlign: \"center\"\n                            }}\n                            autoComplete=\"off\"\n                            onChange={onChange('k')}\n                        />\n                </Flex>\n                <Flex alignItems={\"center\"} paddingTop={2}>\n                    Или\n                    <Input\n                        disabled={topping_up_enabled}\n                        name=\"solution_concentration.v_1\"\n                        width=\"4rem\"\n                        type=\"number\"\n                        step=\"0.01\"\n                        min=\"1\"\n                        normalize={decimal}\n                        style={{\n                            textAlign: \"center\"\n                        }}\n                        autoComplete=\"off\"\n                        onChange={onChange('v_1')}\n                    /> мл\n                    на\n                    <Input\n                        disabled={topping_up_enabled}\n                        name=\"solution_concentration.v_2\"\n                        width=\"4rem\"\n                        type=\"number\"\n                        step=\"0.01\"\n                        min=\"0\"\n                        normalize={decimal}\n                        style={{\n                            textAlign: \"center\"\n                        }}\n                        autoComplete=\"off\"\n                        onChange={onChange('v_2')}\n                    /> мл рабочего раствора\n                </Flex>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\" paddingTop={2}>\n                </Flex>\n\n            </Flex>\n        </Card>\n    )\n}\n","import React, {FunctionComponent} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {change, getFormValues} from \"redux-form\";\nimport {Card, Flex, Text} from \"rebass\";\nimport {Label} from \"@rebass/forms\";\nimport {Input} from \"@/components/ui/ReduxForm/Input\";\nimport {decimal, number} from \"@/components/ui/ReduxForm/normalizers\";\nimport {Checkbox} from \"@/components/ui/ReduxForm/Checkbox\";\nimport {REDUX_FORM_NAME} from \"@/components/Calculator/constants\";\nimport {CalculatorFormValues} from \"@/components/Calculator/types\";\nimport {Concentration, normalizeConcentration} from \"@/calculator/dilution\";\n\n\ninterface DilutionProps {\n}\n\nexport const Dilution: FunctionComponent<DilutionProps> = () => {\n  const {\n    dilution_enabled, dilution_concentration,\n  } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n  const dispatch = useDispatch();\n\n  const onChange = (field: string) => (event: any) => {\n    if (!event.target.value) {\n      return\n    }\n    let k = parseFloat(event.target.value)\n\n    let newCon: Partial<Concentration> = {}\n    if (field === 'k') {\n      newCon.k = k\n    } else {\n      newCon = {...dilution_concentration, [field]: k}\n      delete newCon.k\n    }\n    const newConcentration = normalizeConcentration(newCon)\n    dispatch(change(REDUX_FORM_NAME, 'dilution_concentration', newConcentration))\n  }\n  return (\n    <Card>\n      <Checkbox name=\"dilution_enabled\" label=\"Разбавление концентрата\"/>\n      <Flex flexDirection=\"column\" style={{display: dilution_enabled ? \"flex\" : \"none\"}}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Label htmlFor=\"dilution_volume\">Объем, л</Label>\n          <Input\n            name=\"dilution_volume\"\n            width=\"3rem\"\n            type=\"number\"\n            step=\"1\"\n            min=\"1\"\n            pattern=\"^\\d+$\"\n            normalize={number}\n            style={{\n              textAlign: \"center\"\n            }}\n            autoComplete=\"off\"\n          />\n        </Flex>\n        <Flex>\n          <Label htmlFor=\"dilution_concentration.k\">Концентрация</Label>\n        </Flex>\n        <Flex alignItems=\"center\" paddingTop={2}>\n          <Text fontSize={\"2rem\"}>1:</Text>\n          <Input\n            name=\"dilution_concentration.k\"\n            type=\"number\"\n            width={'auto'}\n            step=\"0.1\"\n            min=\"1\"\n            max=\"2000\"\n            normalize={decimal}\n            style={{\n              textAlign: \"center\"\n            }}\n            autoComplete=\"off\"\n            onChange={onChange('k')}\n          />\n        </Flex>\n        <Flex alignItems={\"center\"}>\n          Или\n          <Input\n            name=\"dilution_concentration.v_1\"\n            type=\"number\"\n            width={\"4rem\"}\n            step=\"0.1\"\n            min=\"0\"\n            max=\"50000\"\n            normalize={decimal}\n            style={{\n              textAlign: \"center\"\n            }}\n            autoComplete=\"off\"\n            onChange={onChange('v_1')}\n          />\n          мл\n\n          на\n          <Input\n            name=\"dilution_concentration.v_2\"\n            type=\"number\"\n            width={\"4rem\"}\n            step=\"1\"\n            min=\"0\"\n            max=\"1000000\"\n            normalize={decimal}\n            style={{\n              textAlign: \"center\"\n            }}\n            autoComplete=\"off\"\n            onChange={onChange('v_2')}\n          />\n          мл. рабочего раствора\n\n        </Flex>\n      </Flex>\n    </Card>\n  )\n}\n","import React, {FunctionComponent} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {getFormValues} from \"redux-form\";\nimport {Card, Flex} from \"rebass\";\nimport {Label} from \"@rebass/forms\";\nimport {Input} from \"@/components/ui/ReduxForm/Input\";\nimport {decimal, number} from \"@/components/ui/ReduxForm/normalizers\";\nimport {Checkbox} from \"@/components/ui/ReduxForm/Checkbox\";\nimport {REDUX_FORM_NAME} from \"@/components/Calculator/constants\";\nimport {CalculatorFormValues} from \"@/components/Calculator/types\";\n\ninterface ToppingUpProps {\n}\n\nexport const ToppingUp: FunctionComponent<ToppingUpProps> = () => {\n  const {\n    topping_up_enabled,\n  } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n  return (\n    <Card>\n      <Checkbox name=\"topping_up_enabled\" label=\"Долив раствора\"/>\n      {topping_up_enabled ?\n        <Flex flexDirection=\"column\" style={{display: topping_up_enabled ? \"flex\" : \"none\"}}>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Label htmlFor=\"topping_up.newSolution.volume\">Новый объем, л</Label>\n            <Input\n              name=\"topping_up.newSolution.volume\"\n              width=\"3rem\"\n              type=\"number\"\n              step=\"0.1\"\n              min=\"1\"\n              pattern=\"^\\d+$\"\n              normalize={number}\n              required\n              style={{\n                textAlign: \"center\"\n              }}\n              autoComplete=\"off\"\n            />\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Label htmlFor=\"topping_up.currentSolution.volume\">Текущий объем, л</Label>\n            <Input\n              name=\"topping_up.currentSolution.volume\"\n              width=\"3rem\"\n              type=\"number\"\n              step=\"0.1\"\n              min=\"1\"\n              pattern=\"^\\d+$\"\n              normalize={number}\n              style={{\n                textAlign: \"center\"\n              }}\n              autoComplete=\"off\"\n            />\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\" paddingTop={2}>\n            <Label htmlFor=\"topping_up.currentSolution.EC\">Текущий EC, мСм/см</Label>\n            <Input\n              name=\"topping_up.currentSolution.EC\"\n              width=\"3rem\"\n              type=\"number\"\n              step=\"0.01\"\n              min=\"0\"\n              max=\"10\"\n              normalize={decimal}\n              style={{\n                textAlign: \"center\"\n              }}\n              autoComplete=\"off\"\n            />\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\" paddingTop={2}>\n            <Label htmlFor=\"topping_up.currentSolution.profileEC\">EC профиля раствора, мСм/см</Label>\n            <Input\n              name=\"topping_up.currentSolution.profileEC\"\n              width=\"3rem\"\n              type=\"number\"\n              step=\"0.01\"\n              min=\"0\"\n              max=\"10\"\n              normalize={decimal}\n              style={{\n                textAlign: \"center\"\n              }}\n              autoComplete=\"off\"\n            />\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\" paddingTop={2}>\n            <Label htmlFor=\"topping_up.currentSolution.profileSaltsConcentration\">Концентрация солей профиля раствора,\n              г/л</Label>\n            <Input\n              name=\"topping_up.currentSolution.profileSaltsConcentration\"\n              width=\"3rem\"\n              type=\"number\"\n              step=\"0.01\"\n              min=\"0\"\n              max=\"10\"\n              normalize={decimal}\n              style={{\n                textAlign: \"center\"\n              }}\n              autoComplete=\"off\"\n            />\n          </Flex>\n        </Flex>\n        : null}\n    </Card>\n  )\n}\n","import React, {ComponentType} from \"react\";\nimport {Box, Button, Flex} from \"rebass\";\nimport {IgnoreElement} from \"./IgnoreElement\";\nimport {Accuracy} from \"./Accuracy\";\nimport {Solution} from \"./Solution\";\nimport {Dilution} from \"./Dilution\";\nimport {ToppingUp} from \"./ToppingUp\";\n\ninterface OptionsProps {\n}\n\n\nexport const Options: ComponentType<OptionsProps> = () => {\n  return (\n    <Flex flexDirection=\"column\">\n      <Box flex={1}>\n        <Button width=\"100%\" my={2} type=\"submit\">Calculate</Button>\n      </Box>\n      <Box my={2}>\n        <Solution/>\n      </Box>\n      <Box my={2}>\n        <ToppingUp/>\n      </Box>\n      <Box my={2}>\n        <Dilution/>\n      </Box>\n      <Flex sx={{\n        '& > *': {flex: 1}\n      }}>\n        <IgnoreElement/>\n        <Box marginLeft={2}>\n          <Accuracy/>\n        </Box>\n      </Flex>\n\n    </Flex>\n  )\n}\n\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Broom = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 640 512\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M256.47 216.77l86.73 109.18s-16.6 102.36-76.57 150.12C206.66 523.85 0 510.19 0 510.19s3.8-23.14 11-55.43l94.62-112.17c3.97-4.7-.87-11.62-6.65-9.5l-60.4 22.09c14.44-41.66 32.72-80.04 54.6-97.47 59.97-47.76 163.3-40.94 163.3-40.94zM636.53 31.03l-19.86-25c-5.49-6.9-15.52-8.05-22.41-2.56l-232.48 177.8-34.14-42.97c-5.09-6.41-15.14-5.21-18.59 2.21l-25.33 54.55 86.73 109.18 58.8-12.45c8-1.69 11.42-11.2 6.34-17.6l-34.09-42.92 232.48-177.8c6.89-5.48 8.04-15.53 2.55-22.44z\"\n  }));\n});\nBroom.displayName = 'Broom';\nexport var BroomDimensions = {\n  height: 512,\n  width: 640\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Save = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M9 14h6v5H9zm2-9h2v2h-2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M7 14c0-1.103.897-2 2-2h6c1.103 0 2 .897 2 2v5h2.001L19 8.414 15.586 5H15v4H7V5H5v14h2v-5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5 21h14c1.103 0 2-.897 2-2V8a.997.997 0 00-.293-.707l-4-4A.996.996 0 0016 3H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2zm10-2H9v-5h6v5zM13 7h-2V5h2v2zM5 5h2v4h8V5h.586L19 8.414 19.001 19H17v-5c0-1.103-.897-2-2-2H9c-1.103 0-2 .897-2 2v5H5V5z\"\n  }));\n});\nSave.displayName = 'Save';\nexport var SaveDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Tune = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0V0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z\"\n  }));\n});\nTune.displayName = 'Tune';\nexport var TuneDimensions = {\n  height: 24,\n  width: 24\n};","import React, {FunctionComponent} from \"react\";\nimport {Box, Flex} from \"rebass\";\nimport {Input} from \"@/components/ui/ReduxForm/Input\";\nimport {number} from \"@/components/ui/ReduxForm/normalizers\";\n\ninterface RecipeElementFormProps {\n  name: string,\n}\n\nexport const getRecipeFieldName = (name: string) => `recipe.${name}`\n\n\n\nexport const RecipeElementForm: FunctionComponent<RecipeElementFormProps> = (props) => {\n  const {name} = props\n  return (\n    <Flex flexDirection=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          maxWidth='3rem'\n    >\n      <Box style={{textAlign: 'center'}}\n      >\n        {name}\n      </Box>\n      <Input\n        name={getRecipeFieldName(name)}\n        type=\"number\"\n        step=\"0.001\"\n        min=\"0\"\n        max=\"999\"\n        autoComplete=\"off\"\n        normalize={number}\n        maxWidth=\"3rem\"\n        style={{\n          textAlign: \"center\"\n        }}\n      />\n    </Flex>\n  )\n}\n","import React, {FC, useEffect, useRef, useState} from \"react\";\nimport {Input as RebassInput, InputProps as RebassInputProps} from \"@rebass/forms\";\nimport {Flex} from \"rebass\";\nimport styled from \"styled-components\";\nimport {countDecimals, round} from \"@/utils\";\n\ninterface InputProps extends RebassInputProps {\n}\n\ninterface Size {\n  width: number,\n  height: number\n}\n\n\nexport const StyledInput = styled(RebassInput)`\n  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n    width: 0;\n    height: 0;\n  }\n  -moz-appearance: textfield;\n`\n\n\ninterface StyledSpinnerButtonProps extends Size {\n\n}\nconst StyledSpinnerButton = styled.button<Partial<StyledSpinnerButtonProps>>`\n  width: ${(props) => props.width}px;\n  height: 3em;\n  position: absolute;\n  z-index: 30;\n`\n\n\nexport const NumberInput: FC<InputProps> = (props: any) => {\n  const step = parseFloat(props.step || 1)\n  const precision = countDecimals(step)\n  const [value, setValue] = useState(props.value)\n  const [showBtn, setShowBtn] = useState(false)\n  const [inputSize, setInputSize] = useState<Size | null>(null)\n  const inputRef = useRef<HTMLInputElement>()\n  const upButtonRef = useRef() as React.MutableRefObject<HTMLButtonElement>\n  const downButtonRef = useRef() as React.MutableRefObject<HTMLButtonElement>\n\n  const onFocusHandler = () => {\n    setShowBtn(true)\n  }\n  const onBlurHandler = (e: FocusEvent) => {\n    if (![upButtonRef?.current, downButtonRef?.current].includes(e.relatedTarget as any)) {\n      setShowBtn(false)\n    }\n  }\n\n  const onUpButtonHandler = () => {\n    inputRef?.current?.focus()\n    let v = round(value + step || 1, precision)\n    setValue(v)\n    props.onChange({target: {value: v}})\n  }\n  const onDownButtonHandler = () => {\n    inputRef?.current?.focus()\n    let v = round(value - step || 1, precision)\n    setValue(v)\n    props.onChange({target: {value: v}})\n  }\n\n  useEffect(() => {\n    if (value !== props.value) {\n      setValue(props.value)\n    }\n  }, [props.value, value])\n\n\n  useEffect(() => {\n    setInputSize({\n      width: inputRef?.current?.offsetWidth || 0,\n      height: inputRef?.current?.offsetHeight || 0,\n    })\n  }, [inputRef])\n\n\n\n  const offset = -(inputSize?.height || 0) + 5\n\n  return (\n    <Flex flexDirection=\"column\" sx={{position: 'relative'}}>\n      {showBtn ? <StyledSpinnerButton\n        ref={upButtonRef}\n        onClick={onUpButtonHandler}\n        style={{top: `${offset}px`}}\n        width={inputSize?.width}\n      >^</StyledSpinnerButton> : null}\n      <StyledInput\n        ref={inputRef}\n        {...props}\n        onFocus={onFocusHandler}\n        onBlur={onBlurHandler}\n        lang=\"en-US\"\n        value={value}\n      />\n      {showBtn ? <StyledSpinnerButton\n        ref={downButtonRef}\n        onClick={onDownButtonHandler}\n        style={{bottom: `${offset}px`}}\n        width={inputSize?.width}\n      >v</StyledSpinnerButton> : null}\n    </Flex>\n  )\n}\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\nimport {Box, Button, Flex} from \"rebass\";\n\nimport {useFormName, useFormValues} from \"@/hooks/ReduxForm\";\nimport {CalculatorFormValues} from \"@/components/Calculator/types\";\nimport {getNPKDetailInfo} from '@/calculator/helpers';\nimport {Elements, NeedElements} from \"@/calculator/types\";\nimport {decimal} from \"@/components/ui/ReduxForm/normalizers\";\nimport {FERTILIZER_ELEMENT_NAMES, MACRO_ELEMENT_NAMES, MICRO_ELEMENT_NAMES} from \"@/calculator/constants\";\nimport {NumberInput as StyledInput} from \"@/components/ui/RebassWidgets/Number\";\nimport {calculateEC, convertProfileWithEC, fixIonicBalanceByCa, fixIonicBalanceByS} from \"@/calculator/profile\";\nimport {StyledBalanceCell} from \"@/components/Calculator/Options/Recipe\";\nimport {entries, round} from \"@/utils\";\nimport {ModalActions} from \"@/components/ui/Modal/Modal\";\nimport {Input} from \"@rebass/forms\";\nimport {HPGFormat} from \"@/calculator/format/hpg\";\nimport {\n  ALLOWED_ELEMENT_IN_MATRIX,\n  convertProfileWithRatio,\n  getMultiElementRatio,\n  getProfileRatioMatrix,\n  OPTIMAL_RATIO\n} from \"@/calculator/ratio\";\n\ninterface RecipeTuneFormProps {\n  modal: ModalActions,\n  onSave: (npk: NeedElements) => void\n}\n\nconst ELEMENT_IN_MATRIX = ALLOWED_ELEMENT_IN_MATRIX.filter(el => ![\"NH4\", \"NO3\"].includes(el))\n\nconst IMPORTANT_CELLS = ['K:N', 'K:Ca', 'K:Mg', \"NH4:NO3\", \"P\", \"Cl\", \"EC\", \"B\"]\nconst BLOCKING_CELLS = [\"N:Ca\", \"Ca:N\", \"Ca:K\", \"Ca:Mg\", \"Mg:K\", \"Mg:Ca\"]\n\n\nexport function RecipeTuneForm(props: RecipeTuneFormProps) {\n  const formValue = useFormValues<CalculatorFormValues>(useFormName())[0]\n  const [recipe, setRecipe] = useState(formValue.recipe)\n  const recipeInfo = getNPKDetailInfo(recipe as Elements)\n  const [ratio, setRatio] = useState(recipeInfo.ratio)\n  const [EC, setEC] = useState(recipeInfo.EC)\n\n  const [profileString, setProfileString] = useState(HPGFormat.stringifyProfile(formValue.recipe))\n\n  const onChangeRecipe = (el: FERTILIZER_ELEMENT_NAMES, value: number) => {\n    let newRecipe = {...recipe, [el]: value}\n    if (el === 'S') {\n      newRecipe.Ca = fixIonicBalanceByCa(newRecipe)\n    } else {\n      newRecipe.S = fixIonicBalanceByS(newRecipe)\n    }\n    setRecipe(newRecipe)\n    setEC(calculateEC(newRecipe))\n    setRatio(getProfileRatioMatrix(newRecipe))\n  }\n\n  const onChangeEC = (val: number) => {\n    let newRecipe = convertProfileWithEC(recipe as Elements, val)\n    setRecipe(newRecipe)\n    setEC(calculateEC(newRecipe))\n    setRatio(getProfileRatioMatrix(newRecipe))\n  }\n  const onChangeRatio = (El1: ALLOWED_ELEMENT_IN_MATRIX, El2: ALLOWED_ELEMENT_IN_MATRIX, val: number) => {\n    if (val) {\n      let newNpk = convertProfileWithRatio(recipe, {[El1]: {[El2]: val}})\n      newNpk = convertProfileWithEC(newNpk, EC)\n      setRecipe(newNpk)\n      setEC(calculateEC(newNpk))\n      setRatio(getProfileRatioMatrix(newNpk))\n    } else {\n      setRatio({...ratio, [El1]: {...ratio[El1], [El2]: val}})\n    }\n  }\n\n  const onSaveHandler = () => {\n    props.onSave(recipe)\n    props.modal.close()\n  }\n\n  function onChangeProfileString(s: string) {\n    let npk = HPGFormat.parseProfileString(s)\n    if (entries(npk).length) {\n      npk = HPGFormat.fillNPKElements(npk)\n      setProfileString(s)\n      setRecipe(npk)\n      setEC(calculateEC(npk))\n      setRatio(getProfileRatioMatrix(npk))\n    } else {\n      // Reset\n      setProfileString(HPGFormat.stringifyProfile(recipe))\n    }\n  }\n\n  useEffect(() => {\n    setProfileString(HPGFormat.stringifyProfile(recipe))\n  }, [recipe])\n\n  return (\n    <Flex flexDirection={'column'}>\n      <Flex>\n        {MACRO_ELEMENT_NAMES.map(el => (\n          <RecipeInput\n            name={el}\n            label={el}\n            value={recipe[el]}\n            onChange={val => onChangeRecipe(el, val)}\n            step={0.1}\n          />\n        ))}\n        <RecipeInput name={'EC'} label={\"EC\"} value={EC} onChange={onChangeEC}/>\n      </Flex>\n      <Flex justifyContent=\"space-around\">\n        <StyledBalanceCell name=\"ΔΣ I\"\n                           value={recipeInfo.ion_balance}\n                           title={\"Ионный баланс, должен быть около нуля\"}\n        />\n        <StyledBalanceCell name=\"EC\"\n                           value={recipeInfo.EC}\n                           title={\"мСм/см\"}\n        />\n        <RecipeInput\n          name={'NH4:NO3'}\n          label={\"%NH4\"}\n          value={round(ratio.NH4.NO3 * 100, 1)}\n          step={0.1}\n          onChange={v => onChangeRatio('NH4', 'NO3', v / 100)}\n        />\n        <StyledBalanceCell name=\"K:N\" value={recipeInfo.ratio.K.N}/>\n        <StyledBalanceCell name=\"K:Ca\" value={recipeInfo.ratio.K.Ca}/>\n        <StyledBalanceCell name=\"K:Mg\" value={recipeInfo.ratio.K.Mg}/>\n        <StyledBalanceCell name=\"K:Ca:Mg\"\n                           value={getMultiElementRatio(recipe, ['K', 'Ca', 'Mg']).display}/>\n      </Flex>\n      <Flex>\n        <table>\n          <thead>\n          <tr>\n            <th></th>\n            {ELEMENT_IN_MATRIX.map(el => <th>{el}</th>)}\n          </tr>\n          </thead>\n          <tbody>\n          {ELEMENT_IN_MATRIX.map(el => (\n            <tr>\n              <th>{el}</th>\n              {ELEMENT_IN_MATRIX.map(el2 => (\n                <td style={{textAlign: 'center'}}>\n                  {el === el2 ? 1 : (\n                    <RecipeInput\n                      name={`${el}:${el2}`}\n                      value={round(ratio?.[el]?.[el2] || 0, 2)}\n                      onChange={value => onChangeRatio(el, el2, value)}\n                    />\n                  )}\n                </td>\n              ))}\n\n            </tr>\n\n          ))}\n          </tbody>\n        </table>\n      </Flex>\n      <Flex justifyContent=\"space-around\">\n        {MICRO_ELEMENT_NAMES.map(el => (\n          <RecipeInput\n            name={el}\n            label={el}\n            value={(recipe[el] || 0) * 1000}\n            onChange={val => onChangeRecipe(el, val / 1000)}\n            step={1}\n          />\n        ))}\n      </Flex>\n      <Flex marginY={2}>\n        <Input value={profileString}\n               onChange={e => setProfileString(e.target.value)}\n               onBlur={e => onChangeProfileString(e.target.value)}\n        />\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Button type=\"button\" onClick={props.modal.close}>Cancel</Button>\n        <Button type=\"button\" onClick={onSaveHandler}>Save</Button>\n      </Flex>\n    </Flex>\n  )\n}\n\ninterface RecipeInputProps {\n  name: string,\n  label?: string,\n  onChange?: (value: number) => void,\n  value?: number,\n  step?: number,\n}\n\nexport function getOptimalRatioDisplay(name: string): string| null {\n  const [el1, el2] = name.split(\":\");\n  let ratio = OPTIMAL_RATIO[name] || OPTIMAL_RATIO[`${el2}:${el1}`]\n  if (ratio) {\n    if (!OPTIMAL_RATIO[name]) {\n      ratio = ratio.map(n => round(1/n, 1)).reverse()\n    }\n    return `Оптимальный диапазон: ${ratio.join(' — ')}`\n  }\n  return null\n}\n\n\nfunction RecipeInput(props: RecipeInputProps) {\n  const {\n    name, label, onChange,\n    value = 0,\n    step = 0.01\n  } = props\n\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value) {\n      const val = decimal(e.target.value)\n      onChange && onChange(val)\n    }\n  }\n\n  const isImportant = IMPORTANT_CELLS.includes(name)\n  const isBlocking = BLOCKING_CELLS.includes(name)\n  let title: string | undefined = undefined;\n  if (isImportant) {\n    title = \"Основные соотношения.\"\n  }\n  if (isBlocking) {\n    title = \"Блокирующие соотношения.\"\n  }\n  let ratio = getOptimalRatioDisplay(name)\n  if (ratio) {\n    title = `${title || \"\"} ${ratio}`\n  }\n\n  return (\n    <Flex flexDirection=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          maxWidth='6rem'\n    >\n      {label ?\n        <Box style={{textAlign: 'center'}}>\n          {label}\n        </Box>\n        : null\n      }\n      <StyledInput\n        onChange={onChangeHandler}\n        name={name}\n        value={value}\n        title={title}\n        type=\"number\"\n        step={step.toString()}\n        min=\"0\"\n        max=\"9999\"\n        autoComplete=\"off\"\n        maxWidth=\"6rem\"\n        lang=\"en-US\"\n        style={{\n          textAlign: \"center\",\n          backgroundColor: isImportant ? \"#b3f7b8\" : undefined,\n          color: isBlocking ? \"red\" : undefined,\n          borderColor: \"black\",\n        }}\n      />\n    </Flex>\n  )\n}\n","import React, {FunctionComponent, useState} from \"react\";\nimport {Box, Card, Flex, Heading, Text} from \"rebass\";\nimport {Broom} from '@styled-icons/fa-solid/Broom'\nimport {Save} from '@styled-icons/boxicons-regular/Save'\nimport {Tune} from '@styled-icons/material-sharp/Tune'\nimport {getRecipeFieldName, RecipeElementForm} from \"./RecipeElementForm\";\nimport {useFormName, useFormValues} from \"@/hooks/ReduxForm\";\nimport {FERTILIZER_ELEMENT_NAMES, MACRO_ELEMENT_NAMES} from \"@/calculator/constants\";\n\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {Dropdown} from \"@/components/ui/Dropdown/Dropdown\";\nimport {CalculatorState, Recipe as RecipeType} from \"@/components/Calculator/types\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {recipePush, recipeRemove} from \"@/components/Calculator/actions\";\nimport {Elements, NeedElements} from \"@/calculator/types\";\nimport {getNPKDetailInfo, getEmptyElements} from \"@/calculator/helpers\";\nimport {Modal} from \"@/components/ui/Modal/Modal\";\nimport {getOptimalRatioDisplay, RecipeTuneForm} from \"@/components/Calculator/Options/RecipeTuneForm\";\nimport {round} from \"@/utils\";\nimport {DEFAULT_MICRO_RECIPE} from \"@/components/Calculator/constants/recipes\";\n\ninterface StyledBalanceCellProps {\n  name: string,\n  value: number|string,\n  title?: string,\n}\n\n\n\nexport const StyledBalanceCell: FunctionComponent<StyledBalanceCellProps> = (props) => {\n  const ratio = getOptimalRatioDisplay(props.name)\n  let title = (`${props.title||\"\"} ${ratio||\"\"}`).trim()\n\n  return (\n    <Flex flexDirection=\"column\" m={1} title={title || undefined} alignItems=\"center\">\n      <Heading fontSize={1}>{props.name}</Heading>\n      <Text>{props.value}</Text>\n    </Flex>\n  )\n}\n\ninterface RecipeProps {\n}\n\nexport const Recipe: FunctionComponent<RecipeProps> = () => {\n  const {\n    recipes = [],\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n\n  const [values, setValue] = useFormValues(useFormName())\n  const [selected, setSelected] = useState<RecipeType | undefined>(recipes?.[0])\n\n  const dispatch = useDispatch()\n\n  const NPKBalance = getNPKDetailInfo(values.recipe || getEmptyElements())\n\n  const onChangeHandler = (item: RecipeType | null) => {\n    item && setSelected(item)\n    item && setRecipe({...DEFAULT_MICRO_RECIPE, ...item.elements})\n  }\n\n  const setRecipe = (elements: NeedElements) => {\n    for (let [name, value] of Object.entries(elements)) {\n      setValue(getRecipeFieldName(name), value)\n    }\n  }\n  const resetRecipe = () => {\n    let zeroValues = Object.fromEntries(FERTILIZER_ELEMENT_NAMES.map(el => [el, 0])) as unknown as Elements\n    setRecipe(zeroValues)\n  }\n  const onEditHandler = (value: string) => {\n    let zeroValues = Object.fromEntries(FERTILIZER_ELEMENT_NAMES\n      .map(el => [el, selected?.elements[el] || 0])) as unknown as Elements\n    setSelected({name: value, elements: zeroValues})\n  }\n\n  const onAddHandler = () => {\n    if (!selected) {\n      return\n    }\n    const recipe = {...selected, elements: values.recipe}\n    dispatch(recipePush(recipe))\n  }\n  const onRemoveItemHandler = (item: RecipeType) => {\n    dispatch(recipeRemove(item))\n  }\n  return (\n    <Card>\n      <Flex flexDirection=\"column\">\n        <Flex\n        >\n          <Box flex={1} mx={2}>\n            <Dropdown<RecipeType>\n              value={selected}\n              items={recipes}\n              onChange={onChangeHandler}\n              onEdit={onEditHandler}\n              renderItem={({item}) => (\n                <Flex flex={1} justifyContent=\"space-between\">\n                  <Box width={3} backgroundColor={item.color || 'gray'}>\n                  </Box>\n                  <Box flex={1} mx={2}>\n                    {item.name}\n                  </Box>\n                  <button onClick={event => {\n                    event.stopPropagation()\n                    onRemoveItemHandler(item)\n                  }}>-\n                  </button>\n                </Flex>\n              )}\n              renderValue={item => item?.name || \"\"}\n            />\n          </Box>\n          <Box>\n            <IconButton\n              marginRight={1}\n              component={Save}\n              onClick={onAddHandler}\n            />\n            <IconButton\n              component={Broom}\n              onClick={resetRecipe}\n            />\n          </Box>\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          {\n            MACRO_ELEMENT_NAMES.map(n => <RecipeElementForm name={n}/>)\n          }\n        </Flex>\n        <Flex justifyContent=\"space-around\">\n          <Modal\n            title=\"Настройка профиля\"\n            button={({modal}) => (\n              <IconButton\n              marginRight={1}\n              component={Tune}\n              onClick={modal.open}\n              />\n            )}\n            container={({modal}) => (\n              <>\n                <RecipeTuneForm\n                  modal={modal}\n                  onSave={setRecipe}\n                />\n              </>\n            )}\n          />\n          <StyledBalanceCell name=\"ΔΣ I\"\n                             value={NPKBalance.ion_balance}\n                             title={\"Ионный баланс, дб == 0±5%\"}\n          />\n          <StyledBalanceCell name=\"EC\" value={NPKBalance.EC}/>\n          <StyledBalanceCell name=\"%NH4\" value={round(NPKBalance.ratio.NH4.NO3 * 100, 1)}/>\n          <StyledBalanceCell name=\"K:N\" value={NPKBalance.ratio.K.N}/>\n          <StyledBalanceCell name=\"K:Ca\" value={NPKBalance.ratio.K.Ca}/>\n          <StyledBalanceCell name=\"K:Mg\" value={NPKBalance.ratio.K.Mg}/>\n        </Flex>\n      </Flex>\n    </Card>\n  )\n}\n","import React from \"react\";\nimport {countDecimals, round} from \"@/utils\";\nimport {useSelector} from \"react-redux\";\nimport {getFormValues} from \"redux-form\";\nimport {REDUX_FORM_NAME} from \"@/components/Calculator/constants\";\nimport {CalculatorFormValues} from \"@/components/Calculator/types\";\nimport {FertilizerWeights} from \"@/calculator\";\n\ninterface ResultFertilizerListProps {\n    fertilizers: FertilizerWeights[],\n}\n\n\nexport function ResultFertilizerList(props: ResultFertilizerListProps) {\n    const {fertilizers} = props\n    const {\n      accuracy\n    } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n    return (\n        <>\n            {fertilizers.map(f => {\n                return (\n                  <li key={f.id}>\n                      {round(f.weight, countDecimals(accuracy))}г\n                      &nbsp;\n                      <span title=\"Объем или вес раствора\">{f.volume && `(${f.volume} мл${f.liquid_weight? `, ${f.liquid_weight}г`: ''})`}</span>\n                      &nbsp;\n                      {f.id}\n                  </li>\n                )\n            })}\n        </>\n    )\n}\n","import {useSelector} from \"react-redux\";\nimport {CalculatorFormValues, CalculatorState} from \"@/components/Calculator/types\";\nimport {entries, toMap} from \"@/utils\";\nimport {groupFertilizerBySolution} from \"@/calculator/dilution\";\nimport {FertilizerWeights} from \"@/calculator\";\nimport {calculatePPM} from \"@/calculator/helpers\";\nimport {getFormValues} from \"redux-form\";\nimport {REDUX_FORM_NAME} from \"@/components/Calculator/constants\";\n\nexport function usePPM() {\n  const {\n    result,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n  const {\n    solution_volume,\n  } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n  const fertilizerWeights = (result?.fertilizers || []).map(f => ({...f}))\n  const ppm = calculatePPM(\n    fertilizerWeights,\n    solution_volume,\n  );\n  return ppm\n}\n\nexport function useFertilizerSolutionGroup() {\n  const {\n    fertilizers,\n    result,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n\n  const fertilizersWeights = (result?.fertilizers || []).map(f => ({...f}))\n\n  const fertilizerWeightsMap = toMap(fertilizersWeights, 'id')\n\n  const pairs = entries(groupFertilizerBySolution(fertilizers))\n    .sort(([a], [b]) => a > b ? 1 : -1)\n  const fertilizerWeightGroups: [typeof pairs[0][0], FertilizerWeights[]][] = pairs\n    .map(([g, fList]) => {\n        let ws = fList\n          .map((f) => fertilizerWeightsMap[f.id])\n          .filter(f => f)\n        return [g, ws]\n      }\n    )\n\n  return fertilizerWeightGroups\n\n}\n","import React from \"react\";\nimport {dilution_solution, DilutionResult, normalizeConcentration} from \"@/calculator/dilution\";\nimport {useSelector} from \"react-redux\";\nimport {getFormValues} from \"redux-form\";\nimport {REDUX_FORM_NAME} from \"@/components/Calculator/constants\";\nimport {CalculatorFormValues} from \"@/components/Calculator/types\";\nimport {useFertilizerSolutionGroup, usePPM} from \"@/components/Calculator/Result/hooks\";\nimport {Flex, Heading} from \"rebass\";\nimport {ppmToEC} from \"@/calculator/helpers\";\nimport {round} from \"@/utils\";\n\ninterface DilutionResultProps {\n}\n\nexport function ResultDilution(props: DilutionResultProps) {\n  const {\n    dilution_enabled,\n    solution_concentration= normalizeConcentration(1),\n    solution_volume = 1,\n    dilution_concentration = normalizeConcentration(1),\n  } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n\n  const fertilizerWeightGroups = useFertilizerSolutionGroup()\n  let ppm = usePPM()\n\n  if (!dilution_enabled) {\n    return null\n  }\n\n  const dilution_con = normalizeConcentration(dilution_concentration)\n\n  const newPpm = round((dilution_con.k * ppm) / solution_concentration.k)\n\n  let dilution: DilutionResult[] | null = null\n\n  dilution = dilution_solution({\n    id: \"Total\",\n    volume: solution_volume,\n    concentration: solution_concentration,\n  }, fertilizerWeightGroups.map(([g]) => (\n    {\n      id: g, concentration: dilution_con\n    })))\n\n  return (\n    <>\n      <Flex flexDirection=\"column\" width=\"75%\">\n        <Heading fontSize={2}>Разбавление</Heading>\n          <ul>\n            {dilution.map(d => (\n              <li>Раствор {d.id} - {d.volume < 1 ? `${d.volume * 1000}мл`: `${d.volume}л` }</li>\n            ))}\n            <li>\n              Долить до {solution_volume}л\n            </li>\n            <li>\n              <b>TDS:</b> {newPpm} ppm; <b>EC:</b> {ppmToEC(newPpm, 1)} мСм/см\n            </li>\n          </ul>\n      </Flex>\n\n    </>\n  )\n}\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Save = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 448 512\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M433.941 129.941l-83.882-83.882A48 48 0 00316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 00-14.059-33.941zM272 80v80H144V80h128zm122 352H54a6 6 0 01-6-6V86a6 6 0 016-6h42v104c0 13.255 10.745 24 24 24h176c13.255 0 24-10.745 24-24V83.882l78.243 78.243a6 6 0 011.757 4.243V426a6 6 0 01-6 6zM224 232c-48.523 0-88 39.477-88 88s39.477 88 88 88 88-39.477 88-88-39.477-88-88-88zm0 128c-22.056 0-40-17.944-40-40s17.944-40 40-40 40 17.944 40 40-17.944 40-40 40z\"\n  }));\n});\nSave.displayName = 'Save';\nexport var SaveDimensions = {\n  height: 512,\n  width: 448\n};","import React from \"react\";\nimport {Flex} from \"rebass\";\n\nimport {Form, reduxForm} from 'redux-form'\nimport {ReduxFormType} from \"@/components/ui/ReduxForm/types\";\nimport {Input} from \"@/components/ui/ReduxForm/Input\";\nimport {FertilizerInfo, MixerOptions} from \"@/components/Calculator/types\";\n\ninterface AddEditProps {\n}\n\nexport interface MixerFormType extends MixerOptions {\n  fertilizers: FertilizerInfo[]\n}\n\n\nconst AddEditForm: ReduxFormType<AddEditProps, MixerFormType> = (props) => {\n\n  return (\n    <Form>\n      <Flex flexDirection='column'>\n        <Input name=\"url\" title=\"URL\" label=\"URL\"/>\n      </Flex>\n    </Form>\n  )\n}\n\n\nexport const MixerOptionsForm = reduxForm<MixerFormType>({\n  form: 'mixerOptions',\n  enableReinitialize: true\n})(AddEditForm)\n","import {Modal, ModalActions} from \"@/components/ui/Modal/Modal\";\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {Save} from \"@styled-icons/fa-regular/Save\";\nimport {MixerFormType, MixerOptionsForm} from \"@/components/Calculator/Mixer/MixerForm\";\nimport {Button, Flex} from \"rebass\";\nimport React, {ComponentType} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {getFormValues} from \"redux-form\";\nimport {REDUX_FORM_NAME} from \"@/components/Calculator/constants\";\nimport {CalculatorFormValues, CalculatorState} from \"@/components/Calculator/types\";\nimport {useFormValues} from \"@/hooks/ReduxForm\";\n\nexport const MixerModal: ComponentType = () => {\n  const {\n    fertilizers,\n    mixerOptions\n  } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n  const {\n    result,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n\n\n  const initialMixerOptions = {\n    ...mixerOptions,\n    fertilizers\n  }\n  const [formValues] = useFormValues<MixerFormType>('mixerOptions')\n\n  function onSave(modal: ModalActions) {\n    const weights = Object.fromEntries((result?.fertilizers || []).map(f => [f.id, f]))\n    let params = formValues.fertilizers\n      .filter(f => f.pump_number && weights?.[f.id]?.liquid_weight)\n      .map(f => `p${f.pump_number}=${weights?.[f.id]?.liquid_weight}`)\n      .join('&')\n\n    window.open(`http://${formValues.url}?${params}`, '_blank')\n    modal.close()\n\n  }\n\n  return (\n    <Modal\n    button={({modal}) => (\n      <IconButton\n        padding={1}\n        alignSelf=\"center\"\n        component={Save}\n        backgroundColor={'primary'}\n        onClick={modal.open}\n      >Отправить на миксер</IconButton>\n    )}\n    container={({modal}) => (\n      <>\n        <MixerOptionsForm\n          initialValues={initialMixerOptions}\n        />\n        <Flex justifyContent=\"flex-end\">\n          <Button type=\"button\" onClick={() => onSave(modal)}>Приготовить</Button>\n        </Flex>\n      </>\n    )}\n  />\n  )\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Button, Card, Flex, Heading, Text} from \"rebass\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {CalculatorFormValues, CalculatorState} from \"../types\";\nimport {getFormValues} from \"redux-form\";\nimport {REDUX_FORM_NAME} from \"../constants\";\nimport {MACRO_ELEMENT_NAMES, MICRO_ELEMENT_NAMES} from \"@/calculator/constants\";\nimport {Element} from \"../FertilizerSelect/SelectedListItem\";\nimport styled from \"styled-components\";\nimport {getEmptyElements, getNPKDetailInfo} from \"@/calculator/helpers\";\nimport {StyledBalanceCell} from \"../Options/Recipe\";\nimport {ResultFertilizerList} from \"./ResultFertilizerList\";\nimport {useFertilizerSolutionGroup} from \"./hooks\";\nimport {ResultDilution} from \"@/components/Calculator/Result/ResultDilution\";\nimport {round, sum} from \"@/utils\";\nimport {Modal, ModalActions} from \"@/components/ui/Modal/Modal\";\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {\n  AddEdit as FertilizerAddEditForm,\n  formToFertilizer,\n  getInitialValues\n} from \"@/components/Calculator/FertilizerManager/AddEdit\";\nimport {Save} from \"@styled-icons/fa-regular/Save\";\nimport {buildFertilizerFromSolution} from \"@/calculator/fertilizer\";\nimport {fertilizerPush} from \"@/components/Calculator/actions\";\nimport {useFormValues} from \"@/hooks/ReduxForm\";\nimport {AddEditFormType} from \"@/components/Calculator/FertilizerManager/types\";\nimport {FERTILIZER_EDIT_FORM_NAME} from \"@/components/Calculator/FertilizerManager/constants\";\nimport {MixerModal} from \"@/components/Calculator/Mixer/Mixer\";\n\ninterface ResultProps {\n}\n\nconst StyledList = styled.ul`\n  @media screen and (min-width: 800px) {\n    width: 75%;\n  }\n`\n\nexport const Result: FunctionComponent<ResultProps> = () => {\n  const {\n    fertilizers,\n    result,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n\n  const {\n    solution_volume,\n  } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n\n  const fertilizerWeightGroups = useFertilizerSolutionGroup()\n\n  const elements = result?.elements || getEmptyElements()\n  const deltaElements = result?.deltaElements || getEmptyElements()\n  const NPKBalance = getNPKDetailInfo(elements)\n\n  // const liquidFertilizersVolume = round(sum((result?.fertilizers || []).map(f => f.volume || 0)), 1)\n  const totalWeight = round(sum((result?.fertilizers || []).map(f => f.weight || 0)), 2)\n\n\n  const [formValues] = useFormValues<AddEditFormType>(FERTILIZER_EDIT_FORM_NAME)\n  const dispatch = useDispatch()\n  const onSave = (modal: ModalActions) => {\n    dispatch(fertilizerPush(formToFertilizer(formValues)))\n    modal.close()\n  }\n  const complexFertilizer = buildFertilizerFromSolution(\"\", {\n    fertilizers,\n    fertilizer_weights: result?.fertilizers || [],\n    volume: solution_volume,\n  })\n\n  return (\n    <Card>\n      <Flex alignItems=\"center\" flexDirection=\"column\" width=\"100%\">\n        <Heading fontSize={2}>Результат расчета</Heading>\n        <Flex justifyContent=\"space-around\" width=\"100%\">\n          {elements && MACRO_ELEMENT_NAMES.map(\n            k => <Element\n              key={k}\n              name={k}\n              value={round(elements[k])}\n              delta={round(deltaElements[k])}\n            />\n          )}\n        </Flex>\n        <Flex justifyContent=\"space-around\" width=\"100%\">\n          {elements && MICRO_ELEMENT_NAMES.map(\n            k => <Element\n              key={k}\n              name={k}\n              value={round(elements[k] * 1000)}\n              delta={round(deltaElements[k] * 1000)}\n            />\n          )}\n        </Flex>\n        <Flex justifyContent=\"space-around\">\n          <StyledBalanceCell\n            name=\"ΔΣ I\"\n            value={NPKBalance.ion_balance}\n            title={\"Ионный баланс, дб == 0±5%\"}\n          />\n          <StyledBalanceCell name=\"EC\" value={NPKBalance.EC}/>\n          <StyledBalanceCell name=\"%NH4\" value={round((NPKBalance.ratio?.NH4?.NO3 || 0) * 100, 1)}/>\n          <StyledBalanceCell name=\"K:N\" value={NPKBalance.ratio.K.N}/>\n          <StyledBalanceCell name=\"K:Ca\" value={NPKBalance.ratio.K.Ca}/>\n          <StyledBalanceCell name=\"K:Mg\" value={NPKBalance.ratio.K.Mg}/>\n        </Flex>\n        <StyledList>\n          <li>Для {solution_volume}л раствора</li>\n          {fertilizerWeightGroups.map(([g, f_weights]) =>\n            (<li>\n                <b>\n                  Раствор {g}\n                </b>\n                <ul>\n                  <ResultFertilizerList fertilizers={f_weights}/>\n                </ul>\n              </li>\n            )\n          )}\n          <li>Всего солей: {totalWeight} г.</li>\n          <li>Концентрация солей: {round(totalWeight / solution_volume, 2)} г/л</li>\n        </StyledList>\n        <ResultDilution/>\n        {result?.stats &&\n        <Text>\n          Обработано вариантов: {result?.stats.count} Время: {result?.stats.time} сек\n        </Text>\n        }\n        <Flex>\n\n          {result?.fertilizers ?\n            <Flex>\n              <Modal\n                button={({modal}) => (\n                  <IconButton\n                    padding={1}\n                    alignSelf=\"center\"\n                    component={Save}\n                    backgroundColor={'primary'}\n                    onClick={modal.open}\n                  >Сохранить комплекс</IconButton>\n                )}\n                container={({modal}) => (\n                  <>\n                    <FertilizerAddEditForm\n                      initialValues={getInitialValues(complexFertilizer)}\n                    />\n                    <Flex justifyContent=\"flex-end\">\n                      <Button type=\"button\" onClick={() => onSave(modal)}>Save</Button>\n                    </Flex>\n                  </>\n                )}\n              />\n            </Flex>\n            : null}\n          <Flex>\n            <MixerModal/>\n          </Flex>\n        </Flex>\n      </Flex>\n    </Card>\n  )\n}\n\n","import React from \"react\";\nimport {Export} from \"@styled-icons/boxicons-regular/Export\"\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {useSelector} from \"react-redux\";\nimport {CalculatorState} from \"@/components/Calculator/types\";\nimport {FERTILIZER_ELEMENT_NAMES} from \"@/calculator/constants\";\nimport {csvExport} from \"@/utils/csv\";\nimport {saveData} from \"@/utils/downloads\";\n\ninterface ExportRecipesProps {\n}\n\nexport function ExportRecipes(props: ExportRecipesProps) {\n  const {\n    recipes,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n  const doExport = () => {\n    const rows = recipes.map(f => {\n      const cols = FERTILIZER_ELEMENT_NAMES.map(n => f.elements[n])\n      return [f.name, ...cols]\n    })\n    const csvData = csvExport(rows, {columns: ['Профиль', ...FERTILIZER_ELEMENT_NAMES], header: true})\n    saveData(csvData, \"Профили.csv\")\n  }\n  return (\n    <>\n      <IconButton onClick={doExport} component={Export}/>\n    </>\n  )\n}\n","import React, {ChangeEvent, createRef, useEffect, useState} from \"react\";\nimport {Import} from \"@styled-icons/boxicons-regular/Import\"\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {csvParse} from \"@/utils/csv\";\nimport {FERTILIZER_ELEMENT_NAMES} from \"@/calculator/constants\";\nimport {useDispatch} from \"react-redux\";\nimport {recipePush} from \"@/components/Calculator/actions\";\n\ninterface ImportRecipesProps {\n}\n\nconst COLUMNS = ['id', ...FERTILIZER_ELEMENT_NAMES]\n\nexport function ImportRecipes(props: ImportRecipesProps) {\n  const buttonRef = createRef<HTMLButtonElement>()\n  const dispatch = useDispatch()\n  const [size, setSize] = useState({width: 0, height: 0})\n  useEffect(() => {\n    const newSize = {\n      width: buttonRef.current?.offsetWidth || 0,\n      height: buttonRef.current?.offsetHeight || 0,\n    }\n    if (size.width !== newSize.width) {\n      setSize(newSize)\n    }\n  }, [buttonRef, size.width])\n\n  const loadCSV = (csv: string) => {\n    const p = csvParse(csv, {columns: COLUMNS})\n    if (isNaN(parseInt(p[0].P))) {\n      p.splice(0, 1)\n    }\n    for (let {id, ...npk} of p) {\n      dispatch(recipePush({name: id, elements: npk}))\n    }\n  }\n\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e.target.value, e.target.files?.[0])\n    const file = e.target.files?.[0]\n    if (!file) {\n      return file\n    }\n    let reader = new FileReader();\n    reader.onload = () => {\n      console.log(reader.result)\n      loadCSV(reader.result as string)\n\n    }\n    reader.readAsText(file)\n\n  }\n  return (\n    <>\n      <IconButton\n        sx={{\n          position: \"relative\"\n        }}\n        ref={buttonRef}\n        component={Import}\n      >\n        <input type=\"file\"\n               accept=\"text/csv, .csv\"\n               onChange={event => handleOnChange(event)}\n               style={{\n                 top: 0,\n                 left: 0,\n                 position: \"absolute\",\n                 opacity: 0,\n                 ...size,\n               }}\n        />\n      </IconButton>\n    </>\n  )\n}\n","import {SxStyleProp} from \"rebass\";\n\nexport function mobileStyles(styles: SxStyleProp) {\n  return {\n    '@media screen and (max-width: 800px)': styles\n  }\n}\n","import React from \"react\";\nimport {Export} from \"@styled-icons/boxicons-regular/Export\"\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {useSelector} from \"react-redux\";\nimport {CalculatorState} from \"@/components/Calculator/types\";\nimport {saveData} from \"@/utils/downloads\";\nimport {ExportStateType} from \"@/calculator/format/types\";\n\ninterface ExportRecipesProps {\n}\n\nexport function ExportState(props: ExportRecipesProps) {\n  const {\n    calculationForm,\n    result,\n    fertilizers,\n    recipes,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n  const doExport = () => {\n    const created = new Date().toISOString()\n    const state: ExportStateType = {\n      meta: {\n        version: __VERSION__,\n        ref: __COMMIT_HASH__,\n        created: created\n      },\n      calculator: {\n        calculationForm,\n        result,\n        fertilizers,\n        recipes,\n      }\n    }\n    const fileData = JSON.stringify(state, null, 4)\n    saveData(fileData, `CalculatorSettings-${created}.json`)\n  }\n  return (\n    <>\n      <IconButton onClick={doExport} component={Export}\n                  title={\"Экспорт настроек\"}\n      />\n    </>\n  )\n}\n","import {BaseFormat} from \"./base\";\nimport {ExportStateType} from \"./types\";\n\n\nexport class JSONFormat extends BaseFormat {\n  static ext = \".json\"\n\n  export(state: ExportStateType): string {\n    return JSON.stringify(state);\n  }\n\n  import(string: string): ExportStateType {\n    return JSON.parse(string) as ExportStateType;\n  }\n}\n","import {JSONFormat} from \"./json\";\nimport {HPGFormat} from \"./hpg\";\n\nexport const FORMATS = [\n  JSONFormat,\n  HPGFormat\n]\n\nexport const FORMATS_MAP = Object.fromEntries(FORMATS.map(f => [f.ext, f]))\nexport const ACCEPT_FORMATS = FORMATS.map(f => f.ext).join(', ')\n","import React, {ChangeEvent, createRef, useEffect, useState} from \"react\";\nimport {Import} from \"@styled-icons/boxicons-regular/Import\"\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {useDispatch} from \"react-redux\";\nimport {loadStateStart} from \"@/components/Calculator/actions\";\nimport {ACCEPT_FORMATS, FORMATS_MAP} from \"@/calculator/format\";\n\ninterface ImportStateProps {\n}\n\n\n\nexport function ImportState(props: ImportStateProps) {\n  const buttonRef = createRef<HTMLButtonElement>()\n  const dispatch = useDispatch()\n  const [size, setSize] = useState({width: 0, height: 0})\n  useEffect(() => {\n    const newSize = {\n      width: buttonRef.current?.offsetWidth || 0,\n      height: buttonRef.current?.offsetHeight || 0,\n    }\n    if (size.width !== newSize.width) {\n      setSize(newSize)\n    }\n  }, [buttonRef, size.width])\n\n  const loadData = (file: File, data: string) => {\n    let ext = '.' + file.name.split('.').pop()\n    if (FORMATS_MAP[ext]) {\n      const f = new FORMATS_MAP[ext]()\n      const p = f.import(data)\n      dispatch(loadStateStart(p))\n    }\n  }\n\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e.target.value, e.target.files?.[0])\n    const file = e.target.files?.[0]\n    if (!file) {\n      return file\n    }\n    let reader = new FileReader();\n    reader.onload = () => {\n      console.log(reader.result)\n      loadData(file, reader.result as string)\n\n    }\n    reader.readAsText(file)\n\n  }\n  return (\n    <>\n      <IconButton\n        sx={{\n          position: \"relative\"\n        }}\n        ref={buttonRef}\n        component={Import}\n      >\n        <input type=\"file\"\n               accept={ACCEPT_FORMATS}\n               onChange={event => handleOnChange(event)}\n               style={{\n                 top: 0,\n                 left: 0,\n                 position: \"absolute\",\n                 opacity: 0,\n                 ...size,\n               }}\n               title={\"Импорт настроек\"}\n        />\n      </IconButton>\n    </>\n  )\n}\n","import React from \"react\";\nimport {Box, Card, Flex, Heading, Text} from 'rebass'\nimport {Restart} from \"@styled-icons/remix-line/Restart\"\nimport {Form, reduxForm} from \"redux-form\";\nimport {connect, useDispatch} from \"react-redux\";\n\nimport FertilizerSelect from './FertilizerSelect'\nimport {Options} from \"./Options/Options\";\nimport {Result} from \"./Result/Result\";\nimport {CalculatorFormValues} from \"./types\";\nimport {ReduxFormType} from \"../ui/ReduxForm/types\";\nimport {REDUX_FORM_NAME} from \"./constants\";\nimport {calculateStart, recipeReset} from \"./actions\";\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {DEFAULT_MICRO_RECIPE, DEFAULT_RECIPES} from \"@/components/Calculator/constants/recipes\";\nimport {ExportRecipes} from \"./ImportExport/ExportRecipes\";\nimport {ImportRecipes} from \"./ImportExport/ImportRecipes\";\nimport {Recipe} from \"@/components/Calculator/Options/Recipe\";\nimport {mobileStyles} from \"@/components/ui/styled\";\nimport {RootState} from \"@/redux/types\";\nimport {ExportState} from \"./ImportExport/ExportState\";\nimport {ImportState} from \"./ImportExport/ImportState\";\nimport {normalizeConcentration} from \"@/calculator/dilution\";\n\ninterface CalculatorProps {\n\n}\n\nconst initialValues: CalculatorFormValues = {\n  accuracy: 0.2,\n  solution_volume: 1,\n  solution_concentration: normalizeConcentration(100),\n  recipe: {...DEFAULT_RECIPES[0].elements, ...DEFAULT_MICRO_RECIPE, Cl: 0},\n  fertilizers: [],\n  dilution_enabled: false,\n  dilution_concentration: normalizeConcentration(1),\n  topping_up_enabled: false,\n  mixerOptions: {}\n}\nexport const CalculatorContainer: ReduxFormType<CalculatorProps, CalculatorFormValues> = ({handleSubmit}) => {\n  const dispatch = useDispatch()\n  return (\n    <Form\n      onSubmit={handleSubmit(() => {\n        dispatch(calculateStart())\n      })}\n    >\n      <Flex sx={{\n        flexDirection: 'row',\n        ...mobileStyles({\n          flexDirection: 'column-reverse',\n        })\n      }}>\n        <Box flex={1}\n             sx={{\n               marginRight: 2,\n               ...mobileStyles({\n                 marginRight: 0\n               })\n             }}\n        >\n          <FertilizerSelect/>\n        </Box>\n        <Flex flexDirection='column' flex={1}>\n          <Box flex={1} marginBottom={2}>\n            <Recipe/>\n          </Box>\n          <Box flex={1}>\n            <Result/>\n          </Box>\n          <Box flex={1}>\n            <Options/>\n          </Box>\n          <Card>\n            <Heading fontSize={2}>Импорт/Экспорт</Heading>\n            <Flex flexDirection=\"column\" p={3}>\n              <Flex alignItems='center'\n                    justifyContent=\"space-between\"\n                    flexWrap=\"wrap\"\n              >\n                <Text>Рецепты</Text>\n                <Box sx={{\n                  \"&>*\": {\n                    marginLeft: 1\n                  }\n                }}>\n                  <ImportRecipes/>\n                  <ExportRecipes/>\n                  <IconButton\n                    component={Restart}\n                    onClick={() => dispatch(recipeReset())}\n                  />\n                </Box>\n              </Flex>\n              <Flex alignItems='center'\n                    justifyContent=\"space-between\"\n                    flexWrap=\"wrap\"\n              >\n                <Text>Настройки</Text>\n                <Box sx={{\n                  \"&>*\": {\n                    marginLeft: 1\n                  }\n                }}>\n                  <ImportState/>\n                  <ExportState/>\n                </Box>\n              </Flex>\n            </Flex>\n          </Card>\n        </Flex>\n      </Flex>\n    </Form>\n  )\n}\n\n\nconst InitializerCalculator = reduxForm<CalculatorFormValues>({\n  form: REDUX_FORM_NAME,\n  initialValues,\n  enableReinitialize: true\n})(CalculatorContainer)\n\nconst ReduxCalculator = connect((state: RootState) => {\n  const formValues: CalculatorFormValues = (state.calculator?.calculationForm || initialValues)\n  return {\n    initialValues: {\n      ...formValues,\n      recipe: {Cl: 0, ...DEFAULT_MICRO_RECIPE, ...formValues.recipe}\n    }\n  }})(InitializerCalculator)\n\nexport default ReduxCalculator\n"],"sourceRoot":""}