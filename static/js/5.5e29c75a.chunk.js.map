{"version":3,"sources":["components/ui/IconButton.tsx","components/ui/ReduxForm/normalizers.ts","components/ui/RebassWidgets/index.ts","components/ui/ReduxForm/Input.tsx","hooks/ReduxForm.ts","../node_modules/@emotion-icons/emotion-icon/index.esm.js","../node_modules/@emotion-icons/boxicons-solid/ChevronDownSquare/ChevronDownSquare.esm.js","components/ui/Dropdown/context.ts","components/ui/Dropdown/DropdownItem.tsx","components/ui/Dropdown/DropdownList.tsx","components/ui/Dropdown/Dropdown.tsx","utils/csv.ts","components/Calculator/FertilizerSelect/SelectedListItem.tsx","components/ui/ReduxForm/Checkbox.tsx","utils/downloads.ts","components/ui/Modal/ModalContainer.tsx","components/ui/Modal/Modal.tsx","components/Calculator/FertilizerSelect/AddItem.tsx","components/Calculator/FertilizerSelect/SelectedList.tsx","components/Calculator/FertilizerSelect/Container.tsx","components/Calculator/FertilizerSelect/index.ts","components/ui/ReduxForm/validators.ts","components/Calculator/Options/IgnoreElement.tsx","components/ui/ReduxForm/Radio.tsx","components/Calculator/Options/Accuracy.tsx","components/Calculator/Options/Solution.tsx","components/Calculator/Options/Dilution.tsx","components/Calculator/Options/Options.tsx","../node_modules/@styled-icons/fa-solid/Broom/Broom.esm.js","../node_modules/@styled-icons/boxicons-regular/Save/Save.esm.js","../node_modules/@styled-icons/material-sharp/Tune/Tune.esm.js","components/Calculator/Options/RecipeElementForm.tsx","components/ui/RebassWidgets/Number.tsx","components/Calculator/Options/RecipeTuneForm.tsx","components/Calculator/Options/Recipe.tsx","components/Calculator/Result/ResultFertilizerList.tsx","components/Calculator/Result/hooks.ts","calculator/dilution.ts","components/Calculator/Result/ResultDilution.tsx","components/Calculator/Result/Result.tsx","components/Calculator/ImportExport/ExportRecipes.tsx","components/Calculator/ImportExport/ImportRecipes.tsx","components/ui/styled.ts","components/Calculator/ImportExport/ExportState.tsx","components/Calculator/ImportExport/ImportState.tsx","components/Calculator/index.tsx"],"names":["IconButton","forwardRef","props","buttonRef","IconComponent","component","size","children","extraProps","useState","containerSize","setSize","theme","useTheme","useEffect","current","offsetWidth","type","ref","color","colors","background","number","value","parseInt","decimal","parseFloat","Input","styled","RebassInput","WrappedInput","input","label","lang","placeholder","name","useFormName","useContext","ReduxFormContext","form","useFormValues","formName","dispatch","useDispatch","useSelector","state","getFormValues","change","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","filterSVGProps","reduce","p","k","key","validProp","EmotionIconBaseBase","React","iconAttrs","iconViewBox","iconVerticalAlign","title","otherProps","_objectWithoutProperties","iconProps","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","viewBox","height","undefined","width","focusable","role","svgProps","_extends","EmotionIconBase","_styled","ChevronDownSquare","d","displayName","DropdownContext","createContext","ItemContainer","padding","sx","position","zIndex","backgroundColor","content","left","top","opacity","StyledItemBox","Box","disabled","css","DropdownItem","index","ctx","onClick","onItemClick","checkDisabledItem","renderItem","item","DropdownList","items","itemRef","useRef","setHeight","offsetHeight","maxHeight","overflowY","flexDirection","Array","from","map","s","style","margin","IconDown","text","Dropdown","renderValue","opened","setOpened","setItem","setValue","editing","setEditing","containerRef","handleClickOutside","event","contains","document","addEventListener","removeEventListener","onClickItemHandler","onChange","context","Provider","val","onKeyDown","stopPropagation","onEdit","onBlur","right","csvParse","parse","csvExport","stringify","Element","delta","bg","flex","mx","px","minWidth","maxWidth","fontSize","alignItems","round","SelectedListItem","onRemove","weight","normalizedFertilizer","normalizeFertilizer","justifyContent","id","FERTILIZER_ELEMENT_NAMES","v","elements","textAlign","volume","liquid_weight","alignSelf","Cross","WrappedCheckbox","checked","Checkbox","saveData","a","createElement","body","appendChild","setAttribute","data","fileName","blob","Blob","url","window","URL","createObjectURL","href","download","click","revokeObjectURL","StyledOverlay","Flex","pageYOffset","ModalContainer","modalRoot","el","querySelector","useModalRoot","ReactDOM","createPortal","Helmet","Modal","button","container","closed","setClose","onClose","modalActions","open","close","renderCbProps","modal","Icon","AddItem","onAdd","fertilizers","calculator","calculationForm","selected","setSelected","fertilizersIDs","f","pr","includes","onAddHandler","Plus","SelectedList","fields","error","meta","result","calculatedFertilizersWeights","fromEntries","marginTop","remove","Container","FieldArray","validate","message","IgnoreElement","Radio","normalize","toString","ACCURACY_VARIANTS","Accuracy","Solution","htmlFor","step","min","pattern","autoComplete","paddingTop","max","Dilution","dilution_enabled","REDUX_FORM_NAME","display","Options","my","marginLeft","Broom","StyledIconBase","fill","Save","Tune","getRecipeFieldName","RecipeElementForm","StyledInput","StyledSpinnerButton","NumberInput","precision","countDecimals","showBtn","setShowBtn","inputSize","setInputSize","inputRef","upButtonRef","downButtonRef","offset","focus","onFocus","e","relatedTarget","bottom","ELEMENT_IN_MATRIX","ALLOWED_ELEMENT_IN_MATRIX","RecipeTuneForm","formValue","recipe","setRecipe","recipeInfo","calculateNPKBalance","ratio","setRatio","EC","setEC","onChangeRecipe","onChangeRatio","El1","El2","newNpk","convertProfileWithRatio","convertProfileWithEC","MACRO_ELEMENT_NAMES","RecipeInput","ion_balance","NH4","NO3","K","Mg","Ca","N","P","el2","MICRO_ELEMENT_NAMES","onSave","StyledBalanceCell","m","Recipe","recipes","values","NPKBalance","getEmptyElements","entries","zeroValues","recipeRemove","onRemoveItemHandler","marginRight","recipePush","n","ResultFertilizerList","accuracy","usePPM","solution_volume","fertilizerWeights","calculatePPM","useFertilizerSolutionGroup","fertilizersWeights","fertilizerWeightsMap","toMap","groups","nf","A","S","B","C","groupFertilizerBySolution","sort","ResultDilution","solution_concentration","dilution_volume","dilution_concentration","fertilizerWeightGroups","ppm","dilution","sources","concentration","dilution_solution","ppmToEC","StyledList","ul","Result","score","deltaElements","liquidFertilizersVolume","sum","score_display","getScoreDisplay","g","f_weights","stats","count","time","ExportRecipes","rows","cols","csvData","columns","header","Export","COLUMNS","ImportRecipes","createRef","newSize","handleOnChange","console","log","files","file","reader","FileReader","onload","csv","isNaN","splice","npk","loadCSV","readAsText","Import","accept","mobileStyles","styles","ExportState","created","Date","toISOString","version","__VERSION__","__COMMIT_HASH__","fileData","JSON","ImportState","json","loadStateStart","loadData","initialValues","DEFAULT_RECIPES","DEFAULT_MICRO_RECIPE","Cl","CalculatorContainer","handleSubmit","Form","onSubmit","calculateStart","FertilizerSelect","marginBottom","flexWrap","Restart","recipeReset","InitializerCalculator","reduxForm","enableReinitialize","ReduxCalculator","connect","formValues"],"mappings":"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","file":"static/js/5.5e29c75a.chunk.js","sourcesContent":["import React, {forwardRef, MouseEventHandler, PropsWithChildren, useEffect, useState} from \"react\";\nimport {Button, ButtonProps} from \"rebass\";\nimport {EmotionIcon} from '@emotion-icons/emotion-icon'\n\nimport {useTheme} from \"emotion-theming\";\nimport {Theme} from \"@/themes/types\";\n\n\ninterface IconButtonProps extends\n  PropsWithChildren<Omit<ButtonProps, keyof React.HTMLProps<HTMLButtonElement>>> {\n  component: EmotionIcon,\n  disabled?: boolean,\n  onClick?: MouseEventHandler<HTMLButtonElement>,\n  size?: number | string\n}\n\nexport const IconButton = forwardRef<HTMLButtonElement, IconButtonProps>(\n  (props, buttonRef) => {\n    const {\n      component: IconComponent,\n      size = \"1.5em\",\n      children,\n      ...extraProps\n    } = props\n    const [containerSize, setSize] = useState<number | string>(size || 0)\n    const theme = useTheme<Theme>()\n\n    useEffect(() => {\n      if (!size && buttonRef && 'current' in buttonRef) {\n        setSize(buttonRef.current?.offsetWidth || 0)\n      }\n    }, [buttonRef, setSize, size])\n\n    return (\n      <Button type=\"button\" {...extraProps} ref={buttonRef}>\n        <IconComponent\n          color={theme.colors?.background}\n          size={containerSize}\n        />\n        {children}\n      </Button>\n    )\n  })\n","\n\nexport function number(value: any) {\n  return value && parseInt(value)\n}\n\nexport function decimal(value: any) {\n  return value && parseFloat(value)\n}\n","import {Input as RebassInput, InputProps as RebassInputProps} from \"@rebass/forms\";\nimport styled from \"styled-components\";\n\n\nexport type InputProps = RebassInputProps\n\nexport const Input = styled(RebassInput)`\n  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n    width: 0;\n    height: 0;\n  }\n  -moz-appearance: textfield;\n`\n\n\n\n","import React from \"react\";\nimport {Field as ReduxField} from \"redux-form\";\n\nimport {Input as RebassInput, InputProps as RebassInputProps} from \"../RebassWidgets\";\nimport {ReduxFormComponentType, WrapperInputType} from \"./types\";\n\ninterface InputProps extends RebassInputProps {\n  label?: string\n}\n\nexport const StyledInput = RebassInput\n\nexport const WrappedInput: WrapperInputType<InputProps> = ({input, label, type = \"text\", ...props}: any) =>\n  <RebassInput  {...props}\n                {...input}\n                type={type}\n                lang=\"en-US\"\n                placeholder={label}\n  />\n\n\n// TODO вывести тип\nexport const Input: ReduxFormComponentType<InputProps> = (\n  {\n    name,\n    ...props\n  }) => {\n\n  return (\n    <ReduxField\n      component={WrappedInput}\n      name={name}\n      {...props as any}\n    />\n  )\n}\n","import {useContext} from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {change, FormContext, getFormValues, ReduxFormContext} from \"redux-form\";\n\nexport function useReduxForm(): FormContext {\n  return useContext(ReduxFormContext)\n}\n\nexport function useFormName(): string {\n  return useReduxForm().form\n}\n\nexport function useFormValues<FormValues=object>(formName: string): [FormValues, (name: string, value: any) => void] {\n  const dispatch = useDispatch()\n  const values = useSelector(state => getFormValues(formName)(state)) as FormValues\n\n  const setValue = (name: string, value: any) => {\n    dispatch(change(formName, name, value))\n  }\n  return [\n    values,\n    setValue\n    ]\n}\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _styled from \"@emotion/styled-base\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport validProp from '@emotion/is-prop-valid';\n\nfunction isValidProp(key) {\n  return validProp(key);\n}\n\nfunction filterSVGProps(props) {\n  return Object.keys(props).reduce(function (p, k) {\n    if (isValidProp(k)) {\n      // hack to satisfy TypeScript complexity\n      ;\n      p[k] = props[k];\n    }\n\n    return p;\n  }, {});\n}\n\nvar EmotionIconBaseBase = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var children = props.children,\n      iconAttrs = props.iconAttrs,\n      iconVerticalAlign = props.iconVerticalAlign,\n      iconViewBox = props.iconViewBox,\n      size = props.size,\n      title = props.title,\n      otherProps = _objectWithoutProperties(props, [\"children\", \"iconAttrs\", \"iconVerticalAlign\", \"iconViewBox\", \"size\", \"title\"]);\n\n  var iconProps = _objectSpread({\n    viewBox: iconViewBox,\n    height: props.height !== undefined ? props.height : size,\n    width: props.width !== undefined ? props.width : size,\n    'aria-hidden': title == null ? 'true' : undefined,\n    focusable: 'false',\n    role: title != null ? 'img' : undefined\n  }, iconAttrs);\n\n  var svgProps = filterSVGProps(otherProps);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, iconProps, svgProps, {\n    ref: ref\n  }), title && /*#__PURE__*/React.createElement(\"title\", {\n    key: \"icon-title\"\n  }, title), children);\n});\nexport var EmotionIconBase = /*#__PURE__*/_styled(EmotionIconBaseBase, {\n  target: \"ex0cdmw0\",\n  label: \"EmotionIconBase\"\n})(\"display:inline-block;vertical-align:\", function (props) {\n  return props.iconVerticalAlign;\n}, \";overflow:hidden;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3RDBEIiwiZmlsZSI6ImluZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnXG5pbXBvcnQgdmFsaWRQcm9wIGZyb20gJ0BlbW90aW9uL2lzLXByb3AtdmFsaWQnXG5cbmV4cG9ydCB0eXBlIEVtb3Rpb25JY29uID0gUmVhY3QuRm9yd2FyZFJlZkV4b3RpY0NvbXBvbmVudDxcbiAgUmVhY3QuUHJvcHNXaXRob3V0UmVmPEVtb3Rpb25JY29uUHJvcHM+ICYgUmVhY3QuUmVmQXR0cmlidXRlczxTVkdTVkdFbGVtZW50PlxuPlxuXG5leHBvcnQgaW50ZXJmYWNlIEVtb3Rpb25JY29uUHJvcHMgZXh0ZW5kcyBSZWFjdC5Qcm9wc1dpdGhSZWY8UmVhY3QuU1ZHUHJvcHM8U1ZHU1ZHRWxlbWVudD4+IHtcbiAgc2l6ZT86IG51bWJlciB8IHN0cmluZ1xuICB0aXRsZT86IHN0cmluZyB8IG51bGxcbn1cblxuaW50ZXJmYWNlIEVtb3Rpb25JY29uQmFzZVByb3BzIHtcbiAgaWNvbkF0dHJzOiBSZWFjdC5TVkdQcm9wczxTVkdTVkdFbGVtZW50PlxuICBpY29uVmlld0JveDogc3RyaW5nXG4gIGljb25WZXJ0aWNhbEFsaWduOiBzdHJpbmdcbn1cblxuZnVuY3Rpb24gaXNWYWxpZFByb3Aoa2V5OiBzdHJpbmcpOiBrZXkgaXMga2V5b2YgUmVhY3QuU1ZHUHJvcHM8U1ZHU1ZHRWxlbWVudD4ge1xuICByZXR1cm4gdmFsaWRQcm9wKGtleSlcbn1cblxuZnVuY3Rpb24gZmlsdGVyU1ZHUHJvcHMocHJvcHM6IEVtb3Rpb25JY29uUHJvcHMpOiBSZWFjdC5TVkdQcm9wczxTVkdTVkdFbGVtZW50PiB7XG4gIHJldHVybiAoT2JqZWN0LmtleXMocHJvcHMpIGFzIEFycmF5PGtleW9mIEVtb3Rpb25JY29uUHJvcHM+KS5yZWR1Y2U8UmVhY3QuU1ZHUHJvcHM8U1ZHU1ZHRWxlbWVudD4+KChwLCBrKSA9PiB7XG4gICAgaWYgKGlzVmFsaWRQcm9wKGspKSB7XG4gICAgICAvLyBoYWNrIHRvIHNhdGlzZnkgVHlwZVNjcmlwdCBjb21wbGV4aXR5XG4gICAgICA7KHAgYXMgYW55KVtrXSA9IHByb3BzW2tdXG4gICAgfVxuICAgIHJldHVybiBwXG4gIH0sIHt9KVxufVxuXG5jb25zdCBFbW90aW9uSWNvbkJhc2VCYXNlID0gUmVhY3QuZm9yd2FyZFJlZjxTVkdTVkdFbGVtZW50LCBFbW90aW9uSWNvblByb3BzICYgRW1vdGlvbkljb25CYXNlUHJvcHM+KChwcm9wcywgcmVmKSA9PiB7XG4gIGNvbnN0IHtjaGlsZHJlbiwgaWNvbkF0dHJzLCBpY29uVmVydGljYWxBbGlnbiwgaWNvblZpZXdCb3gsIHNpemUsIHRpdGxlLCAuLi5vdGhlclByb3BzfSA9IHByb3BzXG5cbiAgY29uc3QgaWNvblByb3BzOiBSZWFjdC5TVkdQcm9wczxTVkdTVkdFbGVtZW50PiA9IHtcbiAgICB2aWV3Qm94OiBpY29uVmlld0JveCxcbiAgICBoZWlnaHQ6IHByb3BzLmhlaWdodCAhPT0gdW5kZWZpbmVkID8gcHJvcHMuaGVpZ2h0IDogc2l6ZSxcbiAgICB3aWR0aDogcHJvcHMud2lkdGggIT09IHVuZGVmaW5lZCA/IHByb3BzLndpZHRoIDogc2l6ZSxcbiAgICAnYXJpYS1oaWRkZW4nOiB0aXRsZSA9PSBudWxsID8gJ3RydWUnIDogdW5kZWZpbmVkLFxuICAgIGZvY3VzYWJsZTogJ2ZhbHNlJyxcbiAgICByb2xlOiB0aXRsZSAhPSBudWxsID8gJ2ltZycgOiB1bmRlZmluZWQsXG4gICAgLi4uaWNvbkF0dHJzLFxuICB9XG5cbiAgY29uc3Qgc3ZnUHJvcHMgPSBmaWx0ZXJTVkdQcm9wcyhvdGhlclByb3BzKVxuXG4gIHJldHVybiAoXG4gICAgPHN2ZyB7Li4uaWNvblByb3BzfSB7Li4uc3ZnUHJvcHN9IHJlZj17cmVmfT5cbiAgICAgIHt0aXRsZSAmJiA8dGl0bGUga2V5PVwiaWNvbi10aXRsZVwiPnt0aXRsZX08L3RpdGxlPn1cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L3N2Zz5cbiAgKVxufSlcblxuZXhwb3J0IGNvbnN0IEVtb3Rpb25JY29uQmFzZSA9IHN0eWxlZChFbW90aW9uSWNvbkJhc2VCYXNlKWBcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogJHsocHJvcHMpID0+IHByb3BzLmljb25WZXJ0aWNhbEFsaWdufTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbmBcbiJdfQ== */\"));","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { EmotionIconBase } from '@emotion-icons/emotion-icon';\nexport var ChevronDownSquare = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(EmotionIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5 21h14c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2zM7.707 9.293L12 13.586l4.293-4.293 1.414 1.414L12 16.414l-5.707-5.707 1.414-1.414z\"\n  }));\n});\nChevronDownSquare.displayName = 'ChevronDownSquare';\nexport var ChevronDownSquareDimensions = {\n  height: 24,\n  width: 24\n};","import React, {Context} from \"react\";\nimport {ItemCallback, RenderItemCallback} from \"./types\";\n\n// TODO  сделать генерик\nexport interface DropdownContextInterface<T=any> {\n  onItemClick?: ItemCallback<T>,\n  renderItem?: RenderItemCallback<T>\n  checkDisabledItem?: ItemCallback<T,  boolean>,\n}\n\nexport type DropdownContext<T> = Context<DropdownContextInterface<T>>\nexport const DropdownContext: DropdownContext<any> = React.createContext({})\n\n\n","import React, {FunctionComponent, useContext} from \"react\";\nimport {Box, Flex} from \"rebass\";\n// import styled from '@emotion/styled'\nimport {DropdownContext} from \"./context\";\nimport styled, {css} from \"styled-components\";\n\ninterface DropdownItemProps<T> {\n  value: T,\n  index: number,\n}\n\n\nconst ItemContainer: FunctionComponent = ({\n                                            children,\n                                          }) => {\n  return <Flex\n    padding={2}\n    sx={{\n      position: \"relative\",\n      zIndex: 1,\n      '&::before': {\n        backgroundColor: 'highlight',\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        opacity: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: -1,\n      },\n      '&:hover::before': {\n        opacity: 0.1,\n        // boxShadow: \"inset 0 0 0 99999px rgba(0,0,0,0.1)\"\n      }\n    }}\n  >\n    {children}\n  </Flex>\n\n}\n\nconst StyledItemBox = styled(Box)`\n  ${props => props.disabled \n    && css`\n      pointer-events: none;\n      opacity: 0.4;\n  `}\n\n`\n\nexport function DropdownItem<T>(props: DropdownItemProps<T>) {\n  const {value, index} = props;\n  const ctx = useContext(DropdownContext);\n\n  const renderItem = () => {\n    if (ctx.renderItem) {\n      return <ctx.renderItem item={value} index={index} />\n    }\n    return (value + '')\n  }\n\n  const onItemClickHandler = () => {\n    if (ctx.onItemClick) {\n      ctx.onItemClick(value)\n    }\n  }\n\n  return (\n    <StyledItemBox\n      onClick={onItemClickHandler}\n      disabled={ctx.checkDisabledItem && ctx.checkDisabledItem(value)}\n    >\n      <ItemContainer>\n        {renderItem()}\n      </ItemContainer>\n    </StyledItemBox>\n  )\n}\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {Box, Card, Flex} from \"rebass\";\nimport {DropdownItem} from \"./DropdownItem\";\n\ninterface DropdownListProps<T> {\n  items: T[],\n}\n\nexport function DropdownList<T>(props: DropdownListProps<T>) {\n  const items = props.items\n\n  const itemRef = useRef<HTMLDivElement>()\n  const [height, setHeight] = useState(0)\n\n  useEffect(() => {\n    setHeight(itemRef?.current?.offsetHeight || 0)\n  }, [itemRef])\n\n  return (\n    <Card\n      backgroundColor={\"background\"}\n      padding={0}\n      maxHeight={height * 5}\n      overflowY={'auto'}\n      sx={{zIndex: 3}}\n    >\n      <Flex flexDirection=\"column\">\n        {Array.from(items).map((s, i) => {\n          return (\n            <Box ref={i === 0 ? itemRef: null}>\n              <DropdownItem<T>\n                value={s}\n                index={i}\n                key={i}\n              />\n              {i < items.length - 1 ? <hr style={{margin: 0}}/> : null}\n            </Box>\n          )\n        })}\n      </Flex>\n    </Card>\n  )\n}\n","import React, {ChangeEvent, KeyboardEvent, useEffect, useRef, useState} from \"react\";\nimport {Input} from \"@rebass/forms\";\nimport {Box, Flex} from \"rebass\";\nimport styled from '@emotion/styled'\nimport {ChevronDownSquare} from '@emotion-icons/boxicons-solid/ChevronDownSquare'\nimport {DropdownList} from \"./DropdownList\";\nimport {DropdownContext, DropdownContextInterface} from \"./context\";\nimport {ItemCallback, ItemType, RenderItemCallback, RenderValueCallback} from \"./types\";\n\nconst IconDown = styled(ChevronDownSquare)`\n  color: ${(props: any) => props.theme.colors.text};\n  height: 3rem;\n  opacity: 0.5;\n  \n  &:hover {\n    opacity: 0.7;\n  }\n`\n\nexport interface DropdownProps<T> {\n  value?: ItemType<T>,\n  items: T[],\n  renderValue?: RenderValueCallback<T>,\n  renderItem?: RenderItemCallback<T>,\n  checkDisabledItem?: ItemCallback<T,  boolean>,\n\n  onEdit?: (value: string) => void,\n  onChange?: (item: ItemType<T>) => void,\n  width?: number\n}\n\nexport function Dropdown<T>(props: DropdownProps<T>) {\n  const {width} = props\n  const renderValue: RenderValueCallback<T> = item => {\n    if (props.renderValue) {\n      return props.renderValue(item)\n    }\n    return (item || '') + ''\n  }\n\n  const [opened, setOpened] = useState(false)\n  const [item, setItem] = useState(props.value || null)\n  const [value, setValue] = useState(renderValue(props.value || null))\n  const [editing, setEditing] = useState(false)\n  const containerRef = useRef<HTMLDivElement>()\n\n  useEffect(() => {\n    function handleClickOutside(event: MouseEvent) {\n      if (containerRef.current\n        && !containerRef.current.contains(event.target as any)) {\n        setOpened(false)\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [containerRef])\n\n  const onClickItemHandler = (item: ItemType<T>) => {\n    setItem(item)\n    setValue(renderValue(item))\n\n    props.onChange && props.onChange(item)\n    setEditing(false)\n    setOpened(false)\n  }\n  const onChangeInputHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    const val = event.target.value\n    setValue(val)\n    setEditing(true)\n    setOpened(false)\n  }\n\n  const onKeyDownInputHandler = (event: KeyboardEvent<HTMLInputElement>) => {\n    event.stopPropagation()\n    if (event.key === 'Enter') {\n      props.onEdit && props.onEdit(value)\n    }\n    if (event.key === 'Escape') {\n      onClickItemHandler(item)\n    }\n  }\n\n  const onBlurInputHandler = () => {\n    if (editing) {\n      value && props.onEdit && props.onEdit(value)\n    }\n  }\n\n  const context: DropdownContextInterface<T> = {\n    onItemClick: onClickItemHandler,\n    renderItem: props.renderItem,\n    checkDisabledItem: props.checkDisabledItem,\n  }\n\n  return (\n    <DropdownContext.Provider value={context}>\n      <Flex flexDirection=\"column\" width={width} ref={containerRef}>\n        <Flex sx={{position: 'relative'}}>\n          <Input\n            value={value}\n            onChange={onChangeInputHandler}\n            onKeyDown={onKeyDownInputHandler}\n            onBlur={onBlurInputHandler}\n          />\n          <Box\n            sx={{\n              position: \"absolute\",\n              right: 0\n            }}\n          >\n            <IconDown\n              onClick={() => setOpened(!opened)}\n            />\n          </Box>\n        </Flex>\n        <Flex sx={{position: 'relative'}}>\n          <Flex sx={{position: \"absolute\"}}\n                flexDirection=\"column\"\n                width=\"100%\"\n          >\n            {opened && <DropdownList<T> items={props.items}/>}\n          </Flex>\n        </Flex>\n      </Flex>\n    </DropdownContext.Provider>\n  )\n}\n","import parse from \"csv-parse/lib/sync\"\nimport stringify from \"csv-stringify/lib/sync\"\n\nexport const csvParse = parse\nexport const csvExport = stringify\n\n\n","import React, {FunctionComponent} from \"react\";\nimport {Box, Card, Flex, Text} from \"rebass\";\nimport {Cross} from \"@styled-icons/entypo/Cross\"\nimport {FertilizerType} from \"./types\";\nimport {normalizeFertilizer} from \"@/calculator/fertilizer\";\nimport {FERTILIZER_ELEMENT_NAMES} from \"@/calculator/constants\";\nimport {IconButton} from \"../../ui/IconButton\";\nimport {round} from \"@/utils\";\nimport {FertilizerWeights} from \"@/calculator\";\n\ninterface ElementProps {\n  name: string,\n  value: number,\n  delta?: number,\n}\n\nexport const Element: FunctionComponent<ElementProps> = (props) => {\n  const {name, value, delta} = props\n  return (\n    <Box bg={name} flex={1} mx=\"2px\" px={1} color={'black'} minWidth=\"2.1em\" maxWidth=\"3em\" fontSize={1}>\n      <Flex flexDirection='column' alignItems={'center'}>\n        <Box>{name}</Box>\n        <Box>{round(value, 1)}</Box>\n        {typeof delta !== \"undefined\" ? <Box>{delta}</Box> : null}\n      </Flex>\n    </Box>\n  )\n}\n\ninterface SelectedListItemProps {\n  item: FertilizerType,\n  onRemove: () => void,\n  weight?: FertilizerWeights,\n}\n\n\nexport const SelectedListItem: FunctionComponent<SelectedListItemProps> = ({item, onRemove, weight}) => {\n  const normalizedFertilizer = normalizeFertilizer(item, false)\n  return (\n    <Card width={'auto'}>\n      <Flex justifyContent={'space-between'} alignItems=\"center\">\n        <Box flex={1}>\n          <Text flex={1}>\n            {item.id}\n          </Text>\n          <Flex>\n            {\n              FERTILIZER_ELEMENT_NAMES.map((name) => {\n                  let v = normalizedFertilizer.elements[name]\n                  if (!v) {\n                    return null\n                  }\n                  return <Element\n                    name={name}\n                    key={name}\n                    value={v}\n                  />\n                }\n              )\n            }\n          </Flex>\n        </Box>\n        <Flex>\n          <Flex alignItems=\"center\" justifyContent=\"center\" margin={1}>\n            {weight ? (\n              <Text textAlign=\"center\" minWidth=\"3em\">\n                {weight.weight}г\n                {weight.volume ? (\n                  <>\n                    <br/>\n                    <span\n                      title=\"Объем или вес раствора\">{weight.volume && `${weight.volume} мл${weight.liquid_weight? `, ${weight.liquid_weight}г`:''}`}</span>\n                  </>\n                ) : null}\n              </Text>\n            ) : null}\n          </Flex>\n          <IconButton\n            padding={1}\n            alignSelf=\"center\"\n            component={Cross}\n            onClick={() => onRemove()}\n          />\n        </Flex>\n      </Flex>\n    </Card>\n  )\n}\n","import React from \"react\";\n\nimport {Checkbox as RebassCheckbox, CheckboxProps as RebassCheckboxProps, Label} from \"@rebass/forms\";\nimport {Field as ReduxField} from \"redux-form\";\nimport {ReduxFormComponentType, WrapperInputType} from \"./types\";\n\ninterface CheckboxProps extends RebassCheckboxProps {\n  label: string\n}\n\nconst WrappedCheckbox: WrapperInputType<CheckboxProps> = ({input, label, ...props}: any) =>\n  <Label>\n    <RebassCheckbox\n      {...props} {...input}\n      checked={input.value}\n    />\n    {label}\n  </Label>\n\n// TODO вывести тип\nexport const Checkbox: ReduxFormComponentType<CheckboxProps> = ({name, ...props}) => {\n  return (\n    <ReduxField\n      component={WrappedCheckbox}\n      name={name}\n      {...props as any}\n    />\n  )\n}\n\n","export const saveData = (function () {\n  const a = document.createElement(\"a\");\n  document.body.appendChild(a);\n  a.setAttribute('style', \"display: none\")\n  return function (data: string, fileName: string) {\n    const blob = new Blob([data], {type: \"octet/stream\"})\n    const url = window.URL.createObjectURL(blob)\n    a.href = url;\n    a.download = fileName;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n})();\n\nexport {}\n","import React, {ReactNode} from \"react\";\nimport ReactDOM from 'react-dom'\nimport {Card, Flex} from \"rebass\";\nimport styled from '@emotion/styled'\nimport {Helmet} from \"react-helmet\";\n\n\ninterface ModalContainerProps {\n  children: ReactNode,\n}\n\nconst useModalRoot = () => {\n  let el = document.querySelector('#modal-root')\n  if (!el) {\n    el = document.createElement('div')\n    el.setAttribute('id', 'modal-root')\n    document.body.appendChild(el)\n  }\n  return el\n}\n\nconst StyledOverlay = styled(Flex)`\n  overflow-y: auto;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: ${() => `${window.pageYOffset}px`};\n  left: 0;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.5);\n  z-index: 999;\n  \n  // Mobile\n  @media screen and (max-height: 500px), screen and (max-width: 500px) {\n    align-items: initial;\n  }\n`\n\nexport function ModalContainer(props: ModalContainerProps) {\n  const {\n    children,\n  } = props\n  const modalRoot = useModalRoot()\n  return ReactDOM.createPortal(\n    <>\n      <Helmet>\n        <style type='text/css'>\n          {`\n          body {\n            overflow: hidden;\n          }\n        `}\n        </style>\n      </Helmet>\n      <StyledOverlay>\n        <Card backgroundColor='#fff' height=\"max-content\">\n          {children}\n        </Card>\n      </StyledOverlay>\n    </>\n    , modalRoot)\n}\n","import React, {ReactNode, useEffect, useState} from \"react\";\nimport {ModalContainer} from \"@/components/ui/Modal/ModalContainer\";\nimport {Box, Flex, Heading} from \"rebass\";\nimport {Icon} from \"@/components/ui/Icon\";\nimport {Cross} from \"@styled-icons/entypo/Cross\";\n\nexport interface ModalActions {\n  open: () => void,\n  close: () => void,\n}\n\ntype RenderCb = (props: {modal: ModalActions}) => ReactNode\n\ninterface ModalProps {\n  opened?: boolean,\n  onClose?: () => void,\n  button?: RenderCb,\n  title?: string,\n  container: RenderCb,\n}\n\nexport function Modal(props: ModalProps) {\n  const {\n    opened = false,\n    button,\n    container,\n  } = props\n\n  const [closed, setClose] = useState(!opened)\n\n  useEffect(() => {\n    setClose(!opened)\n  }, [opened])\n\n  useEffect(() => {\n    if (closed && props.onClose) {\n      props.onClose()\n    }\n  }, [closed, props])\n\n  const modalActions: ModalActions = {\n    open: () => setClose(false),\n    close: () => setClose(true),\n  }\n  const renderCbProps = {modal: modalActions}\n\n  return (\n    <>\n      {button && button(renderCbProps)}\n      {closed ? null : <ModalContainer>\n        <Flex justifyContent='space-between'>\n          <Heading fontSize={2}>{props.title}</Heading>\n          <Icon component={Cross} onClick={modalActions.close}/>\n        </Flex>\n        <Box>\n          {container(renderCbProps)}\n        </Box>\n      </ModalContainer>\n      }\n    </>\n  )\n}\n","import React, {FunctionComponent, useState} from \"react\";\nimport {Box, Card, Flex} from \"rebass\";\nimport {FertilizerType} from \"./types\";\nimport {Dropdown} from \"@/components/ui/Dropdown/Dropdown\";\nimport {Plus} from \"@styled-icons/boxicons-regular/Plus\"\n\nimport {useSelector} from \"react-redux\";\nimport {CalculatorState} from \"../types\";\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {FertilizerInfo} from \"@/calculator/types\";\n\ninterface AddItemProps {\n  onAdd: (item: FertilizerType) => void\n}\n\n\nexport const AddItem: FunctionComponent<AddItemProps> = ({onAdd}) => {\n  const {\n    fertilizers,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n  const {\n    calculationForm,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n\n  const [selected, setSelected] = useState<FertilizerInfo | undefined>(fertilizers[0])\n\n  const selectedFertilizers = calculationForm?.fertilizers || [];\n  const fertilizersIDs = selectedFertilizers.map(f => f?.id)\n\n  const onChangeHandler = (item: FertilizerInfo | null) => {\n    item && setSelected(item)\n  }\n\n\n  const onAddHandler = (item: FertilizerInfo) => {\n    onAdd(item)\n  }\n  return (\n    <Card>\n      <Flex flexDirection=\"column\">\n        <Flex justifyContent=\"space-between\">\n          <Box flex={1} pr={2}>\n            <Dropdown<FertilizerInfo>\n              value={selected}\n              items={fertilizers}\n              onChange={onChangeHandler}\n              checkDisabledItem={item => fertilizersIDs.includes(item?.id || \"\")}\n              renderItem={({item}) => (\n                <Flex flex={1} justifyContent=\"space-between\">\n                  <Box>\n                    {item.id}\n                  </Box>\n                  <IconButton\n                    onClick={(event) => {\n                      event.stopPropagation()\n                      onAddHandler(item)\n                    }}\n                    component={Plus}\n                  />\n                </Flex>\n              )}\n              renderValue={item => item?.id || \"\"}\n            />\n          </Box>\n        </Flex>\n      </Flex>\n\n    </Card>\n  )\n}\n\n","import React from \"react\";\nimport {Flex} from \"rebass\";\nimport {SelectedListItem} from \"./SelectedListItem\";\nimport {AddItem} from \"./AddItem\";\nimport {ReduxFieldArrayType} from \"../../ui/ReduxForm/types\";\nimport {FertilizerType} from \"./types\";\nimport {CalculatorState} from \"../types\";\nimport {useSelector} from \"react-redux\";\n\ninterface SelectedListProps {\n}\n\nexport const SelectedList: ReduxFieldArrayType<SelectedListProps, FertilizerType> = (\n  {fields, meta: {error}}) => {\n  const {\n    calculationForm,\n    result,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n  const fertilizers = calculationForm?.fertilizers || [];\n\n  const calculatedFertilizersWeights = Object.fromEntries((result?.fertilizers || []).map(f => [f.id, f]))\n\n  const onAddHandler = (item: FertilizerType) => {\n    for (let f of fertilizers) {\n      if (f.id === item.id) {\n        return\n      }\n    }\n    fields.push(item)\n  }\n  return (\n    <Flex sx={{flexDirection: 'column'}} width='auto'>\n      <AddItem onAdd={onAddHandler}/>\n      <Flex sx={{\n        flexDirection: 'column',\n        '& > *': {\n          marginTop: '8px !important',\n        }\n      }}>\n        {error ? <span>{error}</span> : null}\n        {fertilizers.map((item, index) =>\n          <SelectedListItem\n            item={item}\n            key={item.id}\n            weight={calculatedFertilizersWeights[item.id]}\n            onRemove={() => fields.remove(index)}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n","import React from \"react\";\nimport {SelectedList} from \"./SelectedList\";\nimport {FieldArray} from \"redux-form\";\nimport {required} from \"../../ui/ReduxForm/validators\";\n\n\nexport const Container = () => {\n  return (\n    <FieldArray<{}>\n      name={\"fertilizers\"}\n      component={SelectedList}\n      validate={required(\"Выберите удобрения\")}\n    />\n  )\n}\n\n","import {Container} from \"./Container\";\n\nexport default Container\n","\ntype ValidatorCallback = {\n  (value: any): void|string\n}\n\nexport function pattern(pattern: RegExp|string, message?: string): ValidatorCallback {\n  message = message || 'Значение должно соответствовать регулярному выражению'\n  return (value) => {\n    pattern = new RegExp(pattern) as RegExp\n    if (pattern.test(value)) {\n      return message\n    }\n  }\n}\n\nexport function minLength(length: number, message?: string): ValidatorCallback {\n  message = message || `Количество элементов должно быть не менее ${length}`\n\n  return value => {\n    if (value.length < length) {\n      return message\n    }\n  }\n}\n\n\nexport function required(message?: string): ValidatorCallback {\n  message = message || `Должно быть заполнено`\n\n  return value => {\n    if (!value || !value?.length) {\n      return message\n    }\n  }\n}\n\n","import React, {FunctionComponent} from \"react\";\nimport {Card, Flex, Heading} from \"rebass\";\nimport {Checkbox} from \"../../ui/ReduxForm/Checkbox\";\n\ninterface IgnoreElementProps {\n}\n\n\nexport const IgnoreElement: FunctionComponent<IgnoreElementProps> = () => {\n  return (\n    <Card>\n      <Flex flexDirection=\"column\">\n        <Heading fontSize={2}>Игнорировать</Heading>\n        <Checkbox name=\"ignore.Ca\" label=\"Кальций\" />\n        <Checkbox name=\"ignore.Mg\" label=\"Магний\" />\n        <Checkbox name=\"ignore.S\" label=\"Сера\" />\n        <Checkbox name=\"ignore.Cl\" label=\"Хлор\" />\n      </Flex>\n    </Card>\n  )\n}\n","import React from \"react\";\n\nimport {Label, Radio as RebassRadio, RadioProps as RebassRadioProps} from \"@rebass/forms\";\nimport {Field as ReduxField} from \"redux-form\";\nimport {ReduxFormComponentType, WrapperInputType} from \"./types\";\n\ninterface RadioProps extends RebassRadioProps {\n  label: string,\n  value: string | number,\n}\n\nconst WrappedCheckbox: WrapperInputType<RadioProps> = ({input, label, value, ...props}: any) =>\n  <Label>\n    <RebassRadio\n      {...props}\n      {...input}\n    />\n    {label}\n  </Label>\n\n// TODO вывести тип\nexport const Radio: ReduxFormComponentType<RadioProps> = ({\n                                                            name,\n                                                            value,\n                                                            normalize= (v) => v.toString(),\n                                                            ...props\n                                                          }) => {\n  return (\n    <ReduxField\n      component={WrappedCheckbox}\n      name={name}\n      normalize={normalize}\n      // onClick={() => setChecked(!checked)}\n      // checked={checked}\n      type='radio'\n      value={normalize(value)}\n      {...props as any}\n    />\n  )\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Card, Flex, Heading} from \"rebass\";\nimport {Radio} from \"../../ui/ReduxForm/Radio\";\nimport {decimal} from \"../../ui/ReduxForm/normalizers\";\n\nconst ACCURACY_VARIANTS = [\n  0.2,\n  0.1,\n  0.05,\n  0.01,\n]\ninterface AccuracyProps {\n}\n\nexport const Accuracy: FunctionComponent<AccuracyProps> = () => {\n    return (\n      <Card>\n          <Flex flexDirection=\"column\">\n            <Heading fontSize={2}>Точность</Heading>\n            {ACCURACY_VARIANTS.map(a =>\n                <Radio\n                  name=\"accuracy\"\n                  value={a}\n                  label={`${a} г.`}\n                  normalize={decimal}\n                />\n            )}\n          </Flex>\n      </Card>\n    )\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Card, Flex, Heading} from \"rebass\";\nimport {Label} from \"@rebass/forms\";\nimport {Input} from \"../../ui/ReduxForm/Input\";\nimport {decimal, number} from \"../../ui/ReduxForm/normalizers\";\n\n\ninterface SolutionVolumeProps {\n}\n\nexport const Solution: FunctionComponent<SolutionVolumeProps> = () => {\n  return (\n    <Card>\n        <Heading fontSize={2}>Раствор</Heading>\n      <Flex flexDirection=\"column\">\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Label htmlFor=\"solution_volume\">Объем, л</Label>\n          <Input\n            name=\"solution_volume\"\n            width=\"3rem\"\n            type=\"number\"\n            step=\"1\"\n            min=\"1\"\n            pattern=\"^\\d+$\"\n            normalize={number}\n            style={{\n              textAlign: \"center\"\n            }}\n            autoComplete=\"off\"\n          />\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" paddingTop={2}>\n          <Label htmlFor=\"solution_concentration\">Концентрация, 1/100%</Label>\n          <Input\n            name=\"solution_concentration\"\n            width=\"3rem\"\n            type=\"number\"\n            step=\"0.1\"\n            min=\"0\"\n            max=\"2000\"\n            normalize={decimal}\n            style={{\n              textAlign: \"center\"\n            }}\n            autoComplete=\"off\"\n          />\n        </Flex>\n      </Flex>\n    </Card>\n  )\n}\n","import React, {FunctionComponent} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {getFormValues} from \"redux-form\";\nimport {Card, Flex} from \"rebass\";\nimport {Label} from \"@rebass/forms\";\nimport {Input} from \"@/components/ui/ReduxForm/Input\";\nimport {decimal, number} from \"@/components/ui/ReduxForm/normalizers\";\nimport {Checkbox} from \"@/components/ui/ReduxForm/Checkbox\";\nimport {REDUX_FORM_NAME} from \"@/components/Calculator/constants\";\nimport {CalculatorFormValues} from \"@/components/Calculator/types\";\n\n\ninterface DilutionProps {\n}\n\nexport const Dilution: FunctionComponent<DilutionProps> = () => {\n  const {\n    dilution_enabled,\n  } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n  return (\n    <Card>\n      <Checkbox name=\"dilution_enabled\" label=\"Разбавление концентрата\"/>\n      <Flex flexDirection=\"column\" style={{display: dilution_enabled? \"flex\" : \"none\"}}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Label htmlFor=\"dilution_volume\">Объем, л</Label>\n          <Input\n            name=\"dilution_volume\"\n            width=\"3rem\"\n            type=\"number\"\n            step=\"1\"\n            min=\"1\"\n            pattern=\"^\\d+$\"\n            normalize={number}\n            style={{\n              textAlign: \"center\"\n            }}\n            autoComplete=\"off\"\n          />\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" paddingTop={2}>\n          <Label htmlFor=\"dilution_concentration\">Концентрация, 1/100%</Label>\n          <Input\n            name=\"dilution_concentration\"\n            width=\"3rem\"\n            type=\"number\"\n            step=\"0.1\"\n            min=\"0\"\n            max=\"2000\"\n            normalize={decimal}\n            style={{\n              textAlign: \"center\"\n            }}\n            autoComplete=\"off\"\n          />\n        </Flex>\n      </Flex>\n    </Card>\n  )\n}\n","import React, {ComponentType} from \"react\";\nimport {Box, Button, Flex} from \"rebass\";\nimport {IgnoreElement} from \"./IgnoreElement\";\nimport {Accuracy} from \"./Accuracy\";\nimport {Solution} from \"./Solution\";\nimport {Dilution} from \"./Dilution\";\n\ninterface OptionsProps {\n}\n\n\nexport const Options: ComponentType<OptionsProps> = () => {\n  return (\n    <Flex flexDirection=\"column\">\n      <Box flex={1}>\n        <Button width=\"100%\" my={2} type=\"submit\">Calculate</Button>\n      </Box>\n      <Box my={2}>\n        <Solution/>\n      </Box>\n      <Box my={2}>\n        <Dilution/>\n      </Box>\n      <Flex sx={{\n        '& > *': {flex: 1}\n      }}>\n        <IgnoreElement/>\n        <Box marginLeft={2}>\n          <Accuracy/>\n        </Box>\n      </Flex>\n\n    </Flex>\n  )\n}\n\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Broom = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 640 512\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M256.47 216.77l86.73 109.18s-16.6 102.36-76.57 150.12C206.66 523.85 0 510.19 0 510.19s3.8-23.14 11-55.43l94.62-112.17c3.97-4.7-.87-11.62-6.65-9.5l-60.4 22.09c14.44-41.66 32.72-80.04 54.6-97.47 59.97-47.76 163.3-40.94 163.3-40.94zM636.53 31.03l-19.86-25c-5.49-6.9-15.52-8.05-22.41-2.56l-232.48 177.8-34.14-42.97c-5.09-6.41-15.14-5.21-18.59 2.21l-25.33 54.55 86.73 109.18 58.8-12.45c8-1.69 11.42-11.2 6.34-17.6l-34.09-42.92 232.48-177.8c6.89-5.48 8.04-15.53 2.55-22.44z\"\n  }));\n});\nBroom.displayName = 'Broom';\nexport var BroomDimensions = {\n  height: 512,\n  width: 640\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Save = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M9 14h6v5H9zm2-9h2v2h-2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M7 14c0-1.103.897-2 2-2h6c1.103 0 2 .897 2 2v5h2.001L19 8.414 15.586 5H15v4H7V5H5v14h2v-5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5 21h14c1.103 0 2-.897 2-2V8a.997.997 0 00-.293-.707l-4-4A.996.996 0 0016 3H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2zm10-2H9v-5h6v5zM13 7h-2V5h2v2zM5 5h2v4h8V5h.586L19 8.414 19.001 19H17v-5c0-1.103-.897-2-2-2H9c-1.103 0-2 .897-2 2v5H5V5z\"\n  }));\n});\nSave.displayName = 'Save';\nexport var SaveDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Tune = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0V0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z\"\n  }));\n});\nTune.displayName = 'Tune';\nexport var TuneDimensions = {\n  height: 24,\n  width: 24\n};","import React, {FunctionComponent} from \"react\";\nimport {Box, Flex} from \"rebass\";\nimport {Input} from \"@/components/ui/ReduxForm/Input\";\nimport {number} from \"@/components/ui/ReduxForm/normalizers\";\n\ninterface RecipeElementFormProps {\n  name: string,\n}\n\nexport const getRecipeFieldName = (name: string) => `recipe.${name}`\n\n\n\nexport const RecipeElementForm: FunctionComponent<RecipeElementFormProps> = (props) => {\n  const {name} = props\n  return (\n    <Flex flexDirection=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          maxWidth='3rem'\n    >\n      <Box style={{textAlign: 'center'}}\n      >\n        {name}\n      </Box>\n      <Input\n        name={getRecipeFieldName(name)}\n        type=\"number\"\n        step=\"0.01\"\n        min=\"0\"\n        max=\"999\"\n        autoComplete=\"off\"\n        normalize={number}\n        maxWidth=\"3rem\"\n        style={{\n          textAlign: \"center\"\n        }}\n      />\n    </Flex>\n  )\n}\n","import React, {FC, useEffect, useRef, useState} from \"react\";\nimport {Input as RebassInput, InputProps as RebassInputProps} from \"@rebass/forms\";\nimport {Flex} from \"rebass\";\nimport styled from \"styled-components\";\nimport {countDecimals, round} from \"@/utils\";\n\ninterface InputProps extends RebassInputProps {\n}\n\ninterface Size {\n  width: number,\n  height: number\n}\n\n\nexport const StyledInput = styled(RebassInput)`\n  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n    width: 0;\n    height: 0;\n  }\n  -moz-appearance: textfield;\n`\n\n\ninterface StyledSpinnerButtonProps extends Size {\n\n}\nconst StyledSpinnerButton = styled.button<Partial<StyledSpinnerButtonProps>>`\n  width: ${(props) => props.width}px;\n  height: 3em;\n  position: absolute;\n  z-index: 30;\n`\n\n\nexport const NumberInput: FC<InputProps> = (props: any) => {\n  const step = parseFloat(props.step || 1)\n  const precision = countDecimals(step)\n  const [value, setValue] = useState(props.value)\n  const [showBtn, setShowBtn] = useState(false)\n  const [inputSize, setInputSize] = useState<Size | null>(null)\n  const inputRef = useRef<HTMLInputElement>()\n  const upButtonRef = useRef() as React.MutableRefObject<HTMLButtonElement>\n  const downButtonRef = useRef() as React.MutableRefObject<HTMLButtonElement>\n\n  const onFocusHandler = () => {\n    setShowBtn(true)\n  }\n  const onBlurHandler = (e: FocusEvent) => {\n    if (![upButtonRef?.current, downButtonRef?.current].includes(e.relatedTarget as any)) {\n      setShowBtn(false)\n    }\n  }\n\n  const onUpButtonHandler = () => {\n    inputRef?.current?.focus()\n    let v = round(value + step || 1, precision)\n    setValue(v)\n    props.onChange({target: {value: v}})\n  }\n  const onDownButtonHandler = () => {\n    inputRef?.current?.focus()\n    let v = round(value - step || 1, precision)\n    setValue(v)\n    props.onChange({target: {value: v}})\n  }\n\n  useEffect(() => {\n    if (value !== props.value) {\n      setValue(props.value)\n    }\n  }, [props.value, value])\n\n\n  useEffect(() => {\n    setInputSize({\n      width: inputRef?.current?.offsetWidth || 0,\n      height: inputRef?.current?.offsetHeight || 0,\n    })\n  }, [inputRef])\n\n\n\n  const offset = -(inputSize?.height || 0) + 5\n\n  return (\n    <Flex flexDirection=\"column\" sx={{position: 'relative'}}>\n      {showBtn ? <StyledSpinnerButton\n        ref={upButtonRef}\n        onClick={onUpButtonHandler}\n        style={{top: `${offset}px`}}\n        width={inputSize?.width}\n      >^</StyledSpinnerButton> : null}\n      <StyledInput\n        ref={inputRef}\n        {...props}\n        onFocus={onFocusHandler}\n        onBlur={onBlurHandler}\n\n        lang=\"en-US\"\n        value={value}\n      />\n      {showBtn ? <StyledSpinnerButton\n        ref={downButtonRef}\n        onClick={onDownButtonHandler}\n        style={{bottom: `${offset}px`}}\n        width={inputSize?.width}\n      >v</StyledSpinnerButton> : null}\n    </Flex>\n  )\n}\n","import React, {ChangeEvent, useState} from \"react\";\nimport {Box, Button, Flex} from \"rebass\";\n\nimport {useFormName, useFormValues} from \"@/hooks/ReduxForm\";\nimport {CalculatorFormValues} from \"@/components/Calculator/types\";\nimport {calculateNPKBalance} from '@/calculator/helpers';\nimport {Elements, NeedElements} from \"@/calculator/types\";\nimport {decimal} from \"@/components/ui/ReduxForm/normalizers\";\nimport {FERTILIZER_ELEMENT_NAMES, MACRO_ELEMENT_NAMES, MICRO_ELEMENT_NAMES} from \"@/calculator/constants\";\nimport {NumberInput as StyledInput} from \"@/components/ui/RebassWidgets/Number\";\nimport {ALLOWED_ELEMENT_IN_MATRIX, convertProfileWithEC, convertProfileWithRatio} from \"@/calculator/profile\";\nimport {StyledBalanceCell} from \"@/components/Calculator/Options/Recipe\";\nimport {round} from \"@/utils\";\nimport {ModalActions} from \"@/components/ui/Modal/Modal\";\n\ninterface RecipeTuneFormProps {\n  modal: ModalActions,\n  onSave: (npk: NeedElements) => void\n}\n\nconst ELEMENT_IN_MATRIX = ALLOWED_ELEMENT_IN_MATRIX.filter(el => ![\"NH4\", \"NO3\"].includes(el))\n\nexport function RecipeTuneForm(props: RecipeTuneFormProps) {\n  const formValue = useFormValues<CalculatorFormValues>(useFormName())[0]\n  const [recipe, setRecipe] = useState(formValue.recipe)\n  const recipeInfo = calculateNPKBalance(recipe as Elements)\n  const [ratio, setRatio] = useState(recipeInfo.ratio)\n  const [EC, setEC] = useState(recipeInfo.EC)\n\n  const onChangeRecipe = (el: FERTILIZER_ELEMENT_NAMES, value: number) => {\n    setRecipe({...recipe, [el]: value})\n  }\n  const onChangeEC = (val: number) => {\n    setRecipe(convertProfileWithEC(recipe as Elements, val))\n    setEC(val)\n  }\n  const onChangeRatio = (El1: ALLOWED_ELEMENT_IN_MATRIX, El2: ALLOWED_ELEMENT_IN_MATRIX, val: number) => {\n    if (val) {\n      let newNpk = convertProfileWithRatio(recipe, {[El1]: {[El2]: val}})\n      newNpk = convertProfileWithEC(newNpk, EC)\n      setRecipe(newNpk)\n    }\n    setRatio({...ratio, [El1]: {...ratio[El1], [El2]: val}})\n  }\n\n  const onSaveHandler = () => {\n    props.onSave(recipe)\n    props.modal.close()\n  }\n  return (\n    <Flex flexDirection={'column'}>\n      <Flex>\n        {MACRO_ELEMENT_NAMES.map(el => (\n          <RecipeInput\n            name={el}\n            label={el}\n            value={recipe[el]}\n            onChange={val => onChangeRecipe(el, val)}\n            step={0.1}\n          />\n        ))}\n        <RecipeInput name={'EC'} label={\"EC\"} value={EC} onChange={onChangeEC}/>\n      </Flex>\n      <Flex justifyContent=\"space-around\">\n        <StyledBalanceCell name=\"ΔΣ I\" value={recipeInfo.ion_balance}/>\n        <StyledBalanceCell name=\"EC\" value={recipeInfo.EC}/>\n        <RecipeInput\n          name={'NH4'}\n          label={\"%NH4\"}\n          value={round(ratio.NH4.NO3 * 100, 1)}\n          step={0.1}\n          onChange={v => onChangeRatio('NH4', 'NO3', v / 100)}\n        />\n        <StyledBalanceCell name=\"K:Mg\" value={recipeInfo.ratio.K.Mg}/>\n        <StyledBalanceCell name=\"K:Ca\" value={recipeInfo.ratio.K.Ca}/>\n        <StyledBalanceCell name=\"Ca:N\" value={recipeInfo.ratio.Ca.N}/>\n        <StyledBalanceCell name=\"N:K\" value={recipeInfo.ratio.N.K}/>\n        <StyledBalanceCell name=\"N:P\" value={recipeInfo.ratio.N.P}/>\n      </Flex>\n      <Flex>\n        <table>\n          <thead>\n          <tr>\n            <th></th>\n            {ELEMENT_IN_MATRIX.map(el => <th>{el}</th>)}\n          </tr>\n          </thead>\n          <tbody>\n          {ELEMENT_IN_MATRIX.map(el => (\n            <tr>\n              <th>{el}</th>\n              {ELEMENT_IN_MATRIX.map(el2 => (\n                <td style={{textAlign: 'center'}}>\n                  {el === el2 ? 1 : (\n                    <RecipeInput\n                      name={`${el}:${el2}`}\n                      value={round(ratio?.[el]?.[el2] || 0, 2)}\n                      onChange={value => onChangeRatio(el, el2, value)}\n                    />\n                  )}\n                </td>\n              ))}\n\n            </tr>\n\n          ))}\n          </tbody>\n        </table>\n      </Flex>\n      <Flex justifyContent=\"space-around\">\n        {MICRO_ELEMENT_NAMES.map(el => (\n          <RecipeInput\n            name={el}\n            label={el}\n            value={(recipe[el] || 0) * 1000}\n            onChange={val => onChangeRecipe(el, val / 1000)}\n            step={1}\n          />\n        ))}\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Button type=\"button\" onClick={props.modal.close}>Cancel</Button>\n        <Button type=\"button\" onClick={onSaveHandler}>Save</Button>\n      </Flex>\n    </Flex>\n  )\n}\n\ninterface RecipeInputProps {\n  name: string,\n  label?: string,\n  onChange?: (value: number) => void,\n  value?: number,\n  step?: number,\n}\n\nfunction RecipeInput(props: RecipeInputProps) {\n  const {\n    name, label, onChange,\n    value = 0,\n    step = 0.01\n  } = props\n\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value) {\n      const val = decimal(e.target.value)\n      onChange && onChange(val)\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          maxWidth='6rem'\n    >\n      {label ?\n        <Box style={{textAlign: 'center'}}>\n          {label}\n        </Box>\n        : null\n      }\n      <StyledInput\n        onChange={onChangeHandler}\n        name={name}\n        value={value}\n        type=\"number\"\n        step={step.toString()}\n        min=\"0\"\n        max=\"9999\"\n        autoComplete=\"off\"\n        maxWidth=\"6rem\"\n        lang=\"en-US\"\n        style={{\n          textAlign: \"center\"\n        }}\n      />\n    </Flex>\n  )\n}\n","import React, {FunctionComponent, useState} from \"react\";\nimport {Box, Card, Flex, Heading, Text} from \"rebass\";\nimport {Broom} from '@styled-icons/fa-solid/Broom'\nimport {Save} from '@styled-icons/boxicons-regular/Save'\nimport {Tune} from '@styled-icons/material-sharp/Tune'\nimport {getRecipeFieldName, RecipeElementForm} from \"./RecipeElementForm\";\nimport {useFormName, useFormValues} from \"@/hooks/ReduxForm\";\nimport {FERTILIZER_ELEMENT_NAMES, MACRO_ELEMENT_NAMES} from \"@/calculator/constants\";\n\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {Dropdown} from \"@/components/ui/Dropdown/Dropdown\";\nimport {CalculatorState, Recipe as RecipeType} from \"@/components/Calculator/types\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {recipePush, recipeRemove} from \"@/components/Calculator/actions\";\nimport {Elements, NeedElements} from \"@/calculator/types\";\nimport {calculateNPKBalance, getEmptyElements} from \"@/calculator/helpers\";\nimport {Modal} from \"@/components/ui/Modal/Modal\";\nimport {RecipeTuneForm} from \"@/components/Calculator/Options/RecipeTuneForm\";\nimport {round} from \"@/utils\";\n\n\nexport const StyledBalanceCell: FunctionComponent<{name:string, value: number}> = (props) => {\n  return (\n    <Flex flexDirection=\"column\" m={1} alignItems=\"center\">\n      <Heading fontSize={1}>{props.name}</Heading>\n      <Text>{props.value}</Text>\n    </Flex>\n  )\n}\n\ninterface RecipeProps {\n}\n\nexport const Recipe: FunctionComponent<RecipeProps> = () => {\n  const {\n    recipes = [],\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n\n  const [values, setValue] = useFormValues(useFormName())\n  const [selected, setSelected] = useState<RecipeType | undefined>(recipes?.[0])\n\n  const dispatch = useDispatch()\n\n  const NPKBalance = calculateNPKBalance(values.recipe || getEmptyElements())\n\n  const onChangeHandler = (item: RecipeType | null) => {\n    item && setSelected(item)\n    item && setRecipe(item.elements)\n  }\n\n  const setRecipe = (elements: NeedElements) => {\n    for (let [name, value] of Object.entries(elements)) {\n      setValue(getRecipeFieldName(name), value)\n    }\n  }\n  const resetRecipe = () => {\n    let zeroValues = Object.fromEntries(FERTILIZER_ELEMENT_NAMES.map(el => [el, 0])) as unknown as Elements\n    setRecipe(zeroValues)\n  }\n  const onEditHandler = (value: string) => {\n    let zeroValues = Object.fromEntries(FERTILIZER_ELEMENT_NAMES\n      .map(el => [el, selected?.elements[el] || 0])) as unknown as Elements\n    setSelected({name: value, elements: zeroValues})\n  }\n\n  const onAddHandler = () => {\n    if (!selected) {\n      return\n    }\n    const recipe = {...selected, elements: values.recipe}\n    dispatch(recipePush(recipe))\n  }\n  const onRemoveItemHandler = (item: RecipeType) => {\n    dispatch(recipeRemove(item))\n  }\n  return (\n    <Card>\n      <Flex flexDirection=\"column\">\n        <Flex\n        >\n          <Box flex={1} mx={2}>\n            <Dropdown<RecipeType>\n              value={selected}\n              items={recipes}\n              onChange={onChangeHandler}\n              onEdit={onEditHandler}\n              renderItem={({item}) => (\n                <Flex flex={1} justifyContent=\"space-between\">\n                  <Box width={3} backgroundColor={item.color || 'gray'}>\n                  </Box>\n                  <Box flex={1} mx={2}>\n                    {item.name}\n                  </Box>\n                  <button onClick={event => {\n                    event.stopPropagation()\n                    onRemoveItemHandler(item)\n                  }}>-\n                  </button>\n                </Flex>\n              )}\n              renderValue={item => item?.name || \"\"}\n            />\n          </Box>\n          <Box>\n            <IconButton\n              marginRight={1}\n              component={Save}\n              onClick={onAddHandler}\n            />\n            <IconButton\n              component={Broom}\n              onClick={resetRecipe}\n            />\n          </Box>\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          {\n            MACRO_ELEMENT_NAMES.map(n => <RecipeElementForm name={n}/>)\n          }\n        </Flex>\n        <Flex justifyContent=\"space-around\">\n          <Modal\n            title=\"Настройка профиля\"\n            button={({modal}) => (\n              <IconButton\n              marginRight={1}\n              component={Tune}\n              onClick={modal.open}\n              />\n            )}\n            container={({modal}) => (\n              <>\n                <RecipeTuneForm\n                  modal={modal}\n                  onSave={setRecipe}\n                />\n              </>\n            )}\n          />\n          <StyledBalanceCell name=\"ΔΣ I\" value={NPKBalance.ion_balance}/>\n          <StyledBalanceCell name=\"EC\" value={NPKBalance.EC}/>\n          <StyledBalanceCell name=\"%NH4\" value={round(NPKBalance.ratio.NH4.NO3 * 100, 1)}/>\n          <StyledBalanceCell name=\"K:Mg\" value={NPKBalance.ratio.K.Mg}/>\n          <StyledBalanceCell name=\"K:Ca\" value={NPKBalance.ratio.K.Ca}/>\n          <StyledBalanceCell name=\"Ca:N\" value={NPKBalance.ratio.Ca.N}/>\n        </Flex>\n      </Flex>\n    </Card>\n  )\n}\n","import React from \"react\";\nimport {countDecimals, round} from \"@/utils\";\nimport {useSelector} from \"react-redux\";\nimport {getFormValues} from \"redux-form\";\nimport {REDUX_FORM_NAME} from \"@/components/Calculator/constants\";\nimport {CalculatorFormValues} from \"@/components/Calculator/types\";\nimport {FertilizerWeights} from \"@/calculator\";\n\ninterface ResultFertilizerListProps {\n    fertilizers: FertilizerWeights[],\n}\n\n\nexport function ResultFertilizerList(props: ResultFertilizerListProps) {\n    const {fertilizers} = props\n    const {\n      accuracy\n    } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n    return (\n        <>\n            {fertilizers.map(f => {\n                return (\n                  <li key={f.id}>\n                      {round(f.weight, countDecimals(accuracy))}г\n                      &nbsp;\n                      <span title=\"Объем или вес раствора\">{f.volume && `(${f.volume} мл${f.liquid_weight? `, ${f.liquid_weight}г`: ''})`}</span>\n                      &nbsp;\n                      {f.id}\n                  </li>\n                )\n            })}\n        </>\n    )\n}\n","import {useSelector} from \"react-redux\";\nimport {CalculatorFormValues, CalculatorState} from \"@/components/Calculator/types\";\nimport {entries, toMap} from \"@/utils\";\nimport {groupFertilizerBySolution} from \"@/calculator/dilution\";\nimport {FertilizerWeights} from \"@/calculator\";\nimport {calculatePPM} from \"@/calculator/helpers\";\nimport {getFormValues} from \"redux-form\";\nimport {REDUX_FORM_NAME} from \"@/components/Calculator/constants\";\n\nexport function usePPM() {\n  const {\n    result,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n  const {\n    solution_volume,\n  } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n\n  const fertilizerWeights = (result?.fertilizers || []).map(f => ({...f}))\n\n  const ppm = calculatePPM(\n    fertilizerWeights,\n    solution_volume,\n  );\n\n  return ppm\n}\n\nexport function useFertilizerSolutionGroup() {\n  const {\n    fertilizers,\n    result,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n\n  const fertilizersWeights = (result?.fertilizers || []).map(f => ({...f}))\n\n  const fertilizerWeightsMap = toMap(fertilizersWeights, 'id')\n\n  const pairs = entries(groupFertilizerBySolution(fertilizers))\n    .sort(([a], [b]) => a > b ? 1 : -1)\n  const fertilizerWeightGroups: [typeof pairs[0][0], FertilizerWeights[]][] = pairs\n    .map(([g, fList]) => {\n        let ws = fList\n          .map((f) => fertilizerWeightsMap[f.id])\n          .filter(f => f)\n        return [g, ws]\n      }\n    )\n\n  return fertilizerWeightGroups\n\n}\n","import {FertilizerInfo} from \"./types\";\nimport {normalizeFertilizer} from \"./fertilizer\";\nimport {round} from \"../utils\";\n\nexport interface Solution {\n  id: string,\n  volume: number,\n  concentration: number,\n  // TODO плотность\n}\n\nexport type DilutionResult = Omit<Solution, \"concentration\">\n\nexport function dilution_solution(target: Solution, sources: Omit<Solution, \"volume\">[]): DilutionResult[] {\n  const result: DilutionResult[] = []\n  for (let s of sources) {\n    result.push({\n      id: s.id,\n      volume: round((target.volume / s.concentration) * target.concentration, 2)\n    })\n  }\n  return result\n}\n\n\ntype FertilizerGroupBySolution = { [K in \"A\" | \"B\" | \"C\"]?: FertilizerInfo[] }\n\n// Делим удобрения на несколько растворов\n// Бутылка-1 Макра-азотная\n// Селитра амиачная\n// Селитра калиевая\n// Селитра кальциевая\n//\n// Бутылка 2 Макра-серно-фосфорная\n// Сульфат аммония\n// Сульфат магния семиводный\n// Монофосфат калия\nexport function groupFertilizerBySolution(fertilizers: FertilizerInfo[]): FertilizerGroupBySolution {\n  const groups: FertilizerGroupBySolution = {}\n  for (let f of fertilizers) {\n    let nf = normalizeFertilizer(f)\n    if (nf.elements.NO3) {\n      groups.A = [...groups.A || [], f]\n      continue\n    }\n    if (nf.elements.S || nf.elements.P) {\n      groups.B = [...groups.B || [], f]\n      continue\n    }\n    groups.C = [...groups.C || [], f]\n\n  }\n  return groups\n}\n","import React from \"react\";\nimport {dilution_solution, DilutionResult} from \"@/calculator/dilution\";\nimport {useSelector} from \"react-redux\";\nimport {getFormValues} from \"redux-form\";\nimport {REDUX_FORM_NAME} from \"@/components/Calculator/constants\";\nimport {CalculatorFormValues} from \"@/components/Calculator/types\";\nimport {useFertilizerSolutionGroup, usePPM} from \"@/components/Calculator/Result/hooks\";\nimport {Flex, Heading} from \"rebass\";\nimport {ppmToEC} from \"@/calculator/helpers\";\nimport {round} from \"@/utils\";\n\ninterface DilutionResultProps {\n}\n\nexport function ResultDilution(props: DilutionResultProps) {\n  const {\n    solution_concentration,\n    dilution_enabled,\n    dilution_volume,\n    dilution_concentration,\n  } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n\n  const fertilizerWeightGroups = useFertilizerSolutionGroup()\n  let ppm = usePPM()\n\n  if (!dilution_enabled) {\n    return null\n  }\n\n  ppm = round((dilution_concentration * ppm) / solution_concentration)\n\n  let dilution: DilutionResult[] | null = null\n\n  dilution = dilution_solution({\n    id: \"Total\",\n    volume: dilution_volume,\n    concentration: dilution_concentration,\n  }, fertilizerWeightGroups.map(([g]) => (\n    {\n      id: g, concentration: solution_concentration\n    })))\n\n  return (\n    <>\n      <Flex flexDirection=\"column\" width=\"75%\">\n        <Heading fontSize={2}>Разбавление</Heading>\n          <ul>\n            {dilution.map(d => (\n              <li>Раствор {d.id} - {d.volume < 1 ? `${d.volume * 1000}мл`: `${d.volume}л` }</li>\n            ))}\n            <li>\n              Долить до {dilution_volume}л\n            </li>\n            <li>\n              <b>TDS:</b> {ppm} ppm; <b>EC:</b> {ppmToEC(ppm, 1)} мСм/см\n            </li>\n          </ul>\n      </Flex>\n\n    </>\n  )\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Card, Flex, Heading, Text} from \"rebass\";\nimport {useSelector} from \"react-redux\";\nimport {CalculatorFormValues, CalculatorState} from \"../types\";\nimport {getFormValues} from \"redux-form\";\nimport {REDUX_FORM_NAME} from \"../constants\";\nimport {MACRO_ELEMENT_NAMES, MICRO_ELEMENT_NAMES} from \"@/calculator/constants\";\nimport {Element} from \"../FertilizerSelect/SelectedListItem\";\nimport styled from \"styled-components\";\nimport {calculateNPKBalance, getEmptyElements, ppmToEC} from \"@/calculator/helpers\";\nimport {StyledBalanceCell} from \"../Options/Recipe\";\nimport {ResultFertilizerList} from \"./ResultFertilizerList\";\nimport {useFertilizerSolutionGroup, usePPM} from \"./hooks\";\nimport {ResultDilution} from \"@/components/Calculator/Result/ResultDilution\";\nimport {round, sum} from \"@/utils\";\n\ninterface ResultProps {\n}\n\nconst StyledList = styled.ul`\n  @media screen and (min-width: 800px) {\n    width: 75%;\n  }\n`\n\nfunction getScoreDisplay(score: number): string {\n  let score_display = \"Не соответствует\";\n  if (score >= 95) score_display = \"Идеально\";\n  if (score >= 90 && score < 95) score_display = \"Отлично\";\n  if (score >= 85 && score < 90) score_display = \"Очень хорошо\";\n  if (score >= 80 && score < 85) score_display = \"Хорошо\";\n  if (score >= 70 && score < 80) score_display = \"Средне\";\n  if (score >= 60 && score < 70) score_display = \"Плохо\";\n  if (score >= 40 && score < 60) score_display = \"Ужасно\";\n  return score_display\n}\n\n\nexport const Result: FunctionComponent<ResultProps> = () => {\n  const {\n    result,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n\n  const {\n    solution_volume,\n  } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n\n  const ppm = usePPM()\n  const fertilizerWeightGroups = useFertilizerSolutionGroup()\n\n  const score = result?.score || 0\n  const elements = result?.elements || getEmptyElements()\n  const deltaElements = result?.deltaElements || getEmptyElements()\n  const NPKBalance = calculateNPKBalance(elements)\n\n  const liquidFertilizersVolume = round(sum((result?.fertilizers || []).map(f => f.volume || 0)), 1)\n\n  return (\n    <Card>\n      <Flex alignItems=\"center\" flexDirection=\"column\" width=\"100%\">\n        <Heading fontSize={2}>Результат расчета</Heading>\n        <Flex justifyContent=\"space-around\" width=\"100%\">\n          {elements && MACRO_ELEMENT_NAMES.map(\n            k => <Element\n              key={k}\n              name={k}\n              value={round(elements[k])}\n              delta={round(deltaElements[k])}\n            />\n          )}\n        </Flex>\n        <Flex justifyContent=\"space-around\" width=\"100%\">\n          {elements && MICRO_ELEMENT_NAMES.map(\n            k => <Element\n              key={k}\n              name={k}\n              value={round(elements[k] * 1000)}\n              delta={round(deltaElements[k] * 1000)}\n            />\n          )}\n        </Flex>\n        <Flex justifyContent=\"space-around\">\n          <StyledBalanceCell name=\"ΔΣ I\" value={NPKBalance.ion_balance}/>\n          <StyledBalanceCell name=\"EC\" value={NPKBalance.EC}/>\n          <StyledBalanceCell name=\"%NH4\" value={round(NPKBalance.ratio.NH4.NO3 * 100, 1)}/>\n          <StyledBalanceCell name=\"K:Mg\" value={NPKBalance.ratio.K.Mg}/>\n          <StyledBalanceCell name=\"K:Ca\" value={NPKBalance.ratio.K.Ca}/>\n          <StyledBalanceCell name=\"Ca:N\" value={NPKBalance.ratio.Ca.N}/>\n        </Flex>\n        <Heading fontSize={2}>\n          Оценка: {getScoreDisplay(score)}\n        </Heading>\n\n        <Text fontSize={6}>{`${score || 0}%`}</Text>\n        <StyledList>\n          <li>Для {solution_volume}л раствора</li>\n          {fertilizerWeightGroups.map(([g, f_weights]) =>\n            (<li>\n                <b> Раствор {g} </b>\n                <ul>\n                  <ResultFertilizerList fertilizers={f_weights}/>\n                </ul>\n              </li>\n            )\n          )}\n          <li>Долить {(solution_volume * 1000) - liquidFertilizersVolume} мл воды до {solution_volume}л</li>\n          <li title=\"Или минерализация, в мг/л\">\n            <b>TDS:</b> {ppm} ppm; <b>EC:</b> {ppmToEC(ppm, 1)} мСм/см\n          </li>\n        </StyledList>\n        <ResultDilution/>\n        {result?.stats &&\n        <Text>\n          Обработано вариантов: {result?.stats.count} Время: {result?.stats.time} сек\n        </Text>\n        }\n      </Flex>\n    </Card>\n  )\n}\n\n","import React from \"react\";\nimport {Export} from \"@styled-icons/boxicons-regular/Export\"\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {useSelector} from \"react-redux\";\nimport {CalculatorState} from \"@/components/Calculator/types\";\nimport {FERTILIZER_ELEMENT_NAMES} from \"@/calculator/constants\";\nimport {csvExport} from \"@/utils/csv\";\nimport {saveData} from \"@/utils/downloads\";\n\ninterface ExportRecipesProps {\n}\n\nexport function ExportRecipes(props: ExportRecipesProps) {\n  const {\n    recipes,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n  const doExport = () => {\n    const rows = recipes.map(f => {\n      const cols = FERTILIZER_ELEMENT_NAMES.map(n => f.elements[n])\n      return [f.name, ...cols]\n    })\n    const csvData = csvExport(rows, {columns: ['Профиль', ...FERTILIZER_ELEMENT_NAMES], header: true})\n    saveData(csvData, \"Профили.csv\")\n  }\n  return (\n    <>\n      <IconButton onClick={doExport} component={Export}/>\n    </>\n  )\n}\n","import React, {ChangeEvent, createRef, useEffect, useState} from \"react\";\nimport {Import} from \"@styled-icons/boxicons-regular/Import\"\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {csvParse} from \"@/utils/csv\";\nimport {FERTILIZER_ELEMENT_NAMES} from \"@/calculator/constants\";\nimport {useDispatch} from \"react-redux\";\nimport {recipePush} from \"@/components/Calculator/actions\";\n\ninterface ImportRecipesProps {\n}\n\nconst COLUMNS = ['id', ...FERTILIZER_ELEMENT_NAMES]\n\nexport function ImportRecipes(props: ImportRecipesProps) {\n  const buttonRef = createRef<HTMLButtonElement>()\n  const dispatch = useDispatch()\n  const [size, setSize] = useState({width: 0, height: 0})\n  useEffect(() => {\n    const newSize = {\n      width: buttonRef.current?.offsetWidth || 0,\n      height: buttonRef.current?.offsetHeight || 0,\n    }\n    if (size.width !== newSize.width) {\n      setSize(newSize)\n    }\n  }, [buttonRef, size.width])\n\n  const loadCSV = (csv: string) => {\n    const p = csvParse(csv, {columns: COLUMNS})\n    if (isNaN(parseInt(p[0].P))) {\n      p.splice(0, 1)\n    }\n    for (let {id, ...npk} of p) {\n      dispatch(recipePush({name: id, elements: npk}))\n    }\n  }\n\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e.target.value, e.target.files?.[0])\n    const file = e.target.files?.[0]\n    if (!file) {\n      return file\n    }\n    let reader = new FileReader();\n    reader.onload = () => {\n      console.log(reader.result)\n      loadCSV(reader.result as string)\n\n    }\n    reader.readAsText(file)\n\n  }\n  return (\n    <>\n      <IconButton\n        sx={{\n          position: \"relative\"\n        }}\n        ref={buttonRef}\n        component={Import}\n      >\n        <input type=\"file\"\n               accept=\"text/csv, .csv\"\n               onChange={event => handleOnChange(event)}\n               style={{\n                 top: 0,\n                 left: 0,\n                 position: \"absolute\",\n                 opacity: 0,\n                 ...size,\n               }}\n        />\n      </IconButton>\n    </>\n  )\n}\n","import {SxStyleProp} from \"rebass\";\n\nexport function mobileStyles(styles: SxStyleProp) {\n  return {\n    '@media screen and (max-width: 800px)': styles\n  }\n}\n","import React from \"react\";\nimport {Export} from \"@styled-icons/boxicons-regular/Export\"\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {useSelector} from \"react-redux\";\nimport {CalculatorState} from \"@/components/Calculator/types\";\nimport {saveData} from \"@/utils/downloads\";\n\ninterface ExportRecipesProps {\n}\n\nexport interface ExportStateJSON {\n  meta: {\n    version: string,\n    ref: string,\n    created: string\n  },\n  calculator: Pick<CalculatorState, 'calculationForm' | 'result' | 'fertilizers' | 'recipes'>\n}\n\nexport function ExportState(props: ExportRecipesProps) {\n  const {\n    calculationForm,\n    result,\n    fertilizers,\n    recipes,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n  const doExport = () => {\n    const created = new Date().toISOString()\n    const state: ExportStateJSON = {\n      meta: {\n        version: __VERSION__,\n        ref: __COMMIT_HASH__,\n        created: created\n      },\n      calculator: {\n        calculationForm,\n        result,\n        fertilizers,\n        recipes,\n      }\n    }\n    const fileData = JSON.stringify(state, null, 4)\n    saveData(fileData, `CalculatorSettings-${created}.json`)\n  }\n  return (\n    <>\n      <IconButton onClick={doExport} component={Export}/>\n    </>\n  )\n}\n","import React, {ChangeEvent, createRef, useEffect, useState} from \"react\";\nimport {Import} from \"@styled-icons/boxicons-regular/Import\"\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {useDispatch} from \"react-redux\";\nimport {loadStateStart} from \"@/components/Calculator/actions\";\nimport {ExportStateJSON} from \"@/components/Calculator/ImportExport/ExportState\";\n\ninterface ImportStateProps {\n}\n\n\nexport function ImportState(props: ImportStateProps) {\n  const buttonRef = createRef<HTMLButtonElement>()\n  const dispatch = useDispatch()\n  const [size, setSize] = useState({width: 0, height: 0})\n  useEffect(() => {\n    const newSize = {\n      width: buttonRef.current?.offsetWidth || 0,\n      height: buttonRef.current?.offsetHeight || 0,\n    }\n    if (size.width !== newSize.width) {\n      setSize(newSize)\n    }\n  }, [buttonRef, size.width])\n\n  const loadData = (json: string) => {\n    // TODO validate\n    const p = JSON.parse(json) as ExportStateJSON\n\n    dispatch(loadStateStart(p))\n\n  }\n\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e.target.value, e.target.files?.[0])\n    const file = e.target.files?.[0]\n    if (!file) {\n      return file\n    }\n    let reader = new FileReader();\n    reader.onload = () => {\n      console.log(reader.result)\n      loadData(reader.result as string)\n\n    }\n    reader.readAsText(file)\n\n  }\n  return (\n    <>\n      <IconButton\n        sx={{\n          position: \"relative\"\n        }}\n        ref={buttonRef}\n        component={Import}\n      >\n        <input type=\"file\"\n               accept=\"text/json, .json\"\n               onChange={event => handleOnChange(event)}\n               style={{\n                 top: 0,\n                 left: 0,\n                 position: \"absolute\",\n                 opacity: 0,\n                 ...size,\n               }}\n        />\n      </IconButton>\n    </>\n  )\n}\n","import React from \"react\";\nimport {Box, Card, Flex, Heading, Text} from 'rebass'\nimport {Restart} from \"@styled-icons/remix-line/Restart\"\nimport {Form, reduxForm} from \"redux-form\";\nimport {connect, useDispatch} from \"react-redux\";\n\nimport FertilizerSelect from './FertilizerSelect'\nimport {Options} from \"./Options/Options\";\nimport {Result} from \"./Result/Result\";\nimport {CalculatorFormValues} from \"./types\";\nimport {ReduxFormType} from \"../ui/ReduxForm/types\";\nimport {REDUX_FORM_NAME} from \"./constants\";\nimport {calculateStart, recipeReset} from \"./actions\";\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {DEFAULT_MICRO_RECIPE, DEFAULT_RECIPES} from \"@/components/Calculator/constants/recipes\";\nimport {ExportRecipes} from \"./ImportExport/ExportRecipes\";\nimport {ImportRecipes} from \"./ImportExport/ImportRecipes\";\nimport {Recipe} from \"@/components/Calculator/Options/Recipe\";\nimport {mobileStyles} from \"@/components/ui/styled\";\nimport {RootState} from \"@/redux/types\";\nimport {ExportState} from \"./ImportExport/ExportState\";\nimport {ImportState} from \"./ImportExport/ImportState\";\n\ninterface CalculatorProps {\n\n}\n\nconst initialValues: CalculatorFormValues = {\n  accuracy: 0.2,\n  solution_volume: 1,\n  solution_concentration: 100,\n  recipe: {...DEFAULT_RECIPES[0].elements, ...DEFAULT_MICRO_RECIPE, Cl: 0},\n  fertilizers: [],\n  dilution_enabled: false,\n  dilution_volume: 20,\n  dilution_concentration: 1,\n}\nexport const CalculatorContainer: ReduxFormType<CalculatorProps, CalculatorFormValues> = ({handleSubmit}) => {\n  const dispatch = useDispatch()\n  return (\n    <Form\n      onSubmit={handleSubmit(() => {\n        dispatch(calculateStart())\n      })}\n    >\n      <Flex sx={{\n        flexDirection: 'row',\n        ...mobileStyles({\n          flexDirection: 'column-reverse',\n        })\n      }}>\n        <Box flex={1}\n             sx={{\n               marginRight: 2,\n               ...mobileStyles({\n                 marginRight: 0\n               })\n             }}\n        >\n          <FertilizerSelect/>\n        </Box>\n        <Flex flexDirection='column' flex={1}>\n          <Box flex={1} marginBottom={2}>\n            <Recipe/>\n          </Box>\n          <Box flex={1}>\n            <Result/>\n          </Box>\n          <Box flex={1}>\n            <Options/>\n          </Box>\n          <Card>\n            <Heading fontSize={2}>Импорт/Экспорт</Heading>\n            <Flex flexDirection=\"column\" p={3}>\n              <Flex alignItems='center'\n                    justifyContent=\"space-between\"\n                    flexWrap=\"wrap\"\n              >\n                <Text>Рецепты</Text>\n                <Box sx={{\n                  \"&>*\": {\n                    marginLeft: 1\n                  }\n                }}>\n                  <ImportRecipes/>\n                  <ExportRecipes/>\n                  <IconButton\n                    component={Restart}\n                    onClick={() => dispatch(recipeReset())}\n                  />\n                </Box>\n              </Flex>\n              <Flex alignItems='center'\n                    justifyContent=\"space-between\"\n                    flexWrap=\"wrap\"\n              >\n                <Text>Настройки</Text>\n                <Box sx={{\n                  \"&>*\": {\n                    marginLeft: 1\n                  }\n                }}>\n                  <ImportState/>\n                  <ExportState/>\n                </Box>\n              </Flex>\n            </Flex>\n          </Card>\n        </Flex>\n      </Flex>\n    </Form>\n  )\n}\n\n\nconst InitializerCalculator = reduxForm<CalculatorFormValues>({\n  form: REDUX_FORM_NAME,\n  initialValues,\n  enableReinitialize: true\n})(CalculatorContainer)\n\nconst ReduxCalculator = connect((state: RootState) => {\n  const formValues: CalculatorFormValues = (state.calculator?.calculationForm || initialValues)\n  return {\n    initialValues: {\n      ...formValues,\n      recipe: {Cl: 0, ...DEFAULT_MICRO_RECIPE, ...formValues.recipe}\n    }\n  }})(InitializerCalculator)\n\nexport default ReduxCalculator\n"],"sourceRoot":""}