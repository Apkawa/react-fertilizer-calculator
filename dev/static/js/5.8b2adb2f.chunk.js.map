{"version":3,"sources":["components/ui/IconButton.tsx","components/ui/ReduxForm/normalizers.ts","components/ui/RebassWidgets/index.ts","components/ui/ReduxForm/Input.tsx","hooks/ReduxForm.ts","components/ui/ReduxForm/Checkbox.tsx","../node_modules/@emotion-icons/emotion-icon/index.esm.js","../node_modules/@emotion-icons/boxicons-solid/ChevronDownSquare/ChevronDownSquare.esm.js","components/ui/Dropdown/context.ts","components/ui/Dropdown/DropdownItem.tsx","components/ui/Dropdown/DropdownList.tsx","components/ui/Dropdown/Dropdown.tsx","utils/csv.ts","components/ui/Modal/ModalContainer.tsx","components/ui/Modal/Modal.tsx","components/Calculator/FertilizerSelect/SelectedListItem.tsx","utils/downloads.ts","components/Calculator/FertilizerManager/AddItemElementForm.tsx","components/Calculator/FertilizerManager/AddEditCompositionList.tsx","components/Calculator/FertilizerManager/AddEdit.tsx","components/Calculator/FertilizerSelect/AddItem.tsx","components/Calculator/FertilizerSelect/SelectedList.tsx","components/Calculator/FertilizerSelect/Container.tsx","components/Calculator/FertilizerSelect/index.ts","components/ui/ReduxForm/validators.ts","components/Calculator/Options/IgnoreElement.tsx","components/ui/ReduxForm/Radio.tsx","components/Calculator/Options/Accuracy.tsx","components/Calculator/Options/Solution.tsx","components/Calculator/Options/Dilution.tsx","components/Calculator/Options/ToppingUp.tsx","components/Calculator/Options/Options.tsx","../node_modules/@styled-icons/fa-solid/Broom/Broom.esm.js","../node_modules/@styled-icons/boxicons-regular/Save/Save.esm.js","../node_modules/@styled-icons/material-sharp/Tune/Tune.esm.js","components/Calculator/Options/RecipeElementForm.tsx","components/ui/RebassWidgets/Number.tsx","components/Calculator/ImportExport/format/base.ts","components/Calculator/ImportExport/format/hpg.ts","components/Calculator/Options/RecipeTuneForm.tsx","components/Calculator/Options/Recipe.tsx","components/Calculator/Result/ResultFertilizerList.tsx","components/Calculator/Result/hooks.ts","calculator/dilution.ts","components/Calculator/Result/ResultDilution.tsx","../node_modules/@styled-icons/fa-regular/Save/Save.esm.js","components/Calculator/Result/Result.tsx","components/Calculator/ImportExport/ExportRecipes.tsx","components/Calculator/ImportExport/ImportRecipes.tsx","components/ui/styled.ts","components/Calculator/ImportExport/ExportState.tsx","components/Calculator/ImportExport/format/json.ts","components/Calculator/ImportExport/format/index.ts","components/Calculator/ImportExport/ImportState.tsx","components/Calculator/index.tsx"],"names":["IconButton","forwardRef","props","buttonRef","IconComponent","component","size","children","extraProps","useState","containerSize","setSize","theme","useTheme","useEffect","current","offsetWidth","marginRight","type","ref","color","colors","background","style","number","value","parseInt","decimal","parseFloat","Input","styled","RebassInput","WrappedInput","input","label","lang","placeholder","name","useFormName","useContext","ReduxFormContext","form","useFormValues","formName","dispatch","useDispatch","useSelector","state","getFormValues","change","WrappedCheckbox","checked","Checkbox","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","filterSVGProps","reduce","p","k","key","validProp","EmotionIconBaseBase","React","iconAttrs","iconViewBox","iconVerticalAlign","title","otherProps","_objectWithoutProperties","iconProps","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","viewBox","height","undefined","width","focusable","role","svgProps","_extends","EmotionIconBase","_styled","ChevronDownSquare","d","displayName","DropdownContext","createContext","ItemContainer","padding","sx","position","zIndex","backgroundColor","content","left","top","opacity","StyledItemBox","Box","disabled","css","DropdownItem","index","ctx","onClick","onItemClick","checkDisabledItem","renderItem","item","DropdownList","items","itemRef","useRef","setHeight","offsetHeight","maxHeight","overflowY","flexDirection","Array","from","map","s","margin","IconDown","text","Dropdown","renderValue","opened","setOpened","setItem","setValue","editing","setEditing","containerRef","handleClickOutside","event","contains","document","addEventListener","removeEventListener","onClickItemHandler","onChange","context","Provider","val","onKeyDown","stopPropagation","onEdit","onBlur","right","csvParse","parse","csvExport","stringify","StyledOverlay","Flex","window","pageYOffset","ModalContainer","modalRoot","el","querySelector","createElement","setAttribute","body","appendChild","useModalRoot","ReactDOM","createPortal","Helmet","Modal","button","container","closed","setClose","onClose","modalActions","open","close","renderCbProps","modal","justifyContent","fontSize","Icon","Cross","Element","delta","bg","flex","mx","px","minWidth","maxWidth","alignItems","SelectedListItem","onRemove","weight","normalizedFertilizer","normalizeFertilizer","id","FERTILIZER_ELEMENT_NAMES","v","elements","textAlign","volume","liquid_weight","alignSelf","saveData","a","data","fileName","blob","Blob","url","URL","createObjectURL","href","download","click","revokeObjectURL","AddItemElementForm","min","max","autoComplete","normalize","AddEditCompositionList","fields","formula","percent","f","step","remove","getInitialValues","formData","npk","composition","composition_enable","solution_concentration","solution_density","solution_density_enable","formToFertilizer","formValues","AddEdit","reduxForm","FERTILIZER_EDIT_FORM_NAME","enableReinitialize","Form","MACRO_ELEMENT_NAMES","MICRO_ELEMENT_NAMES","FieldArray","whiteSpace","AddItem","onAdd","fertilizers","calculator","calculationForm","selected","setSelected","fertilizersIDs","pr","includes","onAddHandler","Plus","SelectedList","error","meta","result","calculatedFertilizersWeights","fromEntries","marginTop","Container","validate","message","IgnoreElement","Radio","toString","ACCURACY_VARIANTS","Accuracy","Solution","topping_up_enabled","REDUX_FORM_NAME","htmlFor","paddingTop","Dilution","dilution_enabled","display","pattern","ToppingUp","required","Options","my","marginLeft","Broom","StyledIconBase","fill","Save","Tune","getRecipeFieldName","RecipeElementForm","StyledInput","StyledSpinnerButton","NumberInput","precision","countDecimals","showBtn","setShowBtn","inputSize","setInputSize","inputRef","upButtonRef","downButtonRef","offset","focus","round","onFocus","e","relatedTarget","bottom","BaseFormat","ext","FERTILIZERS","HPGFormat","parsed","els","entries","elementsToNPK","fInfo","microNPK","chkComplex","buildNPKFertilizer","string","pairs","split","l","tryParseFloat","solution_volume","V","this","buildFertilizers","version","created","recipe","tAml","dilution_volume","dilution_concentration","accuracy","chK2SO4","chMgNO3","recipes","profile","trim","pair","join","NO3","NH4","ELEMENT_IN_MATRIX","ALLOWED_ELEMENT_IN_MATRIX","IMPORTANT_CELLS","BLOCKING_CELLS","RecipeTuneForm","formValue","setRecipe","recipeInfo","getNPKDetailInfo","ratio","setRatio","EC","setEC","stringifyProfile","profileString","setProfileString","onChangeRecipe","newRecipe","Ca","fixIonicBalanceByCa","S","fixIonicBalanceByS","calculateEC","getProfileRatioMatrix","onChangeRatio","El1","El2","newNpk","convertProfileWithRatio","convertProfileWithEC","RecipeInput","ion_balance","N","K","Mg","el2","marginY","parseProfileString","onChangeProfileString","onSave","borderColor","StyledBalanceCell","m","Recipe","values","NPKBalance","getEmptyElements","zeroValues","recipeRemove","onRemoveItemHandler","recipePush","n","ResultFertilizerList","useFertilizerSolutionGroup","fertilizersWeights","fertilizerWeightsMap","toMap","groups","nf","A","P","B","C","groupFertilizerBySolution","sort","ResultDilution","fertilizerWeightGroups","ppm","fertilizerWeights","calculatePPM","usePPM","dilution","sources","concentration","dilution_solution","ppmToEC","StyledList","ul","Result","deltaElements","totalWeight","sum","complexFertilizer","buildFertilizerFromSolution","fertilizer_weights","g","f_weights","initialValues","fertilizerPush","stats","count","time","ExportRecipes","rows","cols","csvData","columns","header","Export","COLUMNS","ImportRecipes","createRef","newSize","handleOnChange","console","log","files","file","reader","FileReader","onload","csv","isNaN","splice","loadCSV","readAsText","Import","accept","mobileStyles","styles","ExportState","Date","toISOString","__VERSION__","__COMMIT_HASH__","fileData","JSON","JSONFormat","FORMATS","FORMATS_MAP","ACCEPT_FORMATS","ImportState","pop","import","loadStateStart","loadData","DEFAULT_RECIPES","DEFAULT_MICRO_RECIPE","Cl","CalculatorContainer","handleSubmit","onSubmit","calculateStart","FertilizerSelect","marginBottom","flexWrap","Restart","recipeReset","InitializerCalculator","ReduxCalculator","connect"],"mappings":"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","file":"static/js/5.8b2adb2f.chunk.js","sourcesContent":["import React, {forwardRef, MouseEventHandler, PropsWithChildren, useEffect, useState} from \"react\";\nimport {Button, ButtonProps} from \"rebass\";\nimport {EmotionIcon} from '@emotion-icons/emotion-icon'\n\nimport {useTheme} from \"emotion-theming\";\nimport {Theme} from \"@/themes/types\";\n\n\ninterface IconButtonProps extends\n  PropsWithChildren<Omit<ButtonProps, keyof React.HTMLProps<HTMLButtonElement>>> {\n  component: EmotionIcon,\n  disabled?: boolean,\n  onClick?: MouseEventHandler<HTMLButtonElement>,\n  size?: number | string,\n  title?: string\n}\n\nexport const IconButton = forwardRef<HTMLButtonElement, IconButtonProps>(\n  (props, buttonRef) => {\n    const {\n      component: IconComponent,\n      size = \"1.5em\",\n      children,\n      ...extraProps\n    } = props\n    const [containerSize, setSize] = useState<number | string>(size || 0)\n    const theme = useTheme<Theme>()\n\n    useEffect(() => {\n      if (!size && buttonRef && 'current' in buttonRef) {\n        setSize(buttonRef.current?.offsetWidth || 0)\n      }\n    }, [buttonRef, setSize, size])\n    let marginRight = 0;\n    if (children) {\n      marginRight = 2;\n    }\n    return (\n      <Button type=\"button\" {...extraProps} ref={buttonRef}>\n        <IconComponent\n          color={theme.colors?.background}\n          size={containerSize}\n          style={{marginRight}}\n        />\n        {children}\n      </Button>\n    )\n  })\n","\n\nexport function number(value: any) {\n  return value && parseInt(value)\n}\n\nexport function decimal(value: any) {\n  return value && parseFloat(value)\n}\n","import {Input as RebassInput, InputProps as RebassInputProps} from \"@rebass/forms\";\nimport styled from \"styled-components\";\n\n\nexport type InputProps = RebassInputProps\n\nexport const Input = styled(RebassInput)`\n  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n    width: 0;\n    height: 0;\n  }\n  -moz-appearance: textfield;\n`\n\n\n\n","import React from \"react\";\nimport {Field as ReduxField} from \"redux-form\";\n\nimport {Input as RebassInput, InputProps as RebassInputProps} from \"../RebassWidgets\";\nimport {ReduxFormComponentType, WrapperInputType} from \"./types\";\n\ninterface InputProps extends RebassInputProps {\n  label?: string\n}\n\nexport const StyledInput = RebassInput\n\nexport const WrappedInput: WrapperInputType<InputProps> = ({input, label, type = \"text\", ...props}: any) =>\n  <RebassInput  {...props}\n                {...input}\n                type={type}\n                lang=\"en-US\"\n                placeholder={label}\n  />\n\n\n// TODO вывести тип\nexport const Input: ReduxFormComponentType<InputProps> = (\n  {\n    name,\n    ...props\n  }) => {\n\n  return (\n    <ReduxField\n      component={WrappedInput}\n      name={name}\n      {...props as any}\n    />\n  )\n}\n","import {useContext} from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {change, FormContext, getFormValues, ReduxFormContext} from \"redux-form\";\n\nexport function useReduxForm(): FormContext {\n  return useContext(ReduxFormContext)\n}\n\nexport function useFormName(): string {\n  return useReduxForm().form\n}\n\nexport function useFormValues<FormValues=object>(formName: string): [FormValues, (name: string, value: any) => void] {\n  const dispatch = useDispatch()\n  const values = useSelector(state => getFormValues(formName)(state)) as FormValues\n\n  const setValue = (name: string, value: any) => {\n    dispatch(change(formName, name, value))\n  }\n  return [\n    values,\n    setValue\n    ]\n}\n","import React from \"react\";\n\nimport {Checkbox as RebassCheckbox, CheckboxProps as RebassCheckboxProps, Label} from \"@rebass/forms\";\nimport {Field as ReduxField} from \"redux-form\";\nimport {ReduxFormComponentType, WrapperInputType} from \"./types\";\n\ninterface CheckboxProps extends RebassCheckboxProps {\n  label: string\n}\n\nconst WrappedCheckbox: WrapperInputType<CheckboxProps> = ({input, label, ...props}: any) =>\n  <Label>\n    <RebassCheckbox\n      {...props} {...input}\n      checked={input.value}\n    />\n    {label}\n  </Label>\n\n// TODO вывести тип\nexport const Checkbox: ReduxFormComponentType<CheckboxProps> = ({name, ...props}) => {\n  return (\n    <ReduxField\n      component={WrappedCheckbox}\n      name={name}\n      {...props as any}\n    />\n  )\n}\n\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _styled from \"@emotion/styled-base\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport validProp from '@emotion/is-prop-valid';\n\nfunction isValidProp(key) {\n  return validProp(key);\n}\n\nfunction filterSVGProps(props) {\n  return Object.keys(props).reduce(function (p, k) {\n    if (isValidProp(k)) {\n      // hack to satisfy TypeScript complexity\n      ;\n      p[k] = props[k];\n    }\n\n    return p;\n  }, {});\n}\n\nvar EmotionIconBaseBase = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var children = props.children,\n      iconAttrs = props.iconAttrs,\n      iconVerticalAlign = props.iconVerticalAlign,\n      iconViewBox = props.iconViewBox,\n      size = props.size,\n      title = props.title,\n      otherProps = _objectWithoutProperties(props, [\"children\", \"iconAttrs\", \"iconVerticalAlign\", \"iconViewBox\", \"size\", \"title\"]);\n\n  var iconProps = _objectSpread({\n    viewBox: iconViewBox,\n    height: props.height !== undefined ? props.height : size,\n    width: props.width !== undefined ? props.width : size,\n    'aria-hidden': title == null ? 'true' : undefined,\n    focusable: 'false',\n    role: title != null ? 'img' : undefined\n  }, iconAttrs);\n\n  var svgProps = filterSVGProps(otherProps);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({}, iconProps, svgProps, {\n    ref: ref\n  }), title && /*#__PURE__*/React.createElement(\"title\", {\n    key: \"icon-title\"\n  }, title), children);\n});\nexport var EmotionIconBase = /*#__PURE__*/_styled(EmotionIconBaseBase, {\n  target: \"ex0cdmw0\",\n  label: \"EmotionIconBase\"\n})(\"display:inline-block;vertical-align:\", function (props) {\n  return props.iconVerticalAlign;\n}, \";overflow:hidden;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3RDBEIiwiZmlsZSI6ImluZGV4LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnXG5pbXBvcnQgdmFsaWRQcm9wIGZyb20gJ0BlbW90aW9uL2lzLXByb3AtdmFsaWQnXG5cbmV4cG9ydCB0eXBlIEVtb3Rpb25JY29uID0gUmVhY3QuRm9yd2FyZFJlZkV4b3RpY0NvbXBvbmVudDxcbiAgUmVhY3QuUHJvcHNXaXRob3V0UmVmPEVtb3Rpb25JY29uUHJvcHM+ICYgUmVhY3QuUmVmQXR0cmlidXRlczxTVkdTVkdFbGVtZW50PlxuPlxuXG5leHBvcnQgaW50ZXJmYWNlIEVtb3Rpb25JY29uUHJvcHMgZXh0ZW5kcyBSZWFjdC5Qcm9wc1dpdGhSZWY8UmVhY3QuU1ZHUHJvcHM8U1ZHU1ZHRWxlbWVudD4+IHtcbiAgc2l6ZT86IG51bWJlciB8IHN0cmluZ1xuICB0aXRsZT86IHN0cmluZyB8IG51bGxcbn1cblxuaW50ZXJmYWNlIEVtb3Rpb25JY29uQmFzZVByb3BzIHtcbiAgaWNvbkF0dHJzOiBSZWFjdC5TVkdQcm9wczxTVkdTVkdFbGVtZW50PlxuICBpY29uVmlld0JveDogc3RyaW5nXG4gIGljb25WZXJ0aWNhbEFsaWduOiBzdHJpbmdcbn1cblxuZnVuY3Rpb24gaXNWYWxpZFByb3Aoa2V5OiBzdHJpbmcpOiBrZXkgaXMga2V5b2YgUmVhY3QuU1ZHUHJvcHM8U1ZHU1ZHRWxlbWVudD4ge1xuICByZXR1cm4gdmFsaWRQcm9wKGtleSlcbn1cblxuZnVuY3Rpb24gZmlsdGVyU1ZHUHJvcHMocHJvcHM6IEVtb3Rpb25JY29uUHJvcHMpOiBSZWFjdC5TVkdQcm9wczxTVkdTVkdFbGVtZW50PiB7XG4gIHJldHVybiAoT2JqZWN0LmtleXMocHJvcHMpIGFzIEFycmF5PGtleW9mIEVtb3Rpb25JY29uUHJvcHM+KS5yZWR1Y2U8UmVhY3QuU1ZHUHJvcHM8U1ZHU1ZHRWxlbWVudD4+KChwLCBrKSA9PiB7XG4gICAgaWYgKGlzVmFsaWRQcm9wKGspKSB7XG4gICAgICAvLyBoYWNrIHRvIHNhdGlzZnkgVHlwZVNjcmlwdCBjb21wbGV4aXR5XG4gICAgICA7KHAgYXMgYW55KVtrXSA9IHByb3BzW2tdXG4gICAgfVxuICAgIHJldHVybiBwXG4gIH0sIHt9KVxufVxuXG5jb25zdCBFbW90aW9uSWNvbkJhc2VCYXNlID0gUmVhY3QuZm9yd2FyZFJlZjxTVkdTVkdFbGVtZW50LCBFbW90aW9uSWNvblByb3BzICYgRW1vdGlvbkljb25CYXNlUHJvcHM+KChwcm9wcywgcmVmKSA9PiB7XG4gIGNvbnN0IHtjaGlsZHJlbiwgaWNvbkF0dHJzLCBpY29uVmVydGljYWxBbGlnbiwgaWNvblZpZXdCb3gsIHNpemUsIHRpdGxlLCAuLi5vdGhlclByb3BzfSA9IHByb3BzXG5cbiAgY29uc3QgaWNvblByb3BzOiBSZWFjdC5TVkdQcm9wczxTVkdTVkdFbGVtZW50PiA9IHtcbiAgICB2aWV3Qm94OiBpY29uVmlld0JveCxcbiAgICBoZWlnaHQ6IHByb3BzLmhlaWdodCAhPT0gdW5kZWZpbmVkID8gcHJvcHMuaGVpZ2h0IDogc2l6ZSxcbiAgICB3aWR0aDogcHJvcHMud2lkdGggIT09IHVuZGVmaW5lZCA/IHByb3BzLndpZHRoIDogc2l6ZSxcbiAgICAnYXJpYS1oaWRkZW4nOiB0aXRsZSA9PSBudWxsID8gJ3RydWUnIDogdW5kZWZpbmVkLFxuICAgIGZvY3VzYWJsZTogJ2ZhbHNlJyxcbiAgICByb2xlOiB0aXRsZSAhPSBudWxsID8gJ2ltZycgOiB1bmRlZmluZWQsXG4gICAgLi4uaWNvbkF0dHJzLFxuICB9XG5cbiAgY29uc3Qgc3ZnUHJvcHMgPSBmaWx0ZXJTVkdQcm9wcyhvdGhlclByb3BzKVxuXG4gIHJldHVybiAoXG4gICAgPHN2ZyB7Li4uaWNvblByb3BzfSB7Li4uc3ZnUHJvcHN9IHJlZj17cmVmfT5cbiAgICAgIHt0aXRsZSAmJiA8dGl0bGUga2V5PVwiaWNvbi10aXRsZVwiPnt0aXRsZX08L3RpdGxlPn1cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L3N2Zz5cbiAgKVxufSlcblxuZXhwb3J0IGNvbnN0IEVtb3Rpb25JY29uQmFzZSA9IHN0eWxlZChFbW90aW9uSWNvbkJhc2VCYXNlKWBcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogJHsocHJvcHMpID0+IHByb3BzLmljb25WZXJ0aWNhbEFsaWdufTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbmBcbiJdfQ== */\"));","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { EmotionIconBase } from '@emotion-icons/emotion-icon';\nexport var ChevronDownSquare = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(EmotionIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5 21h14c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2zM7.707 9.293L12 13.586l4.293-4.293 1.414 1.414L12 16.414l-5.707-5.707 1.414-1.414z\"\n  }));\n});\nChevronDownSquare.displayName = 'ChevronDownSquare';\nexport var ChevronDownSquareDimensions = {\n  height: 24,\n  width: 24\n};","import React, {Context} from \"react\";\nimport {ItemCallback, RenderItemCallback} from \"./types\";\n\n// TODO  сделать генерик\nexport interface DropdownContextInterface<T=any> {\n  onItemClick?: ItemCallback<T>,\n  renderItem?: RenderItemCallback<T>\n  checkDisabledItem?: ItemCallback<T,  boolean>,\n}\n\nexport type DropdownContext<T> = Context<DropdownContextInterface<T>>\nexport const DropdownContext: DropdownContext<any> = React.createContext({})\n\n\n","import React, {FunctionComponent, useContext} from \"react\";\nimport {Box, Flex} from \"rebass\";\n// import styled from '@emotion/styled'\nimport {DropdownContext} from \"./context\";\nimport styled, {css} from \"styled-components\";\n\ninterface DropdownItemProps<T> {\n  value: T,\n  index: number,\n}\n\n\nconst ItemContainer: FunctionComponent = ({\n                                            children,\n                                          }) => {\n  return <Flex\n    padding={2}\n    sx={{\n      position: \"relative\",\n      zIndex: 1,\n      '&::before': {\n        backgroundColor: 'highlight',\n        content: '\"\"',\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        opacity: 0,\n        width: '100%',\n        height: '100%',\n        zIndex: -1,\n      },\n      '&:hover::before': {\n        opacity: 0.1,\n        // boxShadow: \"inset 0 0 0 99999px rgba(0,0,0,0.1)\"\n      }\n    }}\n  >\n    {children}\n  </Flex>\n\n}\n\nconst StyledItemBox = styled(Box)`\n  ${props => props.disabled \n    && css`\n      pointer-events: none;\n      opacity: 0.4;\n  `}\n\n`\n\nexport function DropdownItem<T>(props: DropdownItemProps<T>) {\n  const {value, index} = props;\n  const ctx = useContext(DropdownContext);\n\n  const renderItem = () => {\n    if (ctx.renderItem) {\n      return <ctx.renderItem item={value} index={index} />\n    }\n    return (value + '')\n  }\n\n  const onItemClickHandler = () => {\n    if (ctx.onItemClick) {\n      ctx.onItemClick(value)\n    }\n  }\n\n  return (\n    <StyledItemBox\n      onClick={onItemClickHandler}\n      disabled={ctx.checkDisabledItem && ctx.checkDisabledItem(value)}\n    >\n      <ItemContainer>\n        {renderItem()}\n      </ItemContainer>\n    </StyledItemBox>\n  )\n}\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {Box, Card, Flex} from \"rebass\";\nimport {DropdownItem} from \"./DropdownItem\";\n\ninterface DropdownListProps<T> {\n  items: T[],\n}\n\nexport function DropdownList<T>(props: DropdownListProps<T>) {\n  const items = props.items\n\n  const itemRef = useRef<HTMLDivElement>()\n  const [height, setHeight] = useState(0)\n\n  useEffect(() => {\n    setHeight(itemRef?.current?.offsetHeight || 0)\n  }, [itemRef])\n\n  return (\n    <Card\n      backgroundColor={\"background\"}\n      padding={0}\n      maxHeight={height * 5}\n      overflowY={'auto'}\n      sx={{zIndex: 3}}\n    >\n      <Flex flexDirection=\"column\">\n        {Array.from(items).map((s, i) => {\n          return (\n            <Box ref={i === 0 ? itemRef: null}>\n              <DropdownItem<T>\n                value={s}\n                index={i}\n                key={i}\n              />\n              {i < items.length - 1 ? <hr style={{margin: 0}}/> : null}\n            </Box>\n          )\n        })}\n      </Flex>\n    </Card>\n  )\n}\n","import React, {ChangeEvent, KeyboardEvent, useEffect, useRef, useState} from \"react\";\nimport {Input} from \"@rebass/forms\";\nimport {Box, Flex} from \"rebass\";\nimport styled from '@emotion/styled'\nimport {ChevronDownSquare} from '@emotion-icons/boxicons-solid/ChevronDownSquare'\nimport {DropdownList} from \"./DropdownList\";\nimport {DropdownContext, DropdownContextInterface} from \"./context\";\nimport {ItemCallback, ItemType, RenderItemCallback, RenderValueCallback} from \"./types\";\n\nconst IconDown = styled(ChevronDownSquare)`\n  color: ${(props: any) => props.theme.colors.text};\n  height: 3rem;\n  opacity: 0.5;\n  \n  &:hover {\n    opacity: 0.7;\n  }\n`\n\nexport interface DropdownProps<T> {\n  value?: ItemType<T>,\n  items: T[],\n  renderValue?: RenderValueCallback<T>,\n  renderItem?: RenderItemCallback<T>,\n  checkDisabledItem?: ItemCallback<T,  boolean>,\n\n  onEdit?: (value: string) => void,\n  onChange?: (item: ItemType<T>) => void,\n  width?: number\n}\n\nexport function Dropdown<T>(props: DropdownProps<T>) {\n  const {width} = props\n  const renderValue: RenderValueCallback<T> = item => {\n    if (props.renderValue) {\n      return props.renderValue(item)\n    }\n    return (item || '') + ''\n  }\n\n  const [opened, setOpened] = useState(false)\n  const [item, setItem] = useState(props.value || null)\n  const [value, setValue] = useState(renderValue(props.value || null))\n  const [editing, setEditing] = useState(false)\n  const containerRef = useRef<HTMLDivElement>()\n\n  useEffect(() => {\n    function handleClickOutside(event: MouseEvent) {\n      if (containerRef.current\n        && !containerRef.current.contains(event.target as any)) {\n        setOpened(false)\n      }\n    }\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [containerRef])\n\n  const onClickItemHandler = (item: ItemType<T>) => {\n    setItem(item)\n    setValue(renderValue(item))\n\n    props.onChange && props.onChange(item)\n    setEditing(false)\n    setOpened(false)\n  }\n  const onChangeInputHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    const val = event.target.value\n    setValue(val)\n    setEditing(true)\n    setOpened(false)\n  }\n\n  const onKeyDownInputHandler = (event: KeyboardEvent<HTMLInputElement>) => {\n    event.stopPropagation()\n    if (event.key === 'Enter') {\n      props.onEdit && props.onEdit(value)\n    }\n    if (event.key === 'Escape') {\n      onClickItemHandler(item)\n    }\n  }\n\n  const onBlurInputHandler = () => {\n    if (editing) {\n      value && props.onEdit && props.onEdit(value)\n    }\n  }\n\n  const context: DropdownContextInterface<T> = {\n    onItemClick: onClickItemHandler,\n    renderItem: props.renderItem,\n    checkDisabledItem: props.checkDisabledItem,\n  }\n\n  return (\n    <DropdownContext.Provider value={context}>\n      <Flex flexDirection=\"column\" width={width} ref={containerRef}>\n        <Flex sx={{position: 'relative'}}>\n          <Input\n            value={value}\n            onChange={onChangeInputHandler}\n            onKeyDown={onKeyDownInputHandler}\n            onBlur={onBlurInputHandler}\n          />\n          <Box\n            sx={{\n              position: \"absolute\",\n              right: 0\n            }}\n          >\n            <IconDown\n              onClick={() => setOpened(!opened)}\n            />\n          </Box>\n        </Flex>\n        <Flex sx={{position: 'relative'}}>\n          <Flex sx={{position: \"absolute\"}}\n                flexDirection=\"column\"\n                width=\"100%\"\n          >\n            {opened && <DropdownList<T> items={props.items}/>}\n          </Flex>\n        </Flex>\n      </Flex>\n    </DropdownContext.Provider>\n  )\n}\n","import parse from \"csv-parse/lib/sync\"\nimport stringify from \"csv-stringify/lib/sync\"\n\nexport const csvParse = parse\nexport const csvExport = stringify\n\n\n","import React, {ReactNode} from \"react\";\nimport ReactDOM from 'react-dom'\nimport {Card, Flex} from \"rebass\";\nimport styled from '@emotion/styled'\nimport {Helmet} from \"react-helmet\";\n\n\ninterface ModalContainerProps {\n  children: ReactNode,\n}\n\nconst useModalRoot = () => {\n  let el = document.querySelector('#modal-root')\n  if (!el) {\n    el = document.createElement('div')\n    el.setAttribute('id', 'modal-root')\n    document.body.appendChild(el)\n  }\n  return el\n}\n\nconst StyledOverlay = styled(Flex)`\n  overflow-y: auto;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: ${() => `${window.pageYOffset}px`};\n  left: 0;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.5);\n  z-index: 999;\n  \n  // Mobile\n  @media screen and (max-height: 500px), screen and (max-width: 500px) {\n    align-items: initial;\n  }\n`\n\nexport function ModalContainer(props: ModalContainerProps) {\n  const {\n    children,\n  } = props\n  const modalRoot = useModalRoot()\n  return ReactDOM.createPortal(\n    <>\n      <Helmet>\n        <style type='text/css'>\n          {`\n          body {\n            overflow: hidden;\n          }\n        `}\n        </style>\n      </Helmet>\n      <StyledOverlay>\n        <Card backgroundColor='#fff' height=\"max-content\">\n          {children}\n        </Card>\n      </StyledOverlay>\n    </>\n    , modalRoot)\n}\n","import React, {ReactNode, useEffect, useState} from \"react\";\nimport {ModalContainer} from \"@/components/ui/Modal/ModalContainer\";\nimport {Box, Flex, Heading} from \"rebass\";\nimport {Icon} from \"@/components/ui/Icon\";\nimport {Cross} from \"@styled-icons/entypo/Cross\";\n\nexport interface ModalActions {\n  open: () => void,\n  close: () => void,\n}\n\ntype RenderCb = (props: {modal: ModalActions}) => ReactNode\n\ninterface ModalProps {\n  opened?: boolean,\n  onClose?: () => void,\n  button?: RenderCb,\n  title?: string,\n  container: RenderCb,\n}\n\nexport function Modal(props: ModalProps) {\n  const {\n    opened = false,\n    button,\n    container,\n  } = props\n\n  const [closed, setClose] = useState(!opened)\n\n  useEffect(() => {\n    setClose(!opened)\n  }, [opened])\n\n  useEffect(() => {\n    if (closed && props.onClose) {\n      props.onClose()\n    }\n  }, [closed, props])\n\n  const modalActions: ModalActions = {\n    open: () => setClose(false),\n    close: () => setClose(true),\n  }\n  const renderCbProps = {modal: modalActions}\n\n  return (\n    <>\n      {button && button(renderCbProps)}\n      {closed ? null : <ModalContainer>\n        <Flex justifyContent='space-between'>\n          <Heading fontSize={2}>{props.title}</Heading>\n          <Icon component={Cross} onClick={modalActions.close}/>\n        </Flex>\n        <Box>\n          {container(renderCbProps)}\n        </Box>\n      </ModalContainer>\n      }\n    </>\n  )\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Box, Card, Flex, Text} from \"rebass\";\nimport {Cross} from \"@styled-icons/entypo/Cross\"\nimport {FertilizerType} from \"./types\";\nimport {normalizeFertilizer} from \"@/calculator/fertilizer\";\nimport {FERTILIZER_ELEMENT_NAMES} from \"@/calculator/constants\";\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {FertilizerWeights} from \"@/calculator\";\n\ninterface ElementProps {\n  name: string,\n  value: number,\n  delta?: number,\n}\n\nexport const Element: FunctionComponent<ElementProps> = (props) => {\n  const {name, value, delta} = props\n  return (\n    <Box bg={name} flex={1} mx=\"2px\" px={1} color={'black'} minWidth=\"2.1em\" maxWidth=\"4em\" fontSize={1}>\n      <Flex flexDirection='column' alignItems={'center'}>\n        <Box>{name}</Box>\n        <Box>{value}</Box>\n        {typeof delta !== \"undefined\" ? <Box>{delta}</Box> : null}\n      </Flex>\n    </Box>\n  )\n}\n\ninterface SelectedListItemProps {\n  item: FertilizerType,\n  onRemove: () => void,\n  weight?: FertilizerWeights,\n}\n\n\nexport const SelectedListItem: FunctionComponent<SelectedListItemProps> = ({item, onRemove, weight}) => {\n  const normalizedFertilizer = normalizeFertilizer(item, false)\n  return (\n    <Card width={'auto'}>\n      <Flex justifyContent={'space-between'} alignItems=\"center\">\n        <Box flex={1}>\n          <Text flex={1}>\n            {item.id}\n          </Text>\n          <Flex>\n            {\n              FERTILIZER_ELEMENT_NAMES.map((name) => {\n                  let v = normalizedFertilizer.elements[name]\n                  if (!v) {\n                    return null\n                  }\n                  return <Element\n                    name={name}\n                    key={name}\n                    value={v}\n                  />\n                }\n              )\n            }\n          </Flex>\n        </Box>\n        <Flex>\n          <Flex alignItems=\"center\" justifyContent=\"center\" margin={1}>\n            {weight ? (\n              <Text textAlign=\"center\" minWidth=\"3em\">\n                {weight.weight}г\n                {weight.volume ? (\n                  <>\n                    <br/>\n                    <span\n                      title=\"Объем или вес раствора\">{weight.volume && `${weight.volume} мл${weight.liquid_weight? `, ${weight.liquid_weight}г`:''}`}</span>\n                  </>\n                ) : null}\n              </Text>\n            ) : null}\n          </Flex>\n          <IconButton\n            padding={1}\n            alignSelf=\"center\"\n            component={Cross}\n            onClick={() => onRemove()}\n          />\n        </Flex>\n      </Flex>\n    </Card>\n  )\n}\n","export const saveData = (function () {\n  const a = document.createElement(\"a\");\n  document.body.appendChild(a);\n  a.setAttribute('style', \"display: none\")\n  return function (data: string, fileName: string) {\n    const blob = new Blob([data], {type: \"octet/stream\"})\n    const url = window.URL.createObjectURL(blob)\n    a.href = url;\n    a.download = fileName;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n})();\n\nexport {}\n","import React, {FunctionComponent} from \"react\";\nimport {Flex} from \"rebass\";\nimport {Input} from \"@/components/ui/ReduxForm/Input\";\nimport {decimal} from \"@/components/ui/ReduxForm/normalizers\";\n\ninterface RecipeElementFormProps {\n  name: string,\n  disabled?: boolean\n}\n\n\n\n\nexport const AddItemElementForm: FunctionComponent<RecipeElementFormProps> = (props) => {\n  const {name, disabled} = props\n\n  return (\n    <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" width='4rem'>\n      <label style={{textAlign: 'center'}}>\n        {name}\n      </label>\n      <Input\n        name={'npk.' + name}\n        type=\"number\"\n        min=\"0\"\n        max=\"100\"\n        autoComplete=\"off\"\n        width=\"3rem\"\n        style={{\n          textAlign: \"center\"\n        }}\n        normalize={decimal}\n        disabled={disabled}\n      />\n    </Flex>\n  )\n}\n","import React from \"react\";\nimport {ReduxFieldArrayType} from \"@/components/ui/ReduxForm/types\";\nimport {Card, Flex} from \"rebass\";\nimport {FertilizerComposition} from \"@/calculator/types\";\nimport {Input} from \"@/components/ui/ReduxForm/Input\";\nimport {decimal} from \"@/components/ui/ReduxForm/normalizers\";\n\ninterface AddEditCompositionListProps {\n}\n\ntype AddEditCompositionListType = ReduxFieldArrayType<AddEditCompositionListProps, FertilizerComposition>\nexport const AddEditCompositionList: AddEditCompositionListType = (props) => {\n  const {fields} = props\n  return (\n    <Card width=\"100%\">\n      <Flex>\n        <button type=\"button\"  onClick={() => fields.push({formula: '', percent: 98})}>+</button>\n      </Flex>\n      <Flex flexDirection=\"column\">\n        {fields.map((f, i) => (\n          <Flex key={i} width=\"100%\">\n            <Input name={`${f}.formula`} flex={2}/>\n            <Input\n              name={`${f}.percent`}\n              type=\"number\"\n              step=\"0.1\"\n              min=\"0\"\n              max=\"100\"\n              normalize={decimal}\n              flex={1}\n            />\n            <button type=\"button\" onClick={() => fields.remove(i)}>-</button>\n          </Flex>\n        ))}\n      </Flex>\n    </Card>\n  )\n}\n","import React from \"react\";\nimport {Box, Flex, Text} from \"rebass\";\n\nimport {FieldArray, Form, reduxForm} from 'redux-form'\nimport {ReduxFormType} from \"@/components/ui/ReduxForm/types\";\nimport {Input} from \"@/components/ui/ReduxForm/Input\";\nimport {normalizeFertilizer} from \"@/calculator/fertilizer\";\nimport {MACRO_ELEMENT_NAMES, MICRO_ELEMENT_NAMES} from \"@/calculator/constants\";\nimport {FertilizerInfo} from \"@/calculator/types\";\n\nimport {AddItemElementForm} from \"./AddItemElementForm\";\n\nimport {FERTILIZER_EDIT_FORM_NAME} from \"./constants\";\nimport {AddEditFormType} from \"./types\";\nimport {Checkbox} from \"@/components/ui/ReduxForm/Checkbox\";\nimport {AddEditCompositionList} from \"@/components/Calculator/FertilizerManager/AddEditCompositionList\";\nimport {useFormName, useFormValues} from \"@/hooks/ReduxForm\";\nimport {decimal, number} from \"@/components/ui/ReduxForm/normalizers\";\nimport {Label} from \"@rebass/forms\";\n\ninterface AddEditProps {\n  fertilizer?: FertilizerInfo,\n}\n\nexport const getElements = (f: FertilizerInfo) => {\n  return normalizeFertilizer(f, false).elements\n}\n\nexport function getInitialValues(f: FertilizerInfo): AddEditFormType {\n  let formData: AddEditFormType = {\n    id: f.id,\n    npk: f.npk,\n    composition: f.composition,\n  }\n  if (f.composition) {\n    formData.npk = normalizeFertilizer(f, false).elements\n    formData.composition_enable = true\n  }\n  if (f.solution_concentration) {\n    formData.solution_concentration = f.solution_concentration\n    formData.solution_density = f.solution_density || 1000\n    formData.solution_density_enable = true\n  }\n  return formData\n}\n\nexport function formToFertilizer(formValues: AddEditFormType): FertilizerInfo {\n  const f: FertilizerInfo = {\n    id: formValues.id,\n    name: formValues.name,\n  }\n  if (formValues.composition_enable) {\n    f.composition = formValues.composition\n  } else {\n    f.npk = formValues.npk\n  }\n  if (formValues.solution_density_enable) {\n    f.solution_density = formValues.solution_density\n    f.solution_concentration = formValues.solution_concentration\n  }\n  return f\n}\n\nconst AddEditForm: ReduxFormType<AddEditProps, AddEditFormType> = (props) => {\n  const formValues = useFormValues<AddEditFormType>(useFormName())[0]\n\n  return (\n    <Form>\n      <Flex flexDirection='column'>\n        <Input name=\"id\" title=\"Name\" label=\"Name\"/>\n        <Box>\n          Макроэлементы\n        </Box>\n        <Flex>\n          {MACRO_ELEMENT_NAMES.map(el => (\n            <AddItemElementForm\n              name={el}\n              disabled={formValues.composition_enable}\n            />\n          ))}\n        </Flex>\n        <Box>\n          Микроэлементы\n        </Box>\n        <Flex>\n          {MICRO_ELEMENT_NAMES.map(el => (\n            <AddItemElementForm\n              name={el}\n              disabled={formValues.composition_enable}\n            />\n          ))}\n        </Flex>\n        <Flex>\n          <Checkbox name=\"composition_enable\" label=\"Формула\"/>\n        </Flex>\n        {formValues.composition_enable ?\n          <Flex>\n            <FieldArray<{}>\n              name=\"composition\"\n              component={AddEditCompositionList}\n            />\n          </Flex> : null\n        }\n        <Flex alignItems='center'>\n          <Box width=\"auto\" marginRight={2}>\n            <Checkbox\n              name=\"solution_density_enable\" label=\"Раствор\"\n            />\n          </Box>\n          {formValues.solution_density_enable ?\n            <Flex flexDirection=\"column\">\n              <Flex alignItems=\"flex-end\">\n                <Label flexDirection=\"column\">\n                  Концентрация\n                  <Input\n                    name=\"solution_concentration\"\n                    type=\"number\"\n                    step=\"0.1\"\n                    min=\"0\"\n                    max=\"3000\"\n                    normalize={decimal}\n                    width='5em'\n                    marginRight={2}\n                  />\n                  <Text sx={{whiteSpace: 'nowrap'}}>г/л</Text>\n                </Label>\n              </Flex>\n              <Flex alignItems=\"flex-end\">\n                <Label flexDirection=\"column\">\n                  Плотность\n                  <Input\n                    name=\"solution_density\"\n                    type=\"number\"\n                    step=\"1\"\n                    min=\"800\"\n                    max=\"3000\"\n                    normalize={number}\n                    width='5em'\n                    marginRight={2}\n                  />\n                </Label>\n                <Text sx={{whiteSpace: 'nowrap'}}>г/л</Text>\n              </Flex>\n            </Flex>\n            : null}\n        </Flex>\n      </Flex>\n    </Form>\n  )\n}\n\n\nexport const AddEdit = reduxForm<AddEditFormType>({\n  form: FERTILIZER_EDIT_FORM_NAME,\n  enableReinitialize: true\n})(AddEditForm)\n","import React, {FunctionComponent, useState} from \"react\";\nimport {Box, Card, Flex} from \"rebass\";\nimport {FertilizerType} from \"./types\";\nimport {Dropdown} from \"@/components/ui/Dropdown/Dropdown\";\nimport {Plus} from \"@styled-icons/boxicons-regular/Plus\"\n\nimport {useSelector} from \"react-redux\";\nimport {CalculatorState} from \"../types\";\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {FertilizerInfo} from \"@/calculator/types\";\n\ninterface AddItemProps {\n  onAdd: (item: FertilizerType) => void\n}\n\n\nexport const AddItem: FunctionComponent<AddItemProps> = ({onAdd}) => {\n  const {\n    fertilizers,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n  const {\n    calculationForm,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n\n  const [selected, setSelected] = useState<FertilizerInfo | undefined>(fertilizers[0])\n\n  const selectedFertilizers = calculationForm?.fertilizers || [];\n  const fertilizersIDs = selectedFertilizers.map(f => f?.id)\n\n  const onChangeHandler = (item: FertilizerInfo | null) => {\n    item && setSelected(item)\n  }\n\n\n  const onAddHandler = (item: FertilizerInfo) => {\n    onAdd(item)\n  }\n  return (\n    <Card>\n      <Flex flexDirection=\"column\">\n        <Flex justifyContent=\"space-between\">\n          <Box flex={1} pr={2}>\n            <Dropdown<FertilizerInfo>\n              value={selected}\n              items={fertilizers}\n              onChange={onChangeHandler}\n              checkDisabledItem={item => fertilizersIDs.includes(item?.id || \"\")}\n              renderItem={({item}) => (\n                <Flex flex={1} justifyContent=\"space-between\">\n                  <Box>\n                    {item.id}\n                  </Box>\n                  <IconButton\n                    onClick={(event) => {\n                      event.stopPropagation()\n                      onAddHandler(item)\n                    }}\n                    component={Plus}\n                  />\n                </Flex>\n              )}\n              renderValue={item => item?.id || \"\"}\n            />\n          </Box>\n        </Flex>\n      </Flex>\n\n    </Card>\n  )\n}\n\n","import React from \"react\";\nimport {Flex} from \"rebass\";\nimport {SelectedListItem} from \"./SelectedListItem\";\nimport {AddItem} from \"./AddItem\";\nimport {ReduxFieldArrayType} from \"../../ui/ReduxForm/types\";\nimport {FertilizerType} from \"./types\";\nimport {CalculatorState} from \"../types\";\nimport {useSelector} from \"react-redux\";\n\ninterface SelectedListProps {\n}\n\nexport const SelectedList: ReduxFieldArrayType<SelectedListProps, FertilizerType> = (\n  {fields, meta: {error}}) => {\n  const {\n    calculationForm,\n    result,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n  const fertilizers = calculationForm?.fertilizers || [];\n\n  const calculatedFertilizersWeights = Object.fromEntries((result?.fertilizers || []).map(f => [f.id, f]))\n\n  const onAddHandler = (item: FertilizerType) => {\n    for (let f of fertilizers) {\n      if (f.id === item.id) {\n        return\n      }\n    }\n    fields.push(item)\n  }\n  return (\n    <Flex sx={{flexDirection: 'column'}} width='auto'>\n      <AddItem onAdd={onAddHandler}/>\n      <Flex sx={{\n        flexDirection: 'column',\n        '& > *': {\n          marginTop: '8px !important',\n        }\n      }}>\n        {error ? <span>{error}</span> : null}\n        {fertilizers.map((item, index) =>\n          <SelectedListItem\n            item={item}\n            key={item.id}\n            weight={calculatedFertilizersWeights[item.id]}\n            onRemove={() => fields.remove(index)}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n","import React from \"react\";\nimport {SelectedList} from \"./SelectedList\";\nimport {FieldArray} from \"redux-form\";\nimport {required} from \"../../ui/ReduxForm/validators\";\n\n\nexport const Container = () => {\n  return (\n    <FieldArray<{}>\n      name={\"fertilizers\"}\n      component={SelectedList}\n      validate={required(\"Выберите удобрения\")}\n    />\n  )\n}\n\n","import {Container} from \"./Container\";\n\nexport default Container\n","\ntype ValidatorCallback = {\n  (value: any): void|string\n}\n\nexport function pattern(pattern: RegExp|string, message?: string): ValidatorCallback {\n  message = message || 'Значение должно соответствовать регулярному выражению'\n  return (value) => {\n    pattern = new RegExp(pattern) as RegExp\n    if (pattern.test(value)) {\n      return message\n    }\n  }\n}\n\nexport function minLength(length: number, message?: string): ValidatorCallback {\n  message = message || `Количество элементов должно быть не менее ${length}`\n\n  return value => {\n    if (value.length < length) {\n      return message\n    }\n  }\n}\n\n\nexport function required(message?: string): ValidatorCallback {\n  message = message || `Должно быть заполнено`\n\n  return value => {\n    if (!value || !value?.length) {\n      return message\n    }\n  }\n}\n\n","import React, {FunctionComponent} from \"react\";\nimport {Card, Flex, Heading} from \"rebass\";\nimport {Checkbox} from \"../../ui/ReduxForm/Checkbox\";\n\ninterface IgnoreElementProps {\n}\n\n\nexport const IgnoreElement: FunctionComponent<IgnoreElementProps> = () => {\n  return (\n    <Card>\n      <Flex flexDirection=\"column\">\n        <Heading fontSize={2}>Игнорировать</Heading>\n        <Checkbox name=\"ignore.Ca\" label=\"Кальций\" />\n        <Checkbox name=\"ignore.Mg\" label=\"Магний\" />\n        <Checkbox name=\"ignore.S\" label=\"Сера\" />\n        <Checkbox name=\"ignore.Cl\" label=\"Хлор\" />\n      </Flex>\n    </Card>\n  )\n}\n","import React from \"react\";\n\nimport {Label, Radio as RebassRadio, RadioProps as RebassRadioProps} from \"@rebass/forms\";\nimport {Field as ReduxField} from \"redux-form\";\nimport {ReduxFormComponentType, WrapperInputType} from \"./types\";\n\ninterface RadioProps extends RebassRadioProps {\n  label: string,\n  value: string | number,\n}\n\nconst WrappedCheckbox: WrapperInputType<RadioProps> = ({input, label, value, ...props}: any) =>\n  <Label>\n    <RebassRadio\n      {...props}\n      {...input}\n    />\n    {label}\n  </Label>\n\n// TODO вывести тип\nexport const Radio: ReduxFormComponentType<RadioProps> = ({\n                                                            name,\n                                                            value,\n                                                            normalize= (v) => v.toString(),\n                                                            ...props\n                                                          }) => {\n  return (\n    <ReduxField\n      component={WrappedCheckbox}\n      name={name}\n      normalize={normalize}\n      // onClick={() => setChecked(!checked)}\n      // checked={checked}\n      type='radio'\n      value={normalize(value)}\n      {...props as any}\n    />\n  )\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Card, Flex, Heading} from \"rebass\";\nimport {Radio} from \"../../ui/ReduxForm/Radio\";\nimport {decimal} from \"../../ui/ReduxForm/normalizers\";\n\nconst ACCURACY_VARIANTS = [\n  0.2,\n  0.1,\n  0.05,\n  0.01,\n]\ninterface AccuracyProps {\n}\n\nexport const Accuracy: FunctionComponent<AccuracyProps> = () => {\n    return (\n      <Card>\n          <Flex flexDirection=\"column\">\n            <Heading fontSize={2}>Точность</Heading>\n            {ACCURACY_VARIANTS.map(a =>\n                <Radio\n                  name=\"accuracy\"\n                  value={a}\n                  label={`${a} г.`}\n                  normalize={decimal}\n                />\n            )}\n          </Flex>\n      </Card>\n    )\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Card, Flex, Heading} from \"rebass\";\nimport {Label} from \"@rebass/forms\";\nimport {Input} from \"../../ui/ReduxForm/Input\";\nimport {decimal} from \"../../ui/ReduxForm/normalizers\";\nimport {useSelector} from \"react-redux\";\nimport {getFormValues} from \"redux-form\";\nimport {REDUX_FORM_NAME} from \"@/components/Calculator/constants\";\nimport {CalculatorFormValues} from \"@/components/Calculator/types\";\n\n\ninterface SolutionVolumeProps {\n}\n\nexport const Solution: FunctionComponent<SolutionVolumeProps> = () => {\n  const {\n    topping_up_enabled,\n  } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n  return (\n    <Card>\n        <Heading fontSize={2}>Раствор</Heading>\n      <Flex flexDirection=\"column\">\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Label htmlFor=\"solution_volume\">Объем, л</Label>\n          <Input\n            disabled={topping_up_enabled}\n            name=\"solution_volume\"\n            width=\"4rem\"\n            type=\"number\"\n            step=\"0.05\"\n            min=\"0.1\"\n            max=\"100\"\n            normalize={decimal}\n            style={{\n              textAlign: \"center\"\n            }}\n            autoComplete=\"off\"\n          />\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" paddingTop={2}>\n          <Label htmlFor=\"solution_concentration\">Концентрация, 1/100%</Label>\n          <Input\n            disabled={topping_up_enabled}\n            name=\"solution_concentration\"\n            width=\"4rem\"\n            type=\"number\"\n            step=\"0.01\"\n            min=\"0\"\n            max=\"5000\"\n            normalize={decimal}\n            style={{\n              textAlign: \"center\"\n            }}\n            autoComplete=\"off\"\n          />\n        </Flex>\n      </Flex>\n    </Card>\n  )\n}\n","import React, {FunctionComponent} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {getFormValues} from \"redux-form\";\nimport {Card, Flex} from \"rebass\";\nimport {Label} from \"@rebass/forms\";\nimport {Input} from \"@/components/ui/ReduxForm/Input\";\nimport {decimal, number} from \"@/components/ui/ReduxForm/normalizers\";\nimport {Checkbox} from \"@/components/ui/ReduxForm/Checkbox\";\nimport {REDUX_FORM_NAME} from \"@/components/Calculator/constants\";\nimport {CalculatorFormValues} from \"@/components/Calculator/types\";\n\n\ninterface DilutionProps {\n}\n\nexport const Dilution: FunctionComponent<DilutionProps> = () => {\n  const {\n    dilution_enabled,\n  } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n  return (\n    <Card>\n      <Checkbox name=\"dilution_enabled\" label=\"Разбавление концентрата\"/>\n      <Flex flexDirection=\"column\" style={{display: dilution_enabled? \"flex\" : \"none\"}}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Label htmlFor=\"dilution_volume\">Объем, л</Label>\n          <Input\n            name=\"dilution_volume\"\n            width=\"3rem\"\n            type=\"number\"\n            step=\"1\"\n            min=\"1\"\n            pattern=\"^\\d+$\"\n            normalize={number}\n            style={{\n              textAlign: \"center\"\n            }}\n            autoComplete=\"off\"\n          />\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" paddingTop={2}>\n          <Label htmlFor=\"dilution_concentration\">Концентрация, 1/100%</Label>\n          <Input\n            name=\"dilution_concentration\"\n            width=\"3rem\"\n            type=\"number\"\n            step=\"0.1\"\n            min=\"0\"\n            max=\"2000\"\n            normalize={decimal}\n            style={{\n              textAlign: \"center\"\n            }}\n            autoComplete=\"off\"\n          />\n        </Flex>\n      </Flex>\n    </Card>\n  )\n}\n","import React, {FunctionComponent} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {getFormValues} from \"redux-form\";\nimport {Card, Flex} from \"rebass\";\nimport {Label} from \"@rebass/forms\";\nimport {Input} from \"@/components/ui/ReduxForm/Input\";\nimport {decimal, number} from \"@/components/ui/ReduxForm/normalizers\";\nimport {Checkbox} from \"@/components/ui/ReduxForm/Checkbox\";\nimport {REDUX_FORM_NAME} from \"@/components/Calculator/constants\";\nimport {CalculatorFormValues} from \"@/components/Calculator/types\";\n\ninterface ToppingUpProps {\n}\n\nexport const ToppingUp: FunctionComponent<ToppingUpProps> = () => {\n  const {\n    topping_up_enabled,\n  } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n  return (\n    <Card>\n      <Checkbox name=\"topping_up_enabled\" label=\"Долив раствора\"/>\n      {topping_up_enabled ?\n        <Flex flexDirection=\"column\" style={{display: topping_up_enabled ? \"flex\" : \"none\"}}>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Label htmlFor=\"topping_up.newSolution.volume\">Новый объем, л</Label>\n            <Input\n              name=\"topping_up.newSolution.volume\"\n              width=\"3rem\"\n              type=\"number\"\n              step=\"0.1\"\n              min=\"1\"\n              pattern=\"^\\d+$\"\n              normalize={number}\n              required\n              style={{\n                textAlign: \"center\"\n              }}\n              autoComplete=\"off\"\n            />\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Label htmlFor=\"topping_up.currentSolution.volume\">Текущий объем, л</Label>\n            <Input\n              name=\"topping_up.currentSolution.volume\"\n              width=\"3rem\"\n              type=\"number\"\n              step=\"0.1\"\n              min=\"1\"\n              pattern=\"^\\d+$\"\n              normalize={number}\n              style={{\n                textAlign: \"center\"\n              }}\n              autoComplete=\"off\"\n            />\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\" paddingTop={2}>\n            <Label htmlFor=\"topping_up.currentSolution.EC\">Текущий EC, мСм/см</Label>\n            <Input\n              name=\"topping_up.currentSolution.EC\"\n              width=\"3rem\"\n              type=\"number\"\n              step=\"0.01\"\n              min=\"0\"\n              max=\"10\"\n              normalize={decimal}\n              style={{\n                textAlign: \"center\"\n              }}\n              autoComplete=\"off\"\n            />\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\" paddingTop={2}>\n            <Label htmlFor=\"topping_up.currentSolution.profileEC\">EC профиля раствора, мСм/см</Label>\n            <Input\n              name=\"topping_up.currentSolution.profileEC\"\n              width=\"3rem\"\n              type=\"number\"\n              step=\"0.01\"\n              min=\"0\"\n              max=\"10\"\n              normalize={decimal}\n              style={{\n                textAlign: \"center\"\n              }}\n              autoComplete=\"off\"\n            />\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\" paddingTop={2}>\n            <Label htmlFor=\"topping_up.currentSolution.profileSaltsConcentration\">Концентрация солей профиля раствора,\n              г/л</Label>\n            <Input\n              name=\"topping_up.currentSolution.profileSaltsConcentration\"\n              width=\"3rem\"\n              type=\"number\"\n              step=\"0.01\"\n              min=\"0\"\n              max=\"10\"\n              normalize={decimal}\n              style={{\n                textAlign: \"center\"\n              }}\n              autoComplete=\"off\"\n            />\n          </Flex>\n        </Flex>\n        : null}\n    </Card>\n  )\n}\n","import React, {ComponentType} from \"react\";\nimport {Box, Button, Flex} from \"rebass\";\nimport {IgnoreElement} from \"./IgnoreElement\";\nimport {Accuracy} from \"./Accuracy\";\nimport {Solution} from \"./Solution\";\nimport {Dilution} from \"./Dilution\";\nimport {ToppingUp} from \"./ToppingUp\";\n\ninterface OptionsProps {\n}\n\n\nexport const Options: ComponentType<OptionsProps> = () => {\n  return (\n    <Flex flexDirection=\"column\">\n      <Box flex={1}>\n        <Button width=\"100%\" my={2} type=\"submit\">Calculate</Button>\n      </Box>\n      <Box my={2}>\n        <Solution/>\n      </Box>\n      <Box my={2}>\n        <ToppingUp/>\n      </Box>\n      <Box my={2}>\n        <Dilution/>\n      </Box>\n      <Flex sx={{\n        '& > *': {flex: 1}\n      }}>\n        <IgnoreElement/>\n        <Box marginLeft={2}>\n          <Accuracy/>\n        </Box>\n      </Flex>\n\n    </Flex>\n  )\n}\n\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Broom = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 640 512\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M256.47 216.77l86.73 109.18s-16.6 102.36-76.57 150.12C206.66 523.85 0 510.19 0 510.19s3.8-23.14 11-55.43l94.62-112.17c3.97-4.7-.87-11.62-6.65-9.5l-60.4 22.09c14.44-41.66 32.72-80.04 54.6-97.47 59.97-47.76 163.3-40.94 163.3-40.94zM636.53 31.03l-19.86-25c-5.49-6.9-15.52-8.05-22.41-2.56l-232.48 177.8-34.14-42.97c-5.09-6.41-15.14-5.21-18.59 2.21l-25.33 54.55 86.73 109.18 58.8-12.45c8-1.69 11.42-11.2 6.34-17.6l-34.09-42.92 232.48-177.8c6.89-5.48 8.04-15.53 2.55-22.44z\"\n  }));\n});\nBroom.displayName = 'Broom';\nexport var BroomDimensions = {\n  height: 512,\n  width: 640\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Save = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M9 14h6v5H9zm2-9h2v2h-2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M7 14c0-1.103.897-2 2-2h6c1.103 0 2 .897 2 2v5h2.001L19 8.414 15.586 5H15v4H7V5H5v14h2v-5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5 21h14c1.103 0 2-.897 2-2V8a.997.997 0 00-.293-.707l-4-4A.996.996 0 0016 3H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2zm10-2H9v-5h6v5zM13 7h-2V5h2v2zM5 5h2v4h8V5h.586L19 8.414 19.001 19H17v-5c0-1.103-.897-2-2-2H9c-1.103 0-2 .897-2 2v5H5V5z\"\n  }));\n});\nSave.displayName = 'Save';\nexport var SaveDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Tune = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    d: \"M0 0h24v24H0V0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3 17v2h6v-2H3zM3 5v2h10V5H3zm10 16v-2h8v-2h-8v-2h-2v6h2zM7 9v2H3v2h4v2h2V9H7zm14 4v-2H11v2h10zm-6-4h2V7h4V5h-4V3h-2v6z\"\n  }));\n});\nTune.displayName = 'Tune';\nexport var TuneDimensions = {\n  height: 24,\n  width: 24\n};","import React, {FunctionComponent} from \"react\";\nimport {Box, Flex} from \"rebass\";\nimport {Input} from \"@/components/ui/ReduxForm/Input\";\nimport {number} from \"@/components/ui/ReduxForm/normalizers\";\n\ninterface RecipeElementFormProps {\n  name: string,\n}\n\nexport const getRecipeFieldName = (name: string) => `recipe.${name}`\n\n\n\nexport const RecipeElementForm: FunctionComponent<RecipeElementFormProps> = (props) => {\n  const {name} = props\n  return (\n    <Flex flexDirection=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          maxWidth='3rem'\n    >\n      <Box style={{textAlign: 'center'}}\n      >\n        {name}\n      </Box>\n      <Input\n        name={getRecipeFieldName(name)}\n        type=\"number\"\n        step=\"0.001\"\n        min=\"0\"\n        max=\"999\"\n        autoComplete=\"off\"\n        normalize={number}\n        maxWidth=\"3rem\"\n        style={{\n          textAlign: \"center\"\n        }}\n      />\n    </Flex>\n  )\n}\n","import React, {FC, useEffect, useRef, useState} from \"react\";\nimport {Input as RebassInput, InputProps as RebassInputProps} from \"@rebass/forms\";\nimport {Flex} from \"rebass\";\nimport styled from \"styled-components\";\nimport {countDecimals, round} from \"@/utils\";\n\ninterface InputProps extends RebassInputProps {\n}\n\ninterface Size {\n  width: number,\n  height: number\n}\n\n\nexport const StyledInput = styled(RebassInput)`\n  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n    width: 0;\n    height: 0;\n  }\n  -moz-appearance: textfield;\n`\n\n\ninterface StyledSpinnerButtonProps extends Size {\n\n}\nconst StyledSpinnerButton = styled.button<Partial<StyledSpinnerButtonProps>>`\n  width: ${(props) => props.width}px;\n  height: 3em;\n  position: absolute;\n  z-index: 30;\n`\n\n\nexport const NumberInput: FC<InputProps> = (props: any) => {\n  const step = parseFloat(props.step || 1)\n  const precision = countDecimals(step)\n  const [value, setValue] = useState(props.value)\n  const [showBtn, setShowBtn] = useState(false)\n  const [inputSize, setInputSize] = useState<Size | null>(null)\n  const inputRef = useRef<HTMLInputElement>()\n  const upButtonRef = useRef() as React.MutableRefObject<HTMLButtonElement>\n  const downButtonRef = useRef() as React.MutableRefObject<HTMLButtonElement>\n\n  const onFocusHandler = () => {\n    setShowBtn(true)\n  }\n  const onBlurHandler = (e: FocusEvent) => {\n    if (![upButtonRef?.current, downButtonRef?.current].includes(e.relatedTarget as any)) {\n      setShowBtn(false)\n    }\n  }\n\n  const onUpButtonHandler = () => {\n    inputRef?.current?.focus()\n    let v = round(value + step || 1, precision)\n    setValue(v)\n    props.onChange({target: {value: v}})\n  }\n  const onDownButtonHandler = () => {\n    inputRef?.current?.focus()\n    let v = round(value - step || 1, precision)\n    setValue(v)\n    props.onChange({target: {value: v}})\n  }\n\n  useEffect(() => {\n    if (value !== props.value) {\n      setValue(props.value)\n    }\n  }, [props.value, value])\n\n\n  useEffect(() => {\n    setInputSize({\n      width: inputRef?.current?.offsetWidth || 0,\n      height: inputRef?.current?.offsetHeight || 0,\n    })\n  }, [inputRef])\n\n\n\n  const offset = -(inputSize?.height || 0) + 5\n\n  return (\n    <Flex flexDirection=\"column\" sx={{position: 'relative'}}>\n      {showBtn ? <StyledSpinnerButton\n        ref={upButtonRef}\n        onClick={onUpButtonHandler}\n        style={{top: `${offset}px`}}\n        width={inputSize?.width}\n      >^</StyledSpinnerButton> : null}\n      <StyledInput\n        ref={inputRef}\n        {...props}\n        onFocus={onFocusHandler}\n        onBlur={onBlurHandler}\n\n        lang=\"en-US\"\n        value={value}\n      />\n      {showBtn ? <StyledSpinnerButton\n        ref={downButtonRef}\n        onClick={onDownButtonHandler}\n        style={{bottom: `${offset}px`}}\n        width={inputSize?.width}\n      >v</StyledSpinnerButton> : null}\n    </Flex>\n  )\n}\n","import {ExportStateType} from \"./types\";\n\nexport abstract class BaseFormat {\n  static ext: string\n  abstract export(state: ExportStateType): string\n  abstract import(string: string): ExportStateType\n\n\n}\n","import {BaseFormat} from \"./base\";\nimport {ExportStateType} from \"./types\";\nimport {FertilizerInfo, NPKElements} from \"../../../../calculator/types\";\nimport {FERTILIZER_ELEMENT_NAMES, MICRO_ELEMENT_NAMES} from '../../../../calculator/constants';\nimport {buildNPKFertilizer, elementsToNPK, normalizeFertilizer} from \"../../../../calculator/fertilizer\";\nimport {entries, tryParseFloat} from \"../../../../utils\";\n\nconst FERTILIZERS = [\n  \"CaNO3\", \"KNO3\", \"NH4NO3\", \"MgSO4\", \"KH2PO4\", \"K2SO4\", \"MgNO3\", \"CaCl2\",\n]\n\nexport class HPGFormat extends BaseFormat {\n  static ext = \".hpg\"\n\n  export(state: ExportStateType): string {\n    return \"\";\n  }\n\n  buildFertilizers(parsed: any): FertilizerInfo[] {\n    let fertilizers = []\n    for (let f of FERTILIZERS) {\n      let els = entries(normalizeFertilizer(\n        {id: \"\", composition: [{formula: f, percent: 100}]}, true\n      ).elements).filter(e => e[1]).map(e => e[0])\n\n      let npk = elementsToNPK(Object.fromEntries(els.map(e => [e, parsed[`${f}_${e}`] || 0])))\n      const fInfo: FertilizerInfo = {\n        id: f,\n        npk,\n        solution_density: parsed[`gml${f}`] * 1000,\n        solution_concentration: parsed[`gl${f}`]\n      }\n      fertilizers.push(fInfo)\n    }\n    // Micro\n    let microNPK = Object.fromEntries(MICRO_ELEMENT_NAMES.map(e => [e, parsed[`d${e}`]]))\n    if (parsed.chkComplex === \"TRUE\") {\n      const fInfo = buildNPKFertilizer('Микро', microNPK)\n      fInfo.solution_density = parsed['gmlCmplx']\n      fInfo.solution_concentration = parsed['glCmplx']\n      fertilizers.push(fInfo)\n    } else {\n      for (let e of MICRO_ELEMENT_NAMES) {\n        if (!microNPK[e]) {\n          continue\n        }\n        const fInfo = buildNPKFertilizer(e, {[e]: microNPK[e] || 0})\n        fInfo.solution_density = parsed[`gl${e}`]\n        fInfo.solution_concentration = parsed[`gl${e}`]\n        fertilizers.push(fInfo)\n      }\n    }\n    return fertilizers\n  }\n\n  buildNPK(parsed: any) {\n  }\n\n  import(string: string): ExportStateType {\n    let pairs = string.split('\\n').map(l => l.split('=')).map(([k, v]) => [k, tryParseFloat(v)])\n    let parsed = Object.fromEntries(pairs)\n    const solution_volume = parseFloat(parsed.V || 1)\n    const fertilizers = this.buildFertilizers(parsed)\n    let npk = Object.fromEntries(\n      pairs.filter(e => FERTILIZER_ELEMENT_NAMES.includes(e[0] as FERTILIZER_ELEMENT_NAMES))\n    ) as NPKElements\n    for (let e of MICRO_ELEMENT_NAMES) {\n      let v = npk[e]\n      if (v) {\n        npk[e] = v / 1000\n      }\n    }\n    let state: ExportStateType = {\n      meta: {\n        version: parsed.version || \"\",\n        created: \"\",\n        ref: \"\",\n      },\n      calculator: {\n        calculationForm: {\n          recipe: npk,\n          solution_volume: parsed.tAml / 1000,\n          solution_concentration: (solution_volume * 1000) / parsed.tAml,\n          dilution_enabled: true,\n          dilution_volume: solution_volume,\n          dilution_concentration: 1,\n          accuracy: 0.01,\n          fertilizers: fertilizers.filter(f => {\n            if (f.id === 'K2SO4') {\n              return parsed.chK2SO4 === 'TRUE'\n            }\n            if (f.id === 'MgNO3') {\n              return parsed.chMgNO3 === 'TRUE'\n            }\n            return true\n          }),\n        },\n        result: null,\n        fertilizers,\n        recipes: [],\n      }\n    }\n\n    return state;\n  }\n\n  static parseProfileString(profile: string): NPKElements {\n    const elements: NPKElements = {}\n\n    for (let e of profile.split(' ')) {\n      e = e.trim()\n      if (e) {\n        let pair = e.split('=')\n        if (pair.length === 2 && FERTILIZER_ELEMENT_NAMES.includes(pair[0].trim() as FERTILIZER_ELEMENT_NAMES)) {\n          elements[pair[0] as FERTILIZER_ELEMENT_NAMES] = parseFloat(pair[1])\n        }\n      }\n    }\n    return elements\n  }\n\n  static stringifyProfile(npk: NPKElements): string {\n\n    let s = FERTILIZER_ELEMENT_NAMES.map(e => typeof npk[e] != \"undefined\" && `${e}=${npk[e]}`).filter(e => e).join(' ')\n    return `N=${(npk.NO3 || 0) + (npk.NH4 || 0)} ${s}`\n  }\n}\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\nimport {Box, Button, Flex} from \"rebass\";\n\nimport {useFormName, useFormValues} from \"@/hooks/ReduxForm\";\nimport {CalculatorFormValues} from \"@/components/Calculator/types\";\nimport {getNPKDetailInfo} from '@/calculator/helpers';\nimport {Elements, NeedElements} from \"@/calculator/types\";\nimport {decimal} from \"@/components/ui/ReduxForm/normalizers\";\nimport {FERTILIZER_ELEMENT_NAMES, MACRO_ELEMENT_NAMES, MICRO_ELEMENT_NAMES} from \"@/calculator/constants\";\nimport {NumberInput as StyledInput} from \"@/components/ui/RebassWidgets/Number\";\nimport {\n  ALLOWED_ELEMENT_IN_MATRIX, calculateEC,\n  convertProfileWithEC,\n  convertProfileWithRatio,\n  fixIonicBalanceByCa, fixIonicBalanceByS, getProfileRatioMatrix\n} from \"@/calculator/profile\";\nimport {StyledBalanceCell} from \"@/components/Calculator/Options/Recipe\";\nimport {entries, round} from \"@/utils\";\nimport {ModalActions} from \"@/components/ui/Modal/Modal\";\nimport {Input} from \"@rebass/forms\";\nimport {HPGFormat} from \"@/components/Calculator/ImportExport/format/hpg\";\n\ninterface RecipeTuneFormProps {\n  modal: ModalActions,\n  onSave: (npk: NeedElements) => void\n}\n\nconst ELEMENT_IN_MATRIX = ALLOWED_ELEMENT_IN_MATRIX.filter(el => ![\"NH4\", \"NO3\"].includes(el))\n\nconst IMPORTANT_CELLS = ['K:N', 'K:Ca', 'K:Mg', \"NH4:NO3\", \"P\", \"Cl\", \"EC\"]\nconst BLOCKING_CELLS = [\"N:Ca\", \"Ca:N\", \"Ca:K\", \"Ca:Mg\", \"Mg:K\", \"Mg:Ca\"]\n\nexport function RecipeTuneForm(props: RecipeTuneFormProps) {\n  const formValue = useFormValues<CalculatorFormValues>(useFormName())[0]\n  const [recipe, setRecipe] = useState(formValue.recipe)\n  const recipeInfo = getNPKDetailInfo(recipe as Elements)\n  const [ratio, setRatio] = useState(recipeInfo.ratio)\n  const [EC, setEC] = useState(recipeInfo.EC)\n\n  const [profileString, setProfileString] = useState(HPGFormat.stringifyProfile(formValue.recipe))\n\n  const onChangeRecipe = (el: FERTILIZER_ELEMENT_NAMES, value: number) => {\n    let newRecipe = {...recipe, [el]: value}\n    if (el === 'S') {\n      newRecipe.Ca = fixIonicBalanceByCa(newRecipe)\n    } else {\n      newRecipe.S = fixIonicBalanceByS(newRecipe)\n    }\n    setRecipe(newRecipe)\n    setEC(calculateEC(newRecipe))\n    setRatio(getProfileRatioMatrix(newRecipe))\n  }\n\n  const onChangeEC = (val: number) => {\n    let newRecipe = convertProfileWithEC(recipe as Elements, val)\n    setRecipe(newRecipe)\n    setEC(calculateEC(newRecipe))\n    setRatio(getProfileRatioMatrix(newRecipe))\n  }\n  const onChangeRatio = (El1: ALLOWED_ELEMENT_IN_MATRIX, El2: ALLOWED_ELEMENT_IN_MATRIX, val: number) => {\n    if (val) {\n      let newNpk = convertProfileWithRatio(recipe, {[El1]: {[El2]: val}})\n      newNpk = convertProfileWithEC(newNpk, EC)\n      setRecipe(newNpk)\n      setEC(calculateEC(newNpk))\n      setRatio(getProfileRatioMatrix(newNpk))\n    } else {\n      setRatio({...ratio, [El1]: {...ratio[El1], [El2]: val}})\n    }\n  }\n\n  const onSaveHandler = () => {\n    props.onSave(recipe)\n    props.modal.close()\n  }\n\n  function onChangeProfileString(s: string) {\n    let npk = HPGFormat.parseProfileString(s)\n    if (entries(npk).length) {\n      setProfileString(s)\n      setRecipe(npk)\n    } else {\n      // Reset\n      setProfileString(HPGFormat.stringifyProfile(recipe))\n    }\n  }\n\n  useEffect(() => {\n    setProfileString(HPGFormat.stringifyProfile(recipe))\n  }, [recipe])\n\n  return (\n    <Flex flexDirection={'column'}>\n      <Flex>\n        {MACRO_ELEMENT_NAMES.map(el => (\n          <RecipeInput\n            name={el}\n            label={el}\n            value={recipe[el]}\n            onChange={val => onChangeRecipe(el, val)}\n            step={0.1}\n          />\n        ))}\n        <RecipeInput name={'EC'} label={\"EC\"} value={EC} onChange={onChangeEC}/>\n      </Flex>\n      <Flex justifyContent=\"space-around\">\n        <StyledBalanceCell name=\"ΔΣ I\" value={recipeInfo.ion_balance}/>\n        <StyledBalanceCell name=\"EC\" value={recipeInfo.EC}/>\n        <RecipeInput\n          name={'NH4:NO3'}\n          label={\"%NH4\"}\n          value={round(ratio.NH4.NO3 * 100, 1)}\n          step={0.1}\n          onChange={v => onChangeRatio('NH4', 'NO3', v / 100)}\n        />\n        <StyledBalanceCell name=\"K:N\" value={recipeInfo.ratio.Ca.N}/>\n        <StyledBalanceCell name=\"K:Ca\" value={recipeInfo.ratio.K.Ca}/>\n        <StyledBalanceCell name=\"K:Mg\" value={recipeInfo.ratio.K.Mg}/>\n      </Flex>\n      <Flex>\n        <table>\n          <thead>\n          <tr>\n            <th></th>\n            {ELEMENT_IN_MATRIX.map(el => <th>{el}</th>)}\n          </tr>\n          </thead>\n          <tbody>\n          {ELEMENT_IN_MATRIX.map(el => (\n            <tr>\n              <th>{el}</th>\n              {ELEMENT_IN_MATRIX.map(el2 => (\n                <td style={{textAlign: 'center'}}>\n                  {el === el2 ? 1 : (\n                    <RecipeInput\n                      name={`${el2}:${el}`}\n                      value={round(ratio?.[el2]?.[el] || 0, 2)}\n                      onChange={value => onChangeRatio(el2, el, value)}\n                    />\n                  )}\n                </td>\n              ))}\n\n            </tr>\n\n          ))}\n          </tbody>\n        </table>\n      </Flex>\n      <Flex justifyContent=\"space-around\">\n        {MICRO_ELEMENT_NAMES.map(el => (\n          <RecipeInput\n            name={el}\n            label={el}\n            value={(recipe[el] || 0) * 1000}\n            onChange={val => onChangeRecipe(el, val / 1000)}\n            step={1}\n          />\n        ))}\n      </Flex>\n      <Flex marginY={2}>\n        <Input value={profileString}\n               onChange={e => setProfileString(e.target.value)}\n               onBlur={e => onChangeProfileString(e.target.value)}\n        />\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Button type=\"button\" onClick={props.modal.close}>Cancel</Button>\n        <Button type=\"button\" onClick={onSaveHandler}>Save</Button>\n      </Flex>\n    </Flex>\n  )\n}\n\ninterface RecipeInputProps {\n  name: string,\n  label?: string,\n  onChange?: (value: number) => void,\n  value?: number,\n  step?: number,\n}\n\n\nfunction RecipeInput(props: RecipeInputProps) {\n  const {\n    name, label, onChange,\n    value = 0,\n    step = 0.01\n  } = props\n\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value) {\n      const val = decimal(e.target.value)\n      onChange && onChange(val)\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          maxWidth='6rem'\n    >\n      {label ?\n        <Box style={{textAlign: 'center'}}>\n          {label}\n        </Box>\n        : null\n      }\n      <StyledInput\n        onChange={onChangeHandler}\n        name={name}\n        value={value}\n        type=\"number\"\n        step={step.toString()}\n        min=\"0\"\n        max=\"9999\"\n        autoComplete=\"off\"\n        maxWidth=\"6rem\"\n        lang=\"en-US\"\n        style={{\n          textAlign: \"center\",\n          backgroundColor: IMPORTANT_CELLS.includes(name) ? \"#b3f7b8\" : undefined,\n          color: BLOCKING_CELLS.includes(name) ? \"red\" : undefined,\n          borderColor: \"black\",\n        }}\n      />\n    </Flex>\n  )\n}\n","import React, {FunctionComponent, useState} from \"react\";\nimport {Box, Card, Flex, Heading, Text} from \"rebass\";\nimport {Broom} from '@styled-icons/fa-solid/Broom'\nimport {Save} from '@styled-icons/boxicons-regular/Save'\nimport {Tune} from '@styled-icons/material-sharp/Tune'\nimport {getRecipeFieldName, RecipeElementForm} from \"./RecipeElementForm\";\nimport {useFormName, useFormValues} from \"@/hooks/ReduxForm\";\nimport {FERTILIZER_ELEMENT_NAMES, MACRO_ELEMENT_NAMES} from \"@/calculator/constants\";\n\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {Dropdown} from \"@/components/ui/Dropdown/Dropdown\";\nimport {CalculatorState, Recipe as RecipeType} from \"@/components/Calculator/types\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {recipePush, recipeRemove} from \"@/components/Calculator/actions\";\nimport {Elements, NeedElements} from \"@/calculator/types\";\nimport {getNPKDetailInfo, getEmptyElements} from \"@/calculator/helpers\";\nimport {Modal} from \"@/components/ui/Modal/Modal\";\nimport {RecipeTuneForm} from \"@/components/Calculator/Options/RecipeTuneForm\";\nimport {round} from \"@/utils\";\n\n\nexport const StyledBalanceCell: FunctionComponent<{name:string, value: number}> = (props) => {\n  return (\n    <Flex flexDirection=\"column\" m={1} alignItems=\"center\">\n      <Heading fontSize={1}>{props.name}</Heading>\n      <Text>{props.value}</Text>\n    </Flex>\n  )\n}\n\ninterface RecipeProps {\n}\n\nexport const Recipe: FunctionComponent<RecipeProps> = () => {\n  const {\n    recipes = [],\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n\n  const [values, setValue] = useFormValues(useFormName())\n  const [selected, setSelected] = useState<RecipeType | undefined>(recipes?.[0])\n\n  const dispatch = useDispatch()\n\n  const NPKBalance = getNPKDetailInfo(values.recipe || getEmptyElements())\n\n  const onChangeHandler = (item: RecipeType | null) => {\n    item && setSelected(item)\n    item && setRecipe(item.elements)\n  }\n\n  const setRecipe = (elements: NeedElements) => {\n    for (let [name, value] of Object.entries(elements)) {\n      setValue(getRecipeFieldName(name), value)\n    }\n  }\n  const resetRecipe = () => {\n    let zeroValues = Object.fromEntries(FERTILIZER_ELEMENT_NAMES.map(el => [el, 0])) as unknown as Elements\n    setRecipe(zeroValues)\n  }\n  const onEditHandler = (value: string) => {\n    let zeroValues = Object.fromEntries(FERTILIZER_ELEMENT_NAMES\n      .map(el => [el, selected?.elements[el] || 0])) as unknown as Elements\n    setSelected({name: value, elements: zeroValues})\n  }\n\n  const onAddHandler = () => {\n    if (!selected) {\n      return\n    }\n    const recipe = {...selected, elements: values.recipe}\n    dispatch(recipePush(recipe))\n  }\n  const onRemoveItemHandler = (item: RecipeType) => {\n    dispatch(recipeRemove(item))\n  }\n  return (\n    <Card>\n      <Flex flexDirection=\"column\">\n        <Flex\n        >\n          <Box flex={1} mx={2}>\n            <Dropdown<RecipeType>\n              value={selected}\n              items={recipes}\n              onChange={onChangeHandler}\n              onEdit={onEditHandler}\n              renderItem={({item}) => (\n                <Flex flex={1} justifyContent=\"space-between\">\n                  <Box width={3} backgroundColor={item.color || 'gray'}>\n                  </Box>\n                  <Box flex={1} mx={2}>\n                    {item.name}\n                  </Box>\n                  <button onClick={event => {\n                    event.stopPropagation()\n                    onRemoveItemHandler(item)\n                  }}>-\n                  </button>\n                </Flex>\n              )}\n              renderValue={item => item?.name || \"\"}\n            />\n          </Box>\n          <Box>\n            <IconButton\n              marginRight={1}\n              component={Save}\n              onClick={onAddHandler}\n            />\n            <IconButton\n              component={Broom}\n              onClick={resetRecipe}\n            />\n          </Box>\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          {\n            MACRO_ELEMENT_NAMES.map(n => <RecipeElementForm name={n}/>)\n          }\n        </Flex>\n        <Flex justifyContent=\"space-around\">\n          <Modal\n            title=\"Настройка профиля\"\n            button={({modal}) => (\n              <IconButton\n              marginRight={1}\n              component={Tune}\n              onClick={modal.open}\n              />\n            )}\n            container={({modal}) => (\n              <>\n                <RecipeTuneForm\n                  modal={modal}\n                  onSave={setRecipe}\n                />\n              </>\n            )}\n          />\n          <StyledBalanceCell name=\"ΔΣ I\" value={NPKBalance.ion_balance}/>\n          <StyledBalanceCell name=\"EC\" value={NPKBalance.EC}/>\n          <StyledBalanceCell name=\"%NH4\" value={round(NPKBalance.ratio.NH4.NO3 * 100, 1)}/>\n          <StyledBalanceCell name=\"K:N\" value={NPKBalance.ratio.K.N}/>\n          <StyledBalanceCell name=\"K:Ca\" value={NPKBalance.ratio.K.Ca}/>\n          <StyledBalanceCell name=\"K:Mg\" value={NPKBalance.ratio.K.Mg}/>\n        </Flex>\n      </Flex>\n    </Card>\n  )\n}\n","import React from \"react\";\nimport {countDecimals, round} from \"@/utils\";\nimport {useSelector} from \"react-redux\";\nimport {getFormValues} from \"redux-form\";\nimport {REDUX_FORM_NAME} from \"@/components/Calculator/constants\";\nimport {CalculatorFormValues} from \"@/components/Calculator/types\";\nimport {FertilizerWeights} from \"@/calculator\";\n\ninterface ResultFertilizerListProps {\n    fertilizers: FertilizerWeights[],\n}\n\n\nexport function ResultFertilizerList(props: ResultFertilizerListProps) {\n    const {fertilizers} = props\n    const {\n      accuracy\n    } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n    return (\n        <>\n            {fertilizers.map(f => {\n                return (\n                  <li key={f.id}>\n                      {round(f.weight, countDecimals(accuracy))}г\n                      &nbsp;\n                      <span title=\"Объем или вес раствора\">{f.volume && `(${f.volume} мл${f.liquid_weight? `, ${f.liquid_weight}г`: ''})`}</span>\n                      &nbsp;\n                      {f.id}\n                  </li>\n                )\n            })}\n        </>\n    )\n}\n","import {useSelector} from \"react-redux\";\nimport {CalculatorFormValues, CalculatorState} from \"@/components/Calculator/types\";\nimport {entries, toMap} from \"@/utils\";\nimport {groupFertilizerBySolution} from \"@/calculator/dilution\";\nimport {FertilizerWeights} from \"@/calculator\";\nimport {calculatePPM} from \"@/calculator/helpers\";\nimport {getFormValues} from \"redux-form\";\nimport {REDUX_FORM_NAME} from \"@/components/Calculator/constants\";\n\nexport function usePPM() {\n  const {\n    result,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n  const {\n    solution_volume,\n  } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n\n  const fertilizerWeights = (result?.fertilizers || []).map(f => ({...f}))\n\n  const ppm = calculatePPM(\n    fertilizerWeights,\n    solution_volume,\n  );\n\n  return ppm\n}\n\nexport function useFertilizerSolutionGroup() {\n  const {\n    fertilizers,\n    result,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n\n  const fertilizersWeights = (result?.fertilizers || []).map(f => ({...f}))\n\n  const fertilizerWeightsMap = toMap(fertilizersWeights, 'id')\n\n  const pairs = entries(groupFertilizerBySolution(fertilizers))\n    .sort(([a], [b]) => a > b ? 1 : -1)\n  const fertilizerWeightGroups: [typeof pairs[0][0], FertilizerWeights[]][] = pairs\n    .map(([g, fList]) => {\n        let ws = fList\n          .map((f) => fertilizerWeightsMap[f.id])\n          .filter(f => f)\n        return [g, ws]\n      }\n    )\n\n  return fertilizerWeightGroups\n\n}\n","import {FertilizerInfo} from \"./types\";\nimport {normalizeFertilizer} from \"./fertilizer\";\nimport {round} from \"../utils\";\n\nexport interface Solution {\n  id: string,\n  volume: number,\n  concentration: number,\n  // TODO плотность\n}\n\nexport type DilutionResult = Omit<Solution, \"concentration\">\n\nexport function dilution_solution(target: Solution, sources: Omit<Solution, \"volume\">[]): DilutionResult[] {\n  const result: DilutionResult[] = []\n  for (let s of sources) {\n    result.push({\n      id: s.id,\n      volume: round((target.volume / s.concentration) * target.concentration, 2)\n    })\n  }\n  return result\n}\n\n\ntype FertilizerGroupBySolution = { [K in \"A\" | \"B\" | \"C\"]?: FertilizerInfo[] }\n\n// Делим удобрения на несколько растворов\n// Бутылка-1 Макра-азотная\n// Селитра амиачная\n// Селитра калиевая\n// Селитра кальциевая\n//\n// Бутылка 2 Макра-серно-фосфорная\n// Сульфат аммония\n// Сульфат магния семиводный\n// Монофосфат калия\nexport function groupFertilizerBySolution(fertilizers: FertilizerInfo[]): FertilizerGroupBySolution {\n  const groups: FertilizerGroupBySolution = {}\n  for (let f of fertilizers) {\n    let nf = normalizeFertilizer(f)\n    if (nf.elements.NO3) {\n      groups.A = [...groups.A || [], f]\n      continue\n    }\n    if (nf.elements.S || nf.elements.P) {\n      groups.B = [...groups.B || [], f]\n      continue\n    }\n    groups.C = [...groups.C || [], f]\n\n  }\n  return groups\n}\n","import React from \"react\";\nimport {dilution_solution, DilutionResult} from \"@/calculator/dilution\";\nimport {useSelector} from \"react-redux\";\nimport {getFormValues} from \"redux-form\";\nimport {REDUX_FORM_NAME} from \"@/components/Calculator/constants\";\nimport {CalculatorFormValues} from \"@/components/Calculator/types\";\nimport {useFertilizerSolutionGroup, usePPM} from \"@/components/Calculator/Result/hooks\";\nimport {Flex, Heading} from \"rebass\";\nimport {ppmToEC} from \"@/calculator/helpers\";\nimport {round} from \"@/utils\";\n\ninterface DilutionResultProps {\n}\n\nexport function ResultDilution(props: DilutionResultProps) {\n  const {\n    dilution_enabled,\n    solution_concentration=1,\n    dilution_volume=1,\n    dilution_concentration=1,\n  } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n\n  const fertilizerWeightGroups = useFertilizerSolutionGroup()\n  let ppm = usePPM()\n\n  if (!dilution_enabled) {\n    return null\n  }\n\n  ppm = round((dilution_concentration * ppm) / solution_concentration)\n\n  let dilution: DilutionResult[] | null = null\n\n  dilution = dilution_solution({\n    id: \"Total\",\n    volume: dilution_volume,\n    concentration: dilution_concentration,\n  }, fertilizerWeightGroups.map(([g]) => (\n    {\n      id: g, concentration: solution_concentration\n    })))\n\n  return (\n    <>\n      <Flex flexDirection=\"column\" width=\"75%\">\n        <Heading fontSize={2}>Разбавление</Heading>\n          <ul>\n            {dilution.map(d => (\n              <li>Раствор {d.id} - {d.volume < 1 ? `${d.volume * 1000}мл`: `${d.volume}л` }</li>\n            ))}\n            <li>\n              Долить до {dilution_volume}л\n            </li>\n            <li>\n              <b>TDS:</b> {ppm} ppm; <b>EC:</b> {ppmToEC(ppm, 1)} мСм/см\n            </li>\n          </ul>\n      </Flex>\n\n    </>\n  )\n}\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Save = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 448 512\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M433.941 129.941l-83.882-83.882A48 48 0 00316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 00-14.059-33.941zM272 80v80H144V80h128zm122 352H54a6 6 0 01-6-6V86a6 6 0 016-6h42v104c0 13.255 10.745 24 24 24h176c13.255 0 24-10.745 24-24V83.882l78.243 78.243a6 6 0 011.757 4.243V426a6 6 0 01-6 6zM224 232c-48.523 0-88 39.477-88 88s39.477 88 88 88 88-39.477 88-88-39.477-88-88-88zm0 128c-22.056 0-40-17.944-40-40s17.944-40 40-40 40 17.944 40 40-17.944 40-40 40z\"\n  }));\n});\nSave.displayName = 'Save';\nexport var SaveDimensions = {\n  height: 512,\n  width: 448\n};","import React, {FunctionComponent} from \"react\";\nimport {Button, Card, Flex, Heading, Text} from \"rebass\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {CalculatorFormValues, CalculatorState} from \"../types\";\nimport {getFormValues} from \"redux-form\";\nimport {REDUX_FORM_NAME} from \"../constants\";\nimport {MACRO_ELEMENT_NAMES, MICRO_ELEMENT_NAMES} from \"@/calculator/constants\";\nimport {Element} from \"../FertilizerSelect/SelectedListItem\";\nimport styled from \"styled-components\";\nimport {getNPKDetailInfo, getEmptyElements} from \"@/calculator/helpers\";\nimport {StyledBalanceCell} from \"../Options/Recipe\";\nimport {ResultFertilizerList} from \"./ResultFertilizerList\";\nimport {useFertilizerSolutionGroup} from \"./hooks\";\nimport {ResultDilution} from \"@/components/Calculator/Result/ResultDilution\";\nimport {round, sum} from \"@/utils\";\nimport {Modal, ModalActions} from \"@/components/ui/Modal/Modal\";\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {AddEdit, formToFertilizer, getInitialValues} from \"@/components/Calculator/FertilizerManager/AddEdit\";\nimport {Save} from \"@styled-icons/fa-regular/Save\";\nimport {buildFertilizerFromSolution} from \"@/calculator/fertilizer\";\nimport {fertilizerPush} from \"@/components/Calculator/actions\";\nimport {useFormValues} from \"@/hooks/ReduxForm\";\nimport {AddEditFormType} from \"@/components/Calculator/FertilizerManager/types\";\nimport {FERTILIZER_EDIT_FORM_NAME} from \"@/components/Calculator/FertilizerManager/constants\";\n\ninterface ResultProps {\n}\n\nconst StyledList = styled.ul`\n  @media screen and (min-width: 800px) {\n    width: 75%;\n  }\n`\n\nexport const Result: FunctionComponent<ResultProps> = () => {\n  const {\n    fertilizers,\n    result,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n\n  const {\n    solution_volume,\n  } = useSelector(getFormValues(REDUX_FORM_NAME)) as CalculatorFormValues\n\n  const fertilizerWeightGroups = useFertilizerSolutionGroup()\n\n  const elements = result?.elements || getEmptyElements()\n  const deltaElements = result?.deltaElements || getEmptyElements()\n  const NPKBalance = getNPKDetailInfo(elements)\n\n  // const liquidFertilizersVolume = round(sum((result?.fertilizers || []).map(f => f.volume || 0)), 1)\n  const totalWeight =round(sum((result?.fertilizers || []).map(f => f.weight || 0)), 2)\n\n\n  const [formValues] = useFormValues<AddEditFormType>(FERTILIZER_EDIT_FORM_NAME)\n  const dispatch = useDispatch()\n  const onSave = (modal: ModalActions) => {\n    dispatch(fertilizerPush(formToFertilizer(formValues)))\n    modal.close()\n  }\n  const complexFertilizer = buildFertilizerFromSolution(\"\", {\n    fertilizers,\n    fertilizer_weights: result?.fertilizers || [],\n    volume: solution_volume,\n  })\n\n  return (\n    <Card>\n      <Flex alignItems=\"center\" flexDirection=\"column\" width=\"100%\">\n        <Heading fontSize={2}>Результат расчета</Heading>\n        <Flex justifyContent=\"space-around\" width=\"100%\">\n          {elements && MACRO_ELEMENT_NAMES.map(\n            k => <Element\n              key={k}\n              name={k}\n              value={round(elements[k])}\n              delta={round(deltaElements[k])}\n            />\n          )}\n        </Flex>\n        <Flex justifyContent=\"space-around\" width=\"100%\">\n          {elements && MICRO_ELEMENT_NAMES.map(\n            k => <Element\n              key={k}\n              name={k}\n              value={round(elements[k] * 1000)}\n              delta={round(deltaElements[k] * 1000)}\n            />\n          )}\n        </Flex>\n        <Flex justifyContent=\"space-around\">\n          <StyledBalanceCell name=\"ΔΣ I\" value={NPKBalance.ion_balance}/>\n          <StyledBalanceCell name=\"EC\" value={NPKBalance.EC}/>\n          <StyledBalanceCell name=\"%NH4\" value={round((NPKBalance.ratio?.NH4?.NO3 || 0) * 100, 1)}/>\n          <StyledBalanceCell name=\"K:N\" value={NPKBalance.ratio.K.N}/>\n          <StyledBalanceCell name=\"K:Ca\" value={NPKBalance.ratio.K.Ca}/>\n          <StyledBalanceCell name=\"K:Mg\" value={NPKBalance.ratio.K.Mg}/>\n        </Flex>\n        <StyledList>\n          <li>Для {solution_volume}л раствора</li>\n          {fertilizerWeightGroups.map(([g, f_weights]) =>\n            (<li>\n                <b>\n                    Раствор {g}\n                </b>\n                <ul>\n                  <ResultFertilizerList fertilizers={f_weights}/>\n                </ul>\n              </li>\n            )\n          )}\n          <li>Всего солей: {totalWeight} г.</li>\n          <li>Концентрация солей: {round(totalWeight/solution_volume,2)} г/л</li>\n        </StyledList>\n        {result?.fertilizers?\n          <Flex>\n            <Modal\n              button={({modal}) => (\n                <IconButton\n                  padding={1}\n                  alignSelf=\"center\"\n                  component={Save}\n                  backgroundColor={'primary'}\n                  onClick={modal.open}\n                >Сохранить комплекс</IconButton>\n              )}\n              container={({modal}) => (\n                <>\n                  <AddEdit\n                    initialValues={getInitialValues(complexFertilizer)}\n                  />\n                  <Flex justifyContent=\"flex-end\">\n                    <Button type=\"button\" onClick={() => onSave(modal)}>Save</Button>\n                  </Flex>\n                </>\n              )}\n            />\n          </Flex>\n        : null}\n        <ResultDilution/>\n        {result?.stats &&\n        <Text>\n          Обработано вариантов: {result?.stats.count} Время: {result?.stats.time} сек\n        </Text>\n        }\n      </Flex>\n    </Card>\n  )\n}\n\n","import React from \"react\";\nimport {Export} from \"@styled-icons/boxicons-regular/Export\"\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {useSelector} from \"react-redux\";\nimport {CalculatorState} from \"@/components/Calculator/types\";\nimport {FERTILIZER_ELEMENT_NAMES} from \"@/calculator/constants\";\nimport {csvExport} from \"@/utils/csv\";\nimport {saveData} from \"@/utils/downloads\";\n\ninterface ExportRecipesProps {\n}\n\nexport function ExportRecipes(props: ExportRecipesProps) {\n  const {\n    recipes,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n  const doExport = () => {\n    const rows = recipes.map(f => {\n      const cols = FERTILIZER_ELEMENT_NAMES.map(n => f.elements[n])\n      return [f.name, ...cols]\n    })\n    const csvData = csvExport(rows, {columns: ['Профиль', ...FERTILIZER_ELEMENT_NAMES], header: true})\n    saveData(csvData, \"Профили.csv\")\n  }\n  return (\n    <>\n      <IconButton onClick={doExport} component={Export}/>\n    </>\n  )\n}\n","import React, {ChangeEvent, createRef, useEffect, useState} from \"react\";\nimport {Import} from \"@styled-icons/boxicons-regular/Import\"\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {csvParse} from \"@/utils/csv\";\nimport {FERTILIZER_ELEMENT_NAMES} from \"@/calculator/constants\";\nimport {useDispatch} from \"react-redux\";\nimport {recipePush} from \"@/components/Calculator/actions\";\n\ninterface ImportRecipesProps {\n}\n\nconst COLUMNS = ['id', ...FERTILIZER_ELEMENT_NAMES]\n\nexport function ImportRecipes(props: ImportRecipesProps) {\n  const buttonRef = createRef<HTMLButtonElement>()\n  const dispatch = useDispatch()\n  const [size, setSize] = useState({width: 0, height: 0})\n  useEffect(() => {\n    const newSize = {\n      width: buttonRef.current?.offsetWidth || 0,\n      height: buttonRef.current?.offsetHeight || 0,\n    }\n    if (size.width !== newSize.width) {\n      setSize(newSize)\n    }\n  }, [buttonRef, size.width])\n\n  const loadCSV = (csv: string) => {\n    const p = csvParse(csv, {columns: COLUMNS})\n    if (isNaN(parseInt(p[0].P))) {\n      p.splice(0, 1)\n    }\n    for (let {id, ...npk} of p) {\n      dispatch(recipePush({name: id, elements: npk}))\n    }\n  }\n\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e.target.value, e.target.files?.[0])\n    const file = e.target.files?.[0]\n    if (!file) {\n      return file\n    }\n    let reader = new FileReader();\n    reader.onload = () => {\n      console.log(reader.result)\n      loadCSV(reader.result as string)\n\n    }\n    reader.readAsText(file)\n\n  }\n  return (\n    <>\n      <IconButton\n        sx={{\n          position: \"relative\"\n        }}\n        ref={buttonRef}\n        component={Import}\n      >\n        <input type=\"file\"\n               accept=\"text/csv, .csv\"\n               onChange={event => handleOnChange(event)}\n               style={{\n                 top: 0,\n                 left: 0,\n                 position: \"absolute\",\n                 opacity: 0,\n                 ...size,\n               }}\n        />\n      </IconButton>\n    </>\n  )\n}\n","import {SxStyleProp} from \"rebass\";\n\nexport function mobileStyles(styles: SxStyleProp) {\n  return {\n    '@media screen and (max-width: 800px)': styles\n  }\n}\n","import React from \"react\";\nimport {Export} from \"@styled-icons/boxicons-regular/Export\"\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {useSelector} from \"react-redux\";\nimport {CalculatorState} from \"@/components/Calculator/types\";\nimport {saveData} from \"@/utils/downloads\";\nimport {ExportStateType} from \"@/components/Calculator/ImportExport/format/types\";\n\ninterface ExportRecipesProps {\n}\n\nexport function ExportState(props: ExportRecipesProps) {\n  const {\n    calculationForm,\n    result,\n    fertilizers,\n    recipes,\n  } = useSelector<any>(state => state.calculator) as CalculatorState\n  const doExport = () => {\n    const created = new Date().toISOString()\n    const state: ExportStateType = {\n      meta: {\n        version: __VERSION__,\n        ref: __COMMIT_HASH__,\n        created: created\n      },\n      calculator: {\n        calculationForm,\n        result,\n        fertilizers,\n        recipes,\n      }\n    }\n    const fileData = JSON.stringify(state, null, 4)\n    saveData(fileData, `CalculatorSettings-${created}.json`)\n  }\n  return (\n    <>\n      <IconButton onClick={doExport} component={Export}\n                  title={\"Экспорт настроек\"}\n      />\n    </>\n  )\n}\n","import {BaseFormat} from \"./base\";\nimport {ExportStateType} from \"./types\";\n\n\nexport class JSONFormat extends BaseFormat {\n  static ext = \".json\"\n\n  export(state: ExportStateType): string {\n    return JSON.stringify(state);\n  }\n\n  import(string: string): ExportStateType {\n    return JSON.parse(string) as ExportStateType;\n  }\n}\n","import {JSONFormat} from \"./json\";\nimport {HPGFormat} from \"./hpg\";\n\nexport const FORMATS = [\n  JSONFormat,\n  HPGFormat\n]\n\nexport const FORMATS_MAP = Object.fromEntries(FORMATS.map(f => [f.ext, f]))\nexport const ACCEPT_FORMATS = FORMATS.map(f => f.ext).join(', ')\n","import React, {ChangeEvent, createRef, useEffect, useState} from \"react\";\nimport {Import} from \"@styled-icons/boxicons-regular/Import\"\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {useDispatch} from \"react-redux\";\nimport {loadStateStart} from \"@/components/Calculator/actions\";\nimport {ACCEPT_FORMATS, FORMATS_MAP} from \"@/components/Calculator/ImportExport/format\";\n\ninterface ImportStateProps {\n}\n\n\n\nexport function ImportState(props: ImportStateProps) {\n  const buttonRef = createRef<HTMLButtonElement>()\n  const dispatch = useDispatch()\n  const [size, setSize] = useState({width: 0, height: 0})\n  useEffect(() => {\n    const newSize = {\n      width: buttonRef.current?.offsetWidth || 0,\n      height: buttonRef.current?.offsetHeight || 0,\n    }\n    if (size.width !== newSize.width) {\n      setSize(newSize)\n    }\n  }, [buttonRef, size.width])\n\n  const loadData = (file: File, data: string) => {\n    let ext = '.' + file.name.split('.').pop()\n    if (FORMATS_MAP[ext]) {\n      const f = new FORMATS_MAP[ext]()\n      const p = f.import(data)\n      dispatch(loadStateStart(p))\n    }\n  }\n\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>) => {\n    console.log(e.target.value, e.target.files?.[0])\n    const file = e.target.files?.[0]\n    if (!file) {\n      return file\n    }\n    let reader = new FileReader();\n    reader.onload = () => {\n      console.log(reader.result)\n      loadData(file, reader.result as string)\n\n    }\n    reader.readAsText(file)\n\n  }\n  return (\n    <>\n      <IconButton\n        sx={{\n          position: \"relative\"\n        }}\n        ref={buttonRef}\n        component={Import}\n      >\n        <input type=\"file\"\n               accept={ACCEPT_FORMATS}\n               onChange={event => handleOnChange(event)}\n               style={{\n                 top: 0,\n                 left: 0,\n                 position: \"absolute\",\n                 opacity: 0,\n                 ...size,\n               }}\n               title={\"Импорт настроек\"}\n        />\n      </IconButton>\n    </>\n  )\n}\n","import React from \"react\";\nimport {Box, Card, Flex, Heading, Text} from 'rebass'\nimport {Restart} from \"@styled-icons/remix-line/Restart\"\nimport {Form, reduxForm} from \"redux-form\";\nimport {connect, useDispatch} from \"react-redux\";\n\nimport FertilizerSelect from './FertilizerSelect'\nimport {Options} from \"./Options/Options\";\nimport {Result} from \"./Result/Result\";\nimport {CalculatorFormValues} from \"./types\";\nimport {ReduxFormType} from \"../ui/ReduxForm/types\";\nimport {REDUX_FORM_NAME} from \"./constants\";\nimport {calculateStart, recipeReset} from \"./actions\";\nimport {IconButton} from \"@/components/ui/IconButton\";\nimport {DEFAULT_MICRO_RECIPE, DEFAULT_RECIPES} from \"@/components/Calculator/constants/recipes\";\nimport {ExportRecipes} from \"./ImportExport/ExportRecipes\";\nimport {ImportRecipes} from \"./ImportExport/ImportRecipes\";\nimport {Recipe} from \"@/components/Calculator/Options/Recipe\";\nimport {mobileStyles} from \"@/components/ui/styled\";\nimport {RootState} from \"@/redux/types\";\nimport {ExportState} from \"./ImportExport/ExportState\";\nimport {ImportState} from \"./ImportExport/ImportState\";\n\ninterface CalculatorProps {\n\n}\n\nconst initialValues: CalculatorFormValues = {\n  accuracy: 0.2,\n  solution_volume: 1,\n  solution_concentration: 100,\n  recipe: {...DEFAULT_RECIPES[0].elements, ...DEFAULT_MICRO_RECIPE, Cl: 0},\n  fertilizers: [],\n  dilution_enabled: false,\n  dilution_volume: 20,\n  dilution_concentration: 1,\n  topping_up_enabled: false,\n}\nexport const CalculatorContainer: ReduxFormType<CalculatorProps, CalculatorFormValues> = ({handleSubmit}) => {\n  const dispatch = useDispatch()\n  return (\n    <Form\n      onSubmit={handleSubmit(() => {\n        dispatch(calculateStart())\n      })}\n    >\n      <Flex sx={{\n        flexDirection: 'row',\n        ...mobileStyles({\n          flexDirection: 'column-reverse',\n        })\n      }}>\n        <Box flex={1}\n             sx={{\n               marginRight: 2,\n               ...mobileStyles({\n                 marginRight: 0\n               })\n             }}\n        >\n          <FertilizerSelect/>\n        </Box>\n        <Flex flexDirection='column' flex={1}>\n          <Box flex={1} marginBottom={2}>\n            <Recipe/>\n          </Box>\n          <Box flex={1}>\n            <Result/>\n          </Box>\n          <Box flex={1}>\n            <Options/>\n          </Box>\n          <Card>\n            <Heading fontSize={2}>Импорт/Экспорт</Heading>\n            <Flex flexDirection=\"column\" p={3}>\n              <Flex alignItems='center'\n                    justifyContent=\"space-between\"\n                    flexWrap=\"wrap\"\n              >\n                <Text>Рецепты</Text>\n                <Box sx={{\n                  \"&>*\": {\n                    marginLeft: 1\n                  }\n                }}>\n                  <ImportRecipes/>\n                  <ExportRecipes/>\n                  <IconButton\n                    component={Restart}\n                    onClick={() => dispatch(recipeReset())}\n                  />\n                </Box>\n              </Flex>\n              <Flex alignItems='center'\n                    justifyContent=\"space-between\"\n                    flexWrap=\"wrap\"\n              >\n                <Text>Настройки</Text>\n                <Box sx={{\n                  \"&>*\": {\n                    marginLeft: 1\n                  }\n                }}>\n                  <ImportState/>\n                  <ExportState/>\n                </Box>\n              </Flex>\n            </Flex>\n          </Card>\n        </Flex>\n      </Flex>\n    </Form>\n  )\n}\n\n\nconst InitializerCalculator = reduxForm<CalculatorFormValues>({\n  form: REDUX_FORM_NAME,\n  initialValues,\n  enableReinitialize: true\n})(CalculatorContainer)\n\nconst ReduxCalculator = connect((state: RootState) => {\n  const formValues: CalculatorFormValues = (state.calculator?.calculationForm || initialValues)\n  return {\n    initialValues: {\n      ...formValues,\n      recipe: {Cl: 0, ...DEFAULT_MICRO_RECIPE, ...formValues.recipe}\n    }\n  }})(InitializerCalculator)\n\nexport default ReduxCalculator\n"],"sourceRoot":""}