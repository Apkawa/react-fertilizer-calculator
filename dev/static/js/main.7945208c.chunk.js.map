{"version":3,"sources":["calculator/profile.ts","components/Calculator/constants/index.ts","utils/index.ts","calculator/constants.ts","serviceWorker.ts","pages/index.ts","pages/NotFound/index.tsx","themes/index.ts","components/ui/ForkMeOnGitHub.tsx","components/ui/Sidebar/SidebarContainer.tsx","hooks/screen.ts","components/ui/Sidebar/Sidebar.tsx","components/ColorModeToggle.tsx","components/ui/TabMenu/TabMenu.tsx","Root.tsx","calculator/itertools.ts","calculator/index.ts","components/Calculator/saga.ts","components/Calculator/FertilizerManager/saga.ts","saga.ts","redux-helpers/helpers.ts","components/Calculator/constants/fertilizers.ts","components/Calculator/reducers.ts","redux/rootReducers.ts","redux/index.ts","index.tsx","calculator/helpers.ts","calculator/fertilizer.ts","calculator/molecular-parser/molecularParser.ts","calculator/chem.ts","components/Calculator/FertilizerManager/constants.ts","components/Calculator/constants/recipes.ts","components/Calculator/actions.ts","components/ui/Icon.tsx"],"names":["ALLOWED_ELEMENT_IN_MATRIX","MACRO_ELEMENT_NAMES","getProfileRatioMatrix","npk","elMap","entries","El","ppm","includes","N","NH4","NO3","Object","fromEntries","map","el","el2","ppm2","r","round","isFinite","convertProfileWithRatio","ratio","newNPK","v","el1","toEls","_N","f","extract_percent","elM","convertProfileWithEC","EC","rN","K","Mg","Ca","rK","rCa","rMg","vNH4NO3","rNH4","molN","ATOMIC_MASS","molK","molCa","molMg","newNpk","REDUX_FORM_NAME","STORE_CALCULATE_FORM","CALCULATE_START","CALCULATE_SUCCESS","CALCULATE_ERROR","FERTILIZERS_PUSH","FERTILIZERS_REMOVE","FERTILIZERS_SET","FERTILIZERS_RESET","RECIPE_PUSH","RECIPE_REMOVE","RECIPE_RESET","keys","values","sum","reduce","a","b","number","precision","p","Math","pow","Number","EPSILON","countDecimals","value","floor","valueOf","toString","split","length","toMap","list","field","m","i","updateOrPush","item","lookup","newList","updated","push","equal","t1","t2","JSON","stringify","MICRO_ELEMENT_NAMES","FERTILIZER_ELEMENT_NAMES","IONIC_STRENGTH","P","S","Cl","Na","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","App","loadable","NotFound","Help","Calculator","ChemFormula","Example","presets","require","defaultTheme","polaris","colors","modes","dark","text","card","boxShadow","styles","button","color","shadows","small","large","StyledForkMeOnGithub","styled","span","ForkMeOnGitHub","target","rel","href","StyledOverlay","Flex","docked","pageYOffset","SidebarContainer","props","children","actions","modalRoot","document","querySelector","createElement","setAttribute","body","appendChild","useSidebarRoot","ReactDOM","createPortal","Helmet","type","onClick","close","backgroundColor","height","width","marginRight","getWindowSize","innerWidth","innerHeight","Sidebar","opened","useState","closed","setClose","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","setDocked","d","onClose","open","renderCbProps","modal","size","component","Menu","justifyContent","Cross","fontSize","title","ColorModeToggle","useColorMode","colorMode","setColorMode","Icon","Moon","Sun","TabMenu","startPathWith","tabClassName","activeTabClassName","flexDirection","exact","to","Root","store","theme","padding","margin","flex","sx","path","pages","marginTop","__VERSION__","__COMMIT_REF_NAME__","__COMMIT_HASH__","__COMMIT_DATE__","combination","iterable","Permutation","getScoreElement","needElements","currentElements","pairs","key","curVal","score","calculate_v3","fertilizers","options","result","time","Date","getTime","count","calculate_v2","stats","ElementPriority","accuracy","ignore","solution_volume","solution_concentration","prevElements","getEmptyElements","ignoredElements","fertilizerMap","id","normalizedFertilizers","normalizeFertilizer","weights","weight","base_weight","volume","xElements","calcElements","elements","filter","sort","primaryElement","skipFert","fInfo","solution_density","liquid_weight","e","elementPrecision","score_el","score_percent","ignored","needElementsLength","totalScore","deltaElementsPairs","k","dv","deltaElements","storeCalculateFormSaga","calculateStartSaga","calculatorSagaWatcher","calculatorFormChangeWatcher","calculatorRootSaga","select","getFormValues","formValues","put","storeCalculateForm","calculator","calculationForm","stopSubmit","_error","calculateError","recipe","getFillElementsByType","micro","calculateSuccess","takeLatest","actionTypes","CHANGE","BLUR","ARRAY_PUSH","ARRAY_REMOVE","action","meta","form","call","all","fork","updateFertilizerForm","fertilizerEditFormChangeWatcher","fertilizerManagerRootSaga","FERTILIZER_EDIT_FORM_NAME","composition_enable","composition","change","formula","rootSaga","sagas","s","assertNever","_","defaultFertilizers","percent","buildNPKFertilizer","initialState","process","recipes","DEFAULT_RECIPES","rootReducers","combineReducers","ActionNames","payload","name","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","persistedState","localStorage","getItem","parse","loadPersistedState","middlewares","enhancers","applyMiddleware","createStore","subscribe","setItem","getState","run","render","StrictMode","getElementById","URL","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","calculateNPKBalance","anions","cations","ion_balance","w","ionS","st","sign","forEach","macro","Fe","Mn","B","Zn","Cu","Mo","Co","Si","calculatePPM","ppmToEC","NPKOxides","oxide","hasOwnProperty","compositionToNPKElements","comp","atomCounts","parseMolecule","massParts","calculateMassParts","atom","mass","subAtoms","parseNitrates","totalSubAtoms","elementsToNPK","val","skipElements","elementMassPart","fertilizerInfo","convertMass","findSubgroups","finishingNestedSubgroup","subgroups","currentFormula","currentCount","level","pushSubgroup","parseInt","ch","test","decomposeFormula","elementCounts","elementRe","matcher","singleElementRe","element","_el","_decomposePrimitiveFormula","combinedCounts","subgroup","elementCount","subgroupCounts","nitrates","re","subFormula","n","c","matchAll","nType","atomMasses","totalMass","DEFAULT_MICRO_RECIPE","calculateStart","fertilizerPush","fertilizerRemove","fertilizerSet","fertilizerReset","recipePush","recipeRemove","recipeReset","forwardRef","buttonRef","IconComponent","extraProps","containerSize","setSize","useTheme","current","offsetWidth","ref"],"mappings":"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AUH,KAAQE,KAAKC,UAAUF,K,gCCpD/C,0KAAO,IAAMlD,EAAc,CACzB,EAAK,MACL,GAAM,UACN,GAAM,KACN,GAAM,WACN,EAAK,MACL,EAAK,OACL,EAAK,OACL,EAAK,OACL,EAAK,cACL,GAAM,SACN,GAAM,aACN,GAAM,OACN,GAAM,YACN,GAAM,OACN,EAAK,cACL,EAAK,MACL,GAAM,MACN,EAAK,SACL,GAAM,QACN,GAAM,QACN,GAAM,WACN,GAAM,QACN,EAAK,SACL,GAAM,SACN,GAAM,WACN,GAAM,QACN,GAAM,SACN,GAAM,WACN,GAAM,QACN,GAAM,OACN,GAAM,QACN,GAAM,QACN,GAAM,WACN,GAAM,QACN,GAAM,OACN,GAAM,QACN,GAAM,SACN,GAAM,OACN,EAAK,UACL,GAAM,QACN,GAAM,UACN,GAAM,OACN,GAAM,GACN,GAAM,QACN,GAAM,WACN,GAAM,QACN,GAAM,UACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,GAAM,SACN,EAAK,WACL,GAAM,QACN,GAAM,SACN,GAAM,cACN,GAAM,SACN,GAAM,WACN,GAAM,SACN,GAAM,WACN,GAAM,SACN,GAAM,IACN,GAAM,QACN,GAAM,SACN,GAAM,QACN,GAAM,WACN,GAAM,SACN,GAAM,WACN,GAAM,SACN,GAAM,WACN,GAAM,SACN,GAAM,UACN,GAAM,QACN,GAAM,WACN,EAAK,QACL,GAAM,SACN,GAAM,QACN,GAAM,SACN,GAAM,SACN,GAAM,YACN,GAAM,SACN,GAAM,OACN,GAAM,OACN,GAAM,WACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,WACN,GAAM,UACN,GAAM,IACN,EAAK,WACL,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM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","file":"static/js/main.7945208c.chunk.js","sourcesContent":["import {Elements, NPKElements} from \"./types\";\nimport {entries, round} from \"../utils\";\nimport {ATOMIC_MASS, MACRO_ELEMENT_NAMES} from \"./constants\";\nimport {extract_percent} from \"./helpers\";\n\nexport const ALLOWED_ELEMENT_IN_MATRIX = [\"N\", ...MACRO_ELEMENT_NAMES]\nexport type ALLOWED_ELEMENT_IN_MATRIX = typeof ALLOWED_ELEMENT_IN_MATRIX[number]\n\ntype ElementInMatrix<T = number> = {\n  [K in ALLOWED_ELEMENT_IN_MATRIX]: T\n}\n\nexport interface ElementsMatrixType extends ElementInMatrix<ElementInMatrix> {\n}\n\nexport interface ProfileInfo {\n  ratio: ElementsMatrixType\n  anions: number,\n  cations: number,\n  ion_balance: number,\n  EC: number\n}\n\nexport interface ChangeProfileOptions {\n  ratio: Partial<ElementInMatrix<Partial<ElementInMatrix>>>,\n  EC: number,\n\n}\n\nexport interface ChangeProfileResult {\n  npk: Elements,\n  info: ProfileInfo\n}\n\n// export function changeProfile(npk: Elements, options: ChangeProfileOptions): ChangeProfileResult {\n//\n// }\n\n/**\n * Расчет соотношений N/K и тд\n * @param npk\n * @return ElementsMatrixType\n */\nexport function getProfileRatioMatrix(npk: NPKElements): ElementsMatrixType {\n  let elMap: ElementInMatrix = {}\n  for (let [El, ppm] of entries(npk)) {\n    if (ALLOWED_ELEMENT_IN_MATRIX.includes(El)) {\n      elMap[El] = ppm\n    }\n  }\n  elMap.N = (npk.NH4 || 0) + (npk.NO3 || 0)\n  return Object.fromEntries(entries(elMap).map(\n    ([el, ppm]) =>\n      [el, Object.fromEntries(entries(elMap).map(\n        ([el2, ppm2]) => {\n          let r = round(ppm / ppm2, 3)\n          if (!isFinite(r)) {\n            r = 0\n          }\n          return [el2, el === el2 ? 1 : r]\n        }\n        )\n      )]\n    )\n  )\n}\n\ntype PartialElementsMatrix = {\n  [K in keyof ElementInMatrix]?: ElementInMatrix\n}\n\nexport function convertProfileWithRatio(\n  npk: NPKElements,\n  ratio: PartialElementsMatrix): NPKElements {\n  const newNPK: NPKElements = {...npk}\n  const N = (newNPK.NO3 || 0) + (newNPK.NH4 || 0)\n  const v = getProfileRatioMatrix(npk)\n  for (let [el1, toEls] of entries(ratio)) {\n    for (let [el2, r] of entries(toEls)) {\n      if (el1 === el2) {\n        continue\n      }\n      let f = (v: number, r: number) => v * r\n      if (el1 === \"N\") {\n        let _N = f((newNPK[el2 as MACRO_ELEMENT_NAMES] || 0), r)\n        newNPK.NH4 = extract_percent(_N, v.NH4.NO3)\n        newNPK.NO3 = _N - newNPK.NH4\n      } else {\n        let elM = newNPK[el2 as MACRO_ELEMENT_NAMES] || 0\n        if (el2 === 'N') {\n          elM = N\n        }\n        newNPK[el1 as MACRO_ELEMENT_NAMES] = elM * r\n      }\n    }\n  }\n  return Object.fromEntries(entries(newNPK)\n    .map(([el, v]) => (\n      [el, round(v, 1)]\n    )))\n}\n\n/**\n * Copied from siv237/HPG\n * @param npk\n * @param EC new EC\n * @return new NPK\n */\nexport function convertProfileWithEC(npk: NPKElements, EC: number): NPKElements {\n\n  const v = getProfileRatioMatrix(npk)\n  // TODO понять и отрефакторить эту магию\n  const rN = (v.K.Mg * v.K.Ca) / (\n    v.K.Ca * v.K.N + v.K.Mg * v.K.N + v.K.Mg * v.K.Ca + v.K.Mg * v.K.Ca * v.K.N\n  );\n  const rK = (v.K.N * v.K.Mg * v.K.Ca) / (\n    v.K.Ca * v.K.N + v.K.Mg * v.K.N + v.K.Mg * v.K.Ca + v.K.Mg * v.K.Ca * v.K.N);\n  const rCa = (v.K.Mg * v.K.N) / (\n    v.K.Ca * v.K.N + v.K.Mg * v.K.N + v.K.Mg * v.K.Ca + v.K.Mg * v.K.Ca * v.K.N);\n  const rMg = (v.K.Ca * v.K.N) / (\n    v.K.Ca * v.K.N + v.K.Mg * v.K.N + v.K.Mg * v.K.Ca + v.K.Mg * v.K.Ca * v.K.N\n  );\n  const vNH4NO3 = (npk.NH4 || 0) / ((npk.NH4 || 0) + (npk.NO3 || 0))\n  const rNH4 = (rN * vNH4NO3) / (1 + vNH4NO3);\n\n  const molN = ATOMIC_MASS.N\n  // const molP = ATOMIC_MASS.P\n  const molK = ATOMIC_MASS.K\n  const molCa = ATOMIC_MASS.Ca\n  const molMg = ATOMIC_MASS.Mg\n\n  const r = (\n    0.10526315789473684211 * molN * molCa * molMg * molK * (100 * EC - 19)) / (\n    rNH4 * molCa * molMg * molK\n    + 2 * rCa * molN * molMg * molK\n    + 2 * rMg * molN * molCa * molK\n    + rK * molN * molCa * molMg\n  );\n  const N = rN * r;\n  const NH4 = extract_percent(N, v.NH4.NO3)\n\n  let newNpk = {\n    ...npk,\n    NH4,\n    NO3: N - NH4,\n    K: rK * r,\n    Ca: rCa * r,\n    Mg: rMg * r,\n  }\n  return Object.fromEntries(entries(newNpk)\n    .map(([el, v]) => (\n      [el, round(v, 1)]\n    )))\n}\n","export const REDUX_FORM_NAME = 'calculatorOptions' as const\n\nexport const STORE_CALCULATE_FORM = 'STORE_CALCULATE_FORM'\n\nexport const CALCULATE_START = 'CALCULATE_START' as const;\nexport const CALCULATE_SUCCESS = 'CALCULATE_SUCCESS' as const;\nexport const CALCULATE_ERROR = 'CALCULATE_ERROR'  as const;\n\nexport const FERTILIZERS_PUSH = 'FERTILIZERS_PUSH' as const\nexport const FERTILIZERS_REMOVE = 'FERTILIZERS_REMOVE' as const\nexport const FERTILIZERS_SET = 'FERTILIZERS_SET' as const\nexport const FERTILIZERS_RESET = 'FERTILIZERS_RESET' as const\n\n\nexport const RECIPE_PUSH = 'RECIPE_PUSH' as const\nexport const RECIPE_REMOVE = 'RECIPE_REMOVE' as const\nexport const RECIPE_RESET = 'RECIPE_RESET' as const\n","export const keys = Object.keys as <T>(o: T) => (Extract<keyof T, string>)[];\nexport const entries = Object.entries as <T>(\n  o: T\n) => [Extract<keyof T, string>, Exclude<T[keyof T], undefined>][]\n\nexport const values = Object.values as <T>(\n  o: T\n) => (Exclude<T[keyof T], undefined>)[]\n\nexport function sum(values: number[]) {\n  return values.reduce((a, b) => a + b, 0)\n}\n\nexport function round(number: number, precision: number = 0) {\n  const p = Math.pow(10, precision)\n  return Math.round((number + Number.EPSILON) * p) / p\n}\n\nexport function countDecimals(value: number): number {\n  if (Math.floor(value.valueOf()) === value.valueOf()) return 0;\n  return value.toString().split(\".\")[1].length || 0;\n}\n\ntype ToMapResult<T> = { [K in string]: T }\n\nexport function toMap<T extends object>(list: T[], field: keyof T): ToMapResult<T> {\n  const m: ToMapResult<T> = {}\n  for (let i of list) {\n    let key = i[field] as any as string\n    m[key] = i\n  }\n  return m\n}\n\nexport function updateOrPush<T extends object>(list: T[], item: T, lookup: keyof T): T[] {\n  const newList = [...list]\n  let updated = false\n  for (let i = 0; i < list.length; i++) {\n    if (newList[i][lookup] === item[lookup]) {\n      newList[i] = item\n      updated = true\n      break\n    }\n  }\n  if (!updated) {\n    newList.push(item)\n  }\n  return newList\n}\n\n\nexport function equal(t1: any, t2: any): boolean {\n  return JSON.stringify(t1) === JSON.stringify(t2)\n}\n","export const ATOMIC_MASS = {\n  \"H\": 1.008,\n  \"He\": 4.0026022,\n  \"Li\": 6.94,\n  \"Be\": 9.01218315,\n  \"B\": 10.81,\n  \"C\": 12.011,\n  \"N\": 14.007,\n  \"O\": 15.999,\n  \"F\": 18.9984031636,\n  \"Ne\": 20.17976,\n  \"Na\": 22.989769282,\n  \"Mg\": 24.305,\n  \"Al\": 26.98153857,\n  \"Si\": 28.085,\n  \"P\": 30.9737619985,\n  \"S\": 32.06,\n  \"Cl\": 35.45,\n  \"K\": 39.09831,\n  \"Ar\": 39.9481,\n  \"Ca\": 40.0784,\n  \"Sc\": 44.9559085,\n  \"Ti\": 47.8671,\n  \"V\": 50.94151,\n  \"Cr\": 51.99616,\n  \"Mn\": 54.9380443,\n  \"Fe\": 55.8452,\n  \"Ni\": 58.69344,\n  \"Co\": 58.9331944,\n  \"Cu\": 63.5463,\n  \"Zn\": 65.382,\n  \"Ga\": 69.7231,\n  \"Ge\": 72.6308,\n  \"As\": 74.9215956,\n  \"Se\": 78.9718,\n  \"Br\": 79.904,\n  \"Kr\": 83.7982,\n  \"Rb\": 85.46783,\n  \"Sr\": 87.621,\n  \"Y\": 88.905842,\n  \"Zr\": 91.2242,\n  \"Nb\": 92.906372,\n  \"Mo\": 95.951,\n  \"Tc\": 98,\n  \"Ru\": 101.072,\n  \"Rh\": 102.905502,\n  \"Pd\": 106.421,\n  \"Ag\": 107.86822,\n  \"Cd\": 112.4144,\n  \"In\": 114.8181,\n  \"Sn\": 118.7107,\n  \"Sb\": 121.7601,\n  \"I\": 126.904473,\n  \"Te\": 127.603,\n  \"Xe\": 131.2936,\n  \"Cs\": 132.905451966,\n  \"Ba\": 137.3277,\n  \"La\": 138.905477,\n  \"Ce\": 140.1161,\n  \"Pr\": 140.907662,\n  \"Nd\": 144.2423,\n  \"Pm\": 145,\n  \"Sm\": 150.362,\n  \"Eu\": 151.9641,\n  \"Gd\": 157.253,\n  \"Tb\": 158.925352,\n  \"Dy\": 162.5001,\n  \"Ho\": 164.930332,\n  \"Er\": 167.2593,\n  \"Tm\": 168.934222,\n  \"Yb\": 173.0451,\n  \"Lu\": 174.96681,\n  \"Hf\": 178.492,\n  \"Ta\": 180.947882,\n  \"W\": 183.841,\n  \"Re\": 186.2071,\n  \"Os\": 190.233,\n  \"Ir\": 192.2173,\n  \"Pt\": 195.0849,\n  \"Au\": 196.9665695,\n  \"Hg\": 200.5923,\n  \"Tl\": 204.38,\n  \"Pb\": 207.21,\n  \"Bi\": 208.980401,\n  \"Po\": 209,\n  \"At\": 210,\n  \"Rn\": 222,\n  \"Fr\": 223,\n  \"Ra\": 226,\n  \"Ac\": 227,\n  \"Pa\": 231.035882,\n  \"Th\": 232.03774,\n  \"Np\": 237,\n  \"U\": 238.028913,\n  \"Am\": 243,\n  \"Pu\": 244,\n  \"Cm\": 247,\n  \"Bk\": 247,\n  \"Cf\": 251,\n  \"Es\": 252,\n  \"Fm\": 257,\n  \"Md\": 258,\n  \"No\": 259,\n  \"Lr\": 266,\n  \"Rf\": 267,\n  \"Db\": 268,\n  \"Sg\": 269,\n  \"Hs\": 269,\n  \"Bh\": 270,\n  \"Mt\": 278,\n  \"Ds\": 281,\n  \"Rg\": 282,\n  \"Cn\": 285,\n  \"Nh\": 286,\n  \"Fl\": 289,\n  \"Mc\": 289,\n  \"Lv\": 293,\n  \"Ts\": 294,\n  \"Og\": 294,\n  \"Uue\": 315\n}\nexport type AtomNameType = keyof ATOMIC_MASS\nexport type ATOMIC_MASS = typeof ATOMIC_MASS;\nexport const MACRO_ELEMENT_NAMES = [\"NO3\", \"NH4\", \"P\", \"K\", \"Ca\", \"Mg\", \"S\", \"Cl\"] as const\nexport type MACRO_ELEMENT_NAMES = typeof MACRO_ELEMENT_NAMES[number]\nexport const MICRO_ELEMENT_NAMES = ['Fe', 'Mn', 'B', 'Zn', 'Cu', 'Mo', 'Co', 'Si'] as const\nexport type MICRO_ELEMENT_NAMES = typeof MICRO_ELEMENT_NAMES[number]\n\nexport const FERTILIZER_ELEMENT_NAMES = [...MACRO_ELEMENT_NAMES, ...MICRO_ELEMENT_NAMES]\nexport type FERTILIZER_ELEMENT_NAMES = typeof FERTILIZER_ELEMENT_NAMES[number]\n\nexport const IONIC_STRENGTH = {\n  NO3: -1 / ATOMIC_MASS[\"N\"],\n  NH4: 1 / ATOMIC_MASS[\"N\"],\n  P: -1 / ATOMIC_MASS[\"P\"],\n  K: 1 / ATOMIC_MASS[\"K\"],\n  Ca: 2 / ATOMIC_MASS[\"Ca\"],\n  Mg: 2 / ATOMIC_MASS[\"Mg\"],\n  S: -2 / ATOMIC_MASS[\"S\"],\n  // TODO use for balance without recipe\n  Cl: -1 / ATOMIC_MASS[\"Cl\"],\n  Na: 1 / ATOMIC_MASS[\"Na\"],\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/pwa-sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import loadable from '@loadable/component';\nimport NotFound from './NotFound'\n\nexport default {\n  App: loadable(() => import('./App')),\n  NotFound,\n  Help: loadable(() => import('./Help')),\n  Calculator: loadable(() => import('./Calculator')),\n  ChemFormula: loadable(() => import('./ChemFormula')),\n  Example: loadable(() => import('./Example')),\n}\n","import React from \"react\";\n\nexport default () => <h1>Not found</h1>\n","import {Theme} from \"@/themes/types\";\n\nconst presets: any = require('@theme-ui/presets')\n\nexport const defaultTheme: Theme = {\n  ...presets.polaris,\n  colors: {\n    ...presets.polaris.colors,\n    NO3: '#05AD11',\n    NH4: '#FFF',\n    P: '#DBC403',\n    K: '#E07206',\n    Ca: '#D1C7C7',\n    Mg: '#AB0AE0',\n    S: '#FFF',\n    modes: {\n      dark: {\n        ...presets.polaris.colors.modes.dark,\n        text: \"#9d9d9d\"\n      }\n    },\n  },\n  card: {\n    boxShadow: 'small',\n    p: 2,\n  },\n  styles: {\n    ...presets.polaris.styles,\n    button: {\n      color: 'background'\n    }\n  },\n  shadows: {\n    small: '0 0 4px rgba(0, 0, 0, .125)',\n    large: '0 0 24px rgba(0, 0, 0, .125)'\n  },\n}\nconsole.log(defaultTheme)\n","import React, {FunctionComponent} from \"react\";\nimport styled from \"styled-components\";\n\n\nconst StyledForkMeOnGithub = styled.span`\n&>a {\n    background: #000;\n    color: #fff;\n    text-decoration: none;\n    font-family: arial, sans-serif;\n    text-align: center;\n    font-weight: bold;\n    padding: 5px 40px;\n    font-size: 1rem;\n    line-height: 2rem;\n    position: relative;\n    transition: 0.5s;\n}\n\n&>a:hover {\n    background: #c11;\n    color: #fff;\n}\n\n&>a::before, &>a::after {\n    content: \"\";\n    width: 100%;\n    display: block;\n    position: absolute;\n    top: 1px;\n    left: 0;\n    height: 1px;\n    background: #fff;\n}\n\n&>a::after {\n    bottom: 1px;\n    top: auto;\n}\n\n@media screen and (min-width: 800px) {\n    & {\n        position: absolute;\n        display: block;\n        top: 0;\n        right: 0;\n        width: 200px;\n        overflow: hidden;\n        height: 200px;\n        z-index: 100;\n    }\n\n    &>a {\n        // width: 200px;\n        position: absolute;\n        top: 40px;\n        right: -50px;\n        transform: rotate(45deg);\n        box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.8);\n    }\n}\n`\n\ninterface ForkMeOnGitHubProps {\n}\n\nexport const ForkMeOnGitHub: FunctionComponent<ForkMeOnGitHubProps> = () => {\n  return (\n    <StyledForkMeOnGithub>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={'https://github.com/Apkawa/react-fertilizer-calculator'}\n      >Fork me on GitHub</a>\n    </StyledForkMeOnGithub>\n  )\n}\n","import React, {ReactNode} from \"react\";\nimport ReactDOM from 'react-dom'\nimport {Card, Flex} from \"rebass\";\nimport styled from '@emotion/styled'\nimport {Helmet} from \"react-helmet\";\nimport {SidebarActions} from \"@/components/ui/Sidebar/Sidebar\";\n\n\ninterface SidebarContainerProps {\n  actions: SidebarActions,\n  children: ReactNode,\n  docked?: boolean,\n}\n\nconst useSidebarRoot = () => {\n  let el = document.querySelector('#sidebar-root')\n  if (!el) {\n    el = document.createElement('div')\n    el.setAttribute('id', 'sidebar-root')\n    document.body.appendChild(el)\n  }\n  return el\n}\n\ninterface OverlayProps  {\n  docked?: boolean\n}\n\nconst StyledOverlay = styled(Flex)<OverlayProps>`\n  overflow-y: auto;\n  position: absolute;\n  height: 100%;\n  top: 0;\n  left: 0;\n  justify-content: left;\n  align-items: stretch;\n  z-index: 999;\n  width: fit-content;\n  \n  //// Mobile\n  //@media screen and (max-height: 500px), screen and (max-width: 500px) {\n  //  align-items: initial;\n  //}\n  ${({docked}) => (docked? `` : `\n    top: ${() => `${window.pageYOffset}px`};\n    width: 100%;\n    background-color: rgba(255, 255, 255, 0.5);\n  `)}\n`\n\nexport function SidebarContainer(props: SidebarContainerProps) {\n  const {\n    children,\n    actions,\n    docked\n  } = props\n  const modalRoot = useSidebarRoot()\n\n  const onClickOverlay = () => {\n    if (!docked) {\n      actions.close()\n    }\n  }\n  return ReactDOM.createPortal(\n    <>\n      <Helmet>\n        <style type='text/css'>\n          {!docked && `\n          body {\n            overflow: hidden;\n          }\n        `}\n        </style>\n      </Helmet>\n      <StyledOverlay\n        docked={docked}\n        onClick={onClickOverlay}\n      >\n        <Card backgroundColor='#fff' height=\"100vh\" width=\"300px\" marginRight={2}>\n          {children}\n        </Card>\n      </StyledOverlay>\n    </>\n    , modalRoot)\n}\n","import { useState, useEffect } from 'react';\n\ninterface Size {\n  width: number,\n  height: number,\n}\n\n\nfunction getWindowSize() : Size {\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight,\n  }\n}\n\n// Hook\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<Size>(getWindowSize());\n\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize(getWindowSize);\n    }\n\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n","import React, {ReactNode, useEffect, useState} from \"react\";\nimport {Box, Flex, Heading} from \"rebass\";\nimport {Icon} from \"@/components/ui/Icon\";\nimport {Menu} from \"@styled-icons/boxicons-regular/Menu\"\nimport {Cross} from \"@styled-icons/entypo/Cross\";\nimport {SidebarContainer} from \"@/components/ui/Sidebar/SidebarContainer\";\nimport {useWindowSize} from \"@/hooks/screen\";\n\nexport interface SidebarActions {\n  open: () => void,\n  close: () => void,\n}\n\ntype RenderCb = (props: { modal: SidebarActions }) => ReactNode\n\ninterface SidebarProps {\n  opened?: boolean,\n  onClose?: () => void,\n  button?: RenderCb,\n  title?: string,\n  children: ReactNode,\n  docked?: boolean,\n}\n\n\nexport function Sidebar(props: SidebarProps) {\n  const {\n    opened = Boolean(props.docked),\n    button,\n  } = props\n\n  const [closed, setClose] = useState(!opened)\n  const windowSize = useWindowSize()\n\n  const [docked, setDocked] = useState(props.docked || windowSize.width > 1024)\n\n\n  useEffect(() => {\n    const d = props.docked || windowSize.width > 1650\n    setDocked(d)\n    if (d && closed) {\n      setClose(false)\n    }\n  }, [windowSize, closed, props.docked])\n\n  useEffect(() => {\n    setClose(!opened)\n  }, [opened])\n\n  useEffect(() => {\n    if (closed && props.onClose) {\n      props.onClose()\n    }\n  }, [closed, props])\n\n  const actions: SidebarActions = {\n    open: () => setClose(false),\n    close: () => setClose(true),\n  }\n  const renderCbProps = {modal: actions}\n\n  return (\n    <>\n      {button ? button(renderCbProps) : (\n        <Icon\n          size={42}\n          component={Menu}\n          onClick={actions.open}\n        />\n      )}\n      {closed ? null :\n        <SidebarContainer actions={actions} docked={docked}>\n          <Flex justifyContent='space-between'>\n            {docked ? null : <Icon size={42} component={Cross} onClick={actions.close}/>}\n            <Heading fontSize={2}>{props.title}</Heading>\n          </Flex>\n          <Box>\n            {props.children}\n          </Box>\n        </SidebarContainer>\n      }\n    </>\n  )\n}\n\n","import React, {FunctionComponent} from \"react\";\nimport {useColorMode} from \"theme-ui\";\nimport {Moon} from \"@styled-icons/boxicons-solid/Moon\"\nimport {Sun} from \"@styled-icons/fa-solid/Sun\"\n\ninterface ColorModeProps {\n}\n\nexport const ColorModeToggle: FunctionComponent<ColorModeProps> = () => {\n    const [colorMode, setColorMode] = useColorMode()\n    const Icon = colorMode === 'default'? Moon : Sun\n    return (\n          <Icon\n            onClick={() => {\n              setColorMode(colorMode === 'default' ? 'dark' : 'default')\n            }}\n            size={42}\n            color={\"text\"}\n          />\n    )\n}\n","import React from \"react\";\nimport {NavTab, RoutedTabs} from \"react-router-tabs\";\n\nimport {Flex} from \"rebass\";\nimport {Sidebar} from \"@/components/ui/Sidebar/Sidebar\";\nimport {ColorModeToggle} from \"@/components/ColorModeToggle\";\n\nimport \"./style.css\"\n\ninterface TabMenuProps {\n}\n\n\nexport function TabMenu(props: TabMenuProps) {\n  return (\n    <Sidebar>\n      <RoutedTabs\n        startPathWith={''}\n        tabClassName=\"tab-link\"\n        activeTabClassName=\"active\"\n      >\n        <Flex flexDirection=\"column\">\n          <NavTab exact to=\"/\">Калькулятор</NavTab>\n          <NavTab to=\"/fertilizers\">Удобрения</NavTab>\n          <NavTab to=\"/formula/\">Парсер формул</NavTab>\n          <NavTab to=\"/help\">Справка</NavTab>\n        </Flex>\n      </RoutedTabs>\n      <ColorModeToggle/>\n    </Sidebar>\n  )\n}\n","import React, {FunctionComponent} from 'react'\nimport {Provider} from 'react-redux'\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'\n\n\nimport {ThemeProvider} from 'theme-ui'\n\n\nimport pages from './pages'\nimport {Box, Flex, Text} from \"rebass\";\nimport {defaultTheme} from \"./themes\";\nimport {ForkMeOnGitHub} from \"./components/ui/ForkMeOnGitHub\";\nimport {TabMenu} from \"@/components/ui/TabMenu/TabMenu\";\n\n\ntype RootProps = {\n  store: any\n}\n\nconst Root: FunctionComponent<RootProps> = ({store}) => {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={defaultTheme}>\n        <Router>\n          <Flex justifyContent=\"space-between\">\n            <Box\n              padding={1}\n            >\n              <TabMenu/>\n            </Box>\n            <ForkMeOnGitHub/>\n          </Flex>\n          <Flex flexDirection='column' margin={2}>\n            <Box flex={1}>\n              <Flex sx={\n                {\n                  justifyContent: 'center'\n                }\n              }>\n                <Box width='936px'>\n                  <Switch>\n                    <Route path={\n                      [\n                        \"/formula/:formula?/:percent?\",\n                      ]} component={pages.ChemFormula}/>\n                    <Route path=\"/example\" component={pages.Example}/>\n                    <Route path=\"/help\" component={pages.Help}/>\n                    <Route path=\"/\" component={pages.Calculator}/>\n                    <Route path=\"*\" component={pages.NotFound}/>\n                  </Switch>\n                </Box>\n              </Flex>\n            </Box>\n            <Flex justifyContent={\"flex-end\"} marginTop=\"auto\" flex={1}>\n              <Text fontSize={1}>\n                {__VERSION__}-{__COMMIT_REF_NAME__} {__COMMIT_HASH__} [{__COMMIT_DATE__}]\n              </Text>\n            </Flex>\n          </Flex>\n        </Router>\n      </ThemeProvider>\n    </Provider>\n  )\n}\n\nexport default Root\n","import {Permutation} from \"js-combinatorics\";\n\ntype GenericIterableIterator<T> = IterableIterator<{\n  [K in keyof T]: T[K] extends Iterable<infer U> ? U : never\n}>\n\nexport function* combination<T extends Array<any>>(iterable: T): GenericIterableIterator<T> {\n  for (let p of new Permutation(iterable)) {\n    yield p as any\n  }\n}\n\n// NB: throws if any iterables passed to it are empty\n// via https://gist.github.com/cybercase/db7dde901d7070c98c48#gistcomment-3033459\nexport function* product<T extends Array<Iterable<any>>>(...iterables: T): GenericIterableIterator<T> {\n  if (iterables.length === 0) {\n    return;\n  }\n  // make a list of iterators from the iterables\n  const iterators = iterables.map(it => it[Symbol.iterator]());\n  const results = iterators.map(it => it.next());\n  if (results.some(r => r.done)) {\n    throw new Error(\"Input contains an empty iterator.\");\n  }\n\n  for (let i = 0; ;) {\n    if (results[i].done) {\n      // reset the current iterator\n      iterators[i] = iterables[i][Symbol.iterator]();\n      results[i] = iterators[i].next();\n      // advance, and exit if we've reached the end\n      if (++i >= iterators.length) {\n        return;\n      }\n    } else {\n      yield results.map(({value}) => value) as any;\n      i = 0;\n    }\n    results[i] = iterators[i].next();\n  }\n}\n\n\n","import {combination, product} from \"./itertools\";\nimport {countDecimals, entries, keys, round, sum, values} from \"../utils\";\nimport {FERTILIZER_ELEMENT_NAMES, MICRO_ELEMENT_NAMES} from \"./constants\";\nimport {Elements, Fertilizer, FertilizerInfo, NeedElements} from \"./types\";\nimport {getEmptyElements} from \"./helpers\";\nimport {normalizeFertilizer} from \"./fertilizer\";\n\n\nexport interface FertilizerWeights {\n  id: string,\n  // г/л\n  weight: number\n  base_weight: number,\n  // Если удобрение в жидком виде, в мл\n  volume?: number | null,\n  // Если задана плотность\n  liquid_weight?: number | null,\n}\n\nexport interface CalculateResult {\n  fertilizers: FertilizerWeights[],\n  elements: Elements,\n  deltaElements: Elements,\n  score: number,\n  stats: {\n    time: number,\n    count: number,\n  },\n}\n\nexport type IgnoreElements = {\n  [E in keyof Elements]?: boolean\n}\n\nexport interface CalculateOptions {\n  accuracy?: number,\n  max_iterations?: number,\n  ignore?: IgnoreElements,\n  solution_volume?: number,\n  solution_concentration?: number,\n  // Необходимо для расчета с использованием предыдущих данных,\n  // например, после расчета микроэлементов добавляются макроэлементы и надо их как то учитывать и наоборот\n  prevElements?: Elements,\n}\n\nexport function sumFertilizers(fertilizers: Fertilizer[], portions: number[]): Elements {\n  const pairs = FERTILIZER_ELEMENT_NAMES.map(key =>\n    [\n      key,\n      sum(\n        portions.map(\n          (weight, index) => weight * fertilizers[index].elements[key])\n      )\n    ]\n  )\n  return Object.fromEntries(pairs)\n}\n\n\nexport function getScoreElement(needElements: NeedElements, currentElements: Elements): Elements {\n  let pairs = entries(needElements).map(([key, value]) => {\n    let curVal = currentElements[key]\n    let score = 100\n    if (curVal !== 0) {\n      if (curVal < value) {\n        score = value / curVal;\n      } else {\n        score = curVal / value\n      }\n    } else {\n      if (curVal === value) {\n        // В рецепте тоже ноль\n        score = 1.0\n      }\n    }\n    return [key, score]\n  })\n  return Object.fromEntries(pairs)\n}\n\n// Подбор оптимального количества путем пересортировки удобрений\nexport function calculate_v3(\n  needElements: NeedElements,\n  fertilizers: FertilizerInfo[],\n  options: CalculateOptions = {}\n): CalculateResult {\n\n  let result: CalculateResult | null = null\n  const time = new Date().getTime();\n  let count = 0;\n  for (let f of combination(fertilizers)) {\n    const r = calculate_v2(needElements, f, options)\n    if (!result) {\n      result = r\n      continue\n    }\n    if (result.score < r.score) {\n      result = r\n    }\n    count += 1\n  }\n  if (result) {\n    result.stats.count = count\n    result.stats.time = (new Date().getTime() - time) / 1000\n  }\n  return result as CalculateResult\n\n}\n\nconst ElementPriority = {\n  'NH4': 1000,\n  'B': 1000,\n}\n\n// Алгоритм расчетов из https://github.com/siv237/HPG\nexport function calculate_v2(\n  needElements: NeedElements,\n  fertilizers: FertilizerInfo[],\n  options: CalculateOptions = {}\n): CalculateResult {\n  const {\n    accuracy = 0.1,\n    ignore = {},\n    solution_volume = 1,\n    solution_concentration = 1,\n    prevElements = getEmptyElements(),\n  } = options || {}\n  const precision = countDecimals(accuracy)\n  let ignoredElements: Elements = getEmptyElements()\n\n  for (let key of keys(ignoredElements)) {\n    if (ignore[key]) {\n      ignoredElements[key] = 1\n    }\n    if (typeof needElements[key] == \"undefined\") {\n      ignoredElements[key] = 1\n    }\n  }\n\n  const fertilizerMap = Object.fromEntries(fertilizers.map(f => [f.id, f]))\n  const normalizedFertilizers = fertilizers.map(f => normalizeFertilizer(f));\n  let weights: { [K: string]: FertilizerWeights } = Object.fromEntries(\n    fertilizers.map(v => ([v.id, {\n      id: v.id,\n      weight: 0,\n      base_weight: 0,\n      volume: null,\n    }])))\n  const xElements = {...needElements}\n  const calcElements = prevElements;\n\n  for (let f of normalizedFertilizers) {\n    let p = entries(f.elements)\n      .filter(v => v[1])\n      .sort((a, b) =>\n        ((xElements[a[0]] || 0) / a[1] - (xElements[b[0]] || 0) / b[1])\n      )\n      .sort(([a], [b]) =>\n        ((ElementPriority as any)[b] || 0) - ((ElementPriority as any)[a] || 0)\n      )\n    let primaryElement = p.filter(([a]) => (xElements[a] || 0) > 0 && (needElements[a] || 0) > 0)?.[0]?.[0]\n    // Стараемся принять во внимание комплексные удобрения вроде акварина\n    let skipFert = p.filter(([a]) => (needElements[a] || 0) <= 0 && !ignoredElements[a]).length === 1\n    if (!primaryElement || skipFert) {\n      continue\n    }\n\n    let m = Object.fromEntries(p)\n    let weight = (xElements[primaryElement] || 0) / (m[primaryElement] * 10)\n    let fInfo = fertilizerMap[f.id]\n    weights[f.id].base_weight = round(weight, precision > 3 ? precision : 3)\n    weights[f.id].weight = round(weight * solution_volume * solution_concentration, precision)\n    if (fInfo.solution_concentration) {\n      weights[f.id].volume = round((weights[f.id].weight * 1000) / fInfo.solution_concentration, precision)\n    }\n    let volume = weights[f.id].volume\n    if (fInfo.solution_density && volume) {\n      weights[f.id].liquid_weight = round(volume * (fInfo.solution_density / 1000), precision)\n    }\n\n    for (let [a, v] of p) {\n      const e = weight * v * 10\n      // Плавающая точность. повышаем точность в случае микроэлементов, при выводе домножить до 1000\n      let elementPrecision = countDecimals(needElements[a] || 0)\n      if (MICRO_ELEMENT_NAMES.includes(a as MICRO_ELEMENT_NAMES)) {\n        // Принудительно повышаем точность для микроэлементов\n        elementPrecision = 4\n      }\n      calcElements[a] += round(e, elementPrecision)\n      xElements[a] = (xElements[a] || 0) - e\n    }\n  }\n  let score_el: Elements = getScoreElement(needElements, calcElements)\n  for (let [e, v] of entries(ignoredElements)) {\n    if (v) {\n      score_el[e] = 0\n    }\n  }\n  const score_percent = sum(Object.values(score_el))\n\n  let ignored = sum(values(ignoredElements));\n  const needElementsLength = keys(ignoredElements).length\n  const totalScore = Math.round(100 / ((score_percent - (needElementsLength - ignored)) / (needElementsLength - ignored) + 1))\n\n  const deltaElementsPairs = entries(calcElements).map(([k, v]) => {\n    let dv = round((needElements[k] || 0) - v || 0, 1)\n    if (!dv) {\n      // удаляем знак у нуля\n      dv = 0\n    }\n    return [k, dv]\n  })\n  const deltaElements = Object.fromEntries(deltaElementsPairs)\n\n  return {\n    fertilizers: values(weights)\n      .map(v => ({\n        ...v,\n        base_weight: round(v.base_weight, precision),\n        weight: round(v.weight, precision),\n      }))\n      .filter(v => v.weight),\n    elements: calcElements,\n    deltaElements,\n    score: totalScore,\n    stats: {\n      count: 0,\n      time: 0,\n    }\n  }\n\n\n}\n\n// DEPRECATED\nexport function calculate_v1(\n  needElements: Elements,\n  fertilizers: Fertilizer[],\n  options: CalculateOptions = {},\n): CalculateResult {\n\n  const time = new Date().getTime();\n  let count = 0;\n  const {\n    accuracy = 0.1,\n    max_iterations = 25,\n    ignore = {},\n  } = options || {}\n  const precision = countDecimals(accuracy)\n  let weights: FertilizerWeights[] = fertilizers.map(v => ({\n    id: v.id,\n    weight: max_iterations,\n    base_weight: max_iterations\n  }))\n\n  let ignoredElements: Elements = getEmptyElements()\n  for (let [key, flag] of entries(ignore)) {\n    if (flag) {\n      ignoredElements[key] = 1\n    }\n  }\n\n  let best_score = 1000000;\n  let score;\n  let score_percent = 0;\n  let calculatedElements: Elements = getEmptyElements()\n\n  const accuracyList = [0.2, 0.1, 0.05, 0.01]\n  let step = accuracyList[0] * 10;\n\n  for (let currentAccuracy of accuracyList) {\n    if (currentAccuracy < accuracy) {\n      break\n    }\n\n    const _step = step\n    const weightRanges = weights.map(w => {\n      const ranges = []\n      const weight = w.weight < _step ? _step : w.weight\n      let minWeight = weight - _step\n      let maxWeight = weight + _step\n      if (weight === max_iterations) {\n        // Maybe first iteration\n        minWeight = 0\n        maxWeight = max_iterations\n      }\n      for (let i = minWeight; i <= maxWeight; i += _step) {\n        ranges.push(i)\n      }\n      return ranges\n    })\n\n\n    const it = product(...weightRanges)\n\n    for (let portions of it) {\n      let n_el: Elements = sumFertilizers(fertilizers, portions)\n      let score_el: Elements = getScoreElement(needElements, n_el)\n\n      for (let [e, v] of entries(ignoredElements)) {\n        if (v) {\n          score_el[e] = 0\n        }\n      }\n\n      count += 1\n      const current_score = sum(Object.values(score_el))\n      score = sum(Object.values(score_el).map(v => Math.pow(v, 2)))\n      if (best_score > score) {\n        calculatedElements = n_el\n        best_score = score\n        score_percent = current_score\n        weights.forEach((v, index) => {\n          v.base_weight = portions[index]\n          v.weight = portions[index]\n        })\n      }\n    }\n    weights = weights.filter(v => v.weight > 0)\n    let newFertilizers: Fertilizer[] = []\n    for (let f of fertilizers) {\n      for (let w of weights) {\n        if (w.id === f.id) {\n          newFertilizers.push(f)\n        }\n      }\n    }\n    fertilizers = newFertilizers\n    step = currentAccuracy * 10;\n  }\n\n\n  for (let [k, v] of entries(calculatedElements)) {\n    calculatedElements[k] = round(v)\n  }\n\n  const deltaElementsPairs = entries(calculatedElements).map(([k, v]) => {\n    return [k, needElements[k] - v]\n  })\n  const deltaElements = Object.fromEntries(deltaElementsPairs)\n\n  let ignored = sum(values(ignoredElements));\n  const needElementsLength = keys(needElements).length\n  const totalScore = Math.round(100 / ((score_percent - (needElementsLength - ignored)) / (needElementsLength - ignored) + 1))\n  return {\n    fertilizers: weights.map(v => ({...v, weight: round(v.weight / 10, precision)})),\n    score: totalScore,\n    elements: calculatedElements,\n    deltaElements,\n    stats: {\n      time: (new Date().getTime() - time) / 1000,\n      count: count,\n    }\n  }\n}\n","import {all, call, fork, put, select, takeLatest} from 'redux-saga/effects'\nimport {actionTypes, FormAction, getFormValues, stopSubmit} from \"redux-form\";\nimport {CALCULATE_START, REDUX_FORM_NAME} from \"./constants\";\nimport {calculateError, calculateSuccess, storeCalculateForm} from \"./actions\";\nimport {calculate_v3} from \"@/calculator\";\nimport {CalculatorFormValues} from \"./types\";\nimport {getFillElementsByType} from \"@/calculator/helpers\";\n\nexport function* storeCalculateFormSaga() {\n  const formValues: CalculatorFormValues = yield select(getFormValues(REDUX_FORM_NAME))\n  yield put(storeCalculateForm(formValues))\n  // yield put(calculateStart())\n}\n\nexport function* calculateStartSaga() {\n  const formValues: CalculatorFormValues = yield select(\n    state => state.calculator.calculationForm\n  )\n  if (!formValues.fertilizers.length) {\n    yield put(stopSubmit(REDUX_FORM_NAME, {\n      fertilizers: {_error: \"Need fertilizers!\"}\n    }))\n    yield put(calculateError())\n    return\n  }\n  const {\n    ignore,\n    accuracy,\n    solution_volume,\n    solution_concentration,\n  } = formValues\n\n  // Тут замораживается UI из за вычислений. нужно либо оптимизировать либо использовать WebWorker\n  const result = calculate_v3(\n    formValues.recipe,\n    formValues.fertilizers,\n    {\n      ignore: {...ignore, ...getFillElementsByType(true).micro},\n      accuracy,\n      solution_volume,\n      solution_concentration,\n    }\n  )\n  yield put(calculateSuccess(result))\n}\n\nexport function* calculatorSagaWatcher() {\n  yield takeLatest(CALCULATE_START, calculateStartSaga);\n}\n\nexport function* calculatorFormChangeWatcher() {\n\n  yield takeLatest([\n      actionTypes.CHANGE,\n      actionTypes.BLUR,\n      actionTypes.ARRAY_PUSH,\n      actionTypes.ARRAY_REMOVE\n    ],\n    function* (action: FormAction) {\n      if (action.meta.form === REDUX_FORM_NAME) {\n        yield call(storeCalculateFormSaga)\n      }\n    });\n}\n\nexport default function* calculatorRootSaga() {\n  yield all([\n    fork(calculatorSagaWatcher),\n    fork(calculatorFormChangeWatcher),\n  ]);\n}\n","import {all, call, fork, put, select, takeLatest} from \"redux-saga/effects\";\nimport {actionTypes, change, FormAction, getFormValues} from \"redux-form\";\nimport {FERTILIZER_EDIT_FORM_NAME} from \"./constants\";\nimport {AddEditFormType} from \"@/components/Calculator/FertilizerManager/types\";\nimport {normalizeFertilizer} from \"@/calculator/fertilizer\";\nimport {equal} from \"@/utils\";\n\nfunction* updateFertilizerForm() {\n  const formValues: AddEditFormType = yield select(getFormValues(FERTILIZER_EDIT_FORM_NAME))\n  if (formValues.composition_enable) {\n    const npk = normalizeFertilizer(\n      {id:'', composition: formValues.composition},\n      false\n    ).elements\n    if (!equal(formValues.npk, npk)) {\n      yield put(change(FERTILIZER_EDIT_FORM_NAME, 'npk', npk))\n    }\n    if (!formValues.composition?.length) {\n      yield put(change(FERTILIZER_EDIT_FORM_NAME, 'composition', [{formula: ''}]))\n\n    }\n  }\n\n}\n\nfunction* fertilizerEditFormChangeWatcher() {\n  yield takeLatest([\n      actionTypes.CHANGE,\n      actionTypes.BLUR,\n      actionTypes.ARRAY_PUSH,\n      actionTypes.ARRAY_REMOVE\n    ],\n    function* (action: FormAction) {\n      if (action.meta.form === FERTILIZER_EDIT_FORM_NAME) {\n        yield call(updateFertilizerForm)\n      }\n    });\n}\n\nexport default function* fertilizerManagerRootSaga() {\n  yield all([\n    fork(fertilizerEditFormChangeWatcher)\n  ]);\n}\n","import {all, fork} from 'redux-saga/effects'\nimport calculatorRootSaga from \"./components/Calculator/saga\";\nimport fertilizerManagerRootSaga from './components/Calculator/FertilizerManager/saga';\n\ntype AnySagaGenerator = Generator<any, any, any>;\n\nconst sagas: (() => AnySagaGenerator)[] = [\n  calculatorRootSaga,\n  fertilizerManagerRootSaga,\n]\n\nexport default function* rootSaga() {\n  yield all(sagas.map(s => fork(s)))\n}\n","export function assertNever<TState>(state: TState, _: never): TState {\n  return state;\n}\n","import {buildNPKFertilizer} from \"@/calculator/fertilizer\";\nimport {FertilizerInfo} from \"@/calculator/types\";\n\n// Бутылка-1 Макра-азотная\n// Селитра амиачная\n// Селитра калиевая\n// Селитра кальциевая\n//\n// Бутылка 2 Макра-серно-фосфорная\n// Сульфат аммония\n// Сульфат магния семиводный\n// Монофосфат калия\n\nexport const defaultFertilizers: FertilizerInfo[] = [\n  // buildNPKFertilizer(\n  //   \"Valagro 3:11:38\",\n  //   {\n  //     NO3: 3, P: 11, K: 38, Ca: 0, Mg: 4,\n  //   }),\n  // buildNPKFertilizer(\"Кальциевая селитра\",\n  //   {\n  //     NO3: 16, Ca: 24,\n  //   }),\n  // buildNPKFertilizer(\"Сульфат магния\", {Mg: 16.7, S: 13.3}),\n  // buildNPKFertilizer(\"Сульфат калия\", {K: 50, S: 18}),\n  // buildNPKFertilizer(\"Нитрат калия\", {NO3: 14, K: 46}),\n  // buildNPKFertilizer(\"Монофосфат калия\", {P: 50, K: 33}),\n  // {id: \"Сульфат калия\", composition: [{formula: \"K2SO4\", percent: 98}]},\n  {id: \"Сульфат магния (MgSO4*7H2O)\", composition: [{formula: \"MgSO4*7H2O\", percent: 98}]},\n  {id: \"Нитрат аммония (NH4NO3)\", composition: [{formula: \"NH4NO3\", percent: 98}]},\n  {id: \"Нитрат калия (KNO3)\", composition: [{formula: \"KNO3\", percent: 98}]},\n  {id: \"Сульфат калия (K2SO4)\", composition: [{formula: \"K2SO4\", percent: 98}]},\n  {id: \"Монофосфат калия (KH2PO4)\", composition: [{formula: \"KH2PO4\", percent: 98}]},\n  {id: \"Кальциевая селитра (Ca(NO3)2*4H2O)\", composition: [{formula: \"Ca(NO3)2*4H2O\", percent: 98}]},\n  {id: \"Сульфат аммония (NH4)2SO4)\", composition: [{formula: \"(NH4)2SO4\", percent: 98}]},\n  // {id: \"Магниевая селитра (Mg(NO3)2*6Н2О)\", composition: [{formula: \"Mg(NO3)2*6Н2О\", percent: 98}]},\n   buildNPKFertilizer(\"Магниевая селитра (Mg(NO3)2*6Н2О)\", {NO3: 7, Mg: 10}),\n\n]\n","import {ActionTypes, CalculatorState} from \"./types\";\nimport * as ActionNames from \"./constants\";\nimport {assertNever} from \"@/redux-helpers/helpers\";\nimport {defaultFertilizers} from \"./constants/fertilizers\";\nimport {DEFAULT_RECIPES} from \"./constants/recipes\";\nimport {updateOrPush} from \"@/utils\";\n\nconst initialState: CalculatorState = {\n  calculationForm: null,\n  result: null,\n  process: false,\n  error: false,\n  fertilizers: defaultFertilizers,\n  recipes: DEFAULT_RECIPES,\n}\n\n\nexport const reducer = (state: CalculatorState = initialState, action: ActionTypes): CalculatorState => {\n  switch (action.type) {\n    case ActionNames.STORE_CALCULATE_FORM:\n      return {...state, calculationForm: action.form}\n    case ActionNames.CALCULATE_START:\n      return {...state, process: true}\n    case ActionNames.CALCULATE_SUCCESS:\n      return {...state, process: false, result: action.result}\n    case ActionNames.CALCULATE_ERROR:\n      return {...state, process: false, error: true}\n\n    case ActionNames.FERTILIZERS_PUSH:\n      return {\n        ...state,\n        fertilizers: updateOrPush(state.fertilizers, action.payload, 'id'),\n      }\n    case ActionNames.FERTILIZERS_REMOVE:\n      return {...state, fertilizers: state.fertilizers.filter(f => action.payload.id !== f.id)}\n    case ActionNames.FERTILIZERS_SET:\n      return {...state, fertilizers: action.payload}\n    case ActionNames.FERTILIZERS_RESET:\n      return {...state, fertilizers: [...defaultFertilizers]}\n\n    case ActionNames.RECIPE_PUSH:\n      return {...state, recipes: updateOrPush(state.recipes, action.payload, 'name')}\n    case ActionNames.RECIPE_REMOVE:\n      return {...state, recipes: state.recipes.filter(f => action.payload.name !== f.name)}\n    case ActionNames.RECIPE_RESET:\n      return {...state, recipes: [...DEFAULT_RECIPES]}\n\n    default:\n      return assertNever<CalculatorState>(state, action)\n  }\n}\n","import {combineReducers} from \"redux\";\nimport {reducer as calculateReducer} from \"../components/Calculator/reducers\";\nimport {reducer as formReducer} from \"redux-form\";\n\nexport const rootReducers = combineReducers({\n  calculator: calculateReducer,\n  form: formReducer\n})\n","import {applyMiddleware, compose, createStore} from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport rootSaga from \"../saga\";\n\nimport {rootReducers} from \"./rootReducers\";\nimport {defaultFertilizers} from \"@/components/Calculator/constants/fertilizers\";\nimport {DEFAULT_RECIPES} from \"@/components/Calculator/constants/recipes\";\n\n\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware = createSagaMiddleware()\n\nfunction loadPersistedState() {\n  let state: any = {}\n  if (localStorage.getItem('reduxState')) {\n    state = JSON.parse(localStorage.getItem('reduxState') as string)\n    if (state?.calculator && !state.calculator.fertilizers) {\n      state.calculator.fertilizers = defaultFertilizers\n    }\n    if (state?.calculator && !state.calculator.recipes) {\n      state.calculator.recipes = DEFAULT_RECIPES\n    }\n  }\n  return state\n}\n\nconst persistedState = loadPersistedState()\n\nconst middlewares = [sagaMiddleware]\n\nconst enhancers = composeEnhancers(\n    applyMiddleware(...middlewares),\n  )\n\n// TODO typing\nexport const store = createStore(\n  rootReducers,\n  persistedState,\n  enhancers\n)\n\nstore.subscribe(() => {\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n})\n\nsagaMiddleware.run(rootSaga)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport Root from './Root'\nimport {store} from \"./redux\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root store={store}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n","import {entries, round, sum} from \"../utils\";\nimport {IONIC_STRENGTH} from \"./constants\";\nimport {FertilizerWeights} from './index';\nimport {Elements, MacroElements, MicroElements} from \"./types\";\nimport {ElementsMatrixType, getProfileRatioMatrix} from \"./profile\";\n\nexport interface NPKBalance {\n  anions: number,\n  cations: number,\n  ion_balance: number,\n  ratio: ElementsMatrixType,\n  EC: number\n}\n\n\nexport function calculateNPKBalance(npk: Elements): NPKBalance {\n  const ratio = getProfileRatioMatrix(npk)\n  const result: NPKBalance = {\n    anions: -0,\n    cations: 0,\n    ion_balance: 0,\n    ratio,\n    EC: 0,\n  }\n  for (let [el, w] of entries(npk)) {\n    let ionS = 0\n    if (el in IONIC_STRENGTH) {\n      // TODO починить тип\n      ionS = (IONIC_STRENGTH as any)[el] || 0\n    }\n    const st = w * ionS\n    if (Math.sign(st) < 0) {\n      result.anions += st\n    } else {\n      result.cations += st\n    }\n    result.ion_balance += st\n  }\n  // TODO понять что за магические числа\n  result.EC = 0.095 * result.cations + 0.19\n\n  entries(result).forEach(([k, v]) => {\n    if (k === \"ratio\") {\n      return\n    }\n    v = v as number\n    if (!isFinite(v)) {\n      v = 0\n    }\n    result[k] = round(v, 2)\n  })\n\n  return result\n}\n\nexport function getFillElementsByType<T>(value:T) : {macro: MacroElements<T>, micro: MicroElements<T>} {\n  return {\n    macro: {\n      NO3: value, NH4: value, P: value, K: value, Ca: value, Mg: value, S: value, Cl: value,\n    },\n    micro: {\n      Fe: value, Mn: value, B: value, Zn: value, Cu: value, Mo: value, Co: value, Si: value,\n    }\n  }\n\n}\n\nexport function getEmptyElements(): Elements {\n  const el = getFillElementsByType(0)\n  return {\n    ...el.micro,\n    ...el.macro,\n  }\n}\n\n// Считаем PPM раствора\nexport function calculatePPM(\n  fertilizers: FertilizerWeights[],\n  solution_volume=1,\n): number {\n  return round(sum(fertilizers.map(f => {\n    return f.weight * 1000\n  })) / solution_volume)\n}\n\n// ppm (мг/л) в EC (мСм/см).  k - коэфициент преобразования\nexport function ppmToEC(ppm: number, k: number=1.0): number {\n  return round(ppm * (1 / k)) / 1000\n}\n\n/**\n *\n * @param value\n * @param percent 0.0 to 1.0\n */\nexport function extract_percent(value: number, percent: number): number {\n  return value - (value / (1 + percent))\n\n}\n","import {entries, keys, round, sum, values} from \"../utils\";\nimport {calculateMassParts, parseMolecule, parseNitrates} from \"./chem\";\nimport {AtomNameType} from \"./constants\";\nimport {getEmptyElements} from \"./helpers\";\nimport {Elements, Fertilizer, FertilizerComposition, FertilizerInfo, NPKElements} from \"@/calculator/types\";\n\nconst NPKOxides = {\n  NO3: 'NO3',\n  NH4: 'NH4',\n  P: 'P2O5',\n  K: 'K2O',\n  Ca: 'CaO',\n  Mg: 'MgO',\n}\n\nexport function buildNPKFertilizer(id: string, npk: NPKElements): FertilizerInfo {\n  const composition: FertilizerComposition[] = entries(npk)\n    .filter(v => v[1] > 0)\n    .map(([k, v]) => {\n        let oxide: string = k\n        if (NPKOxides.hasOwnProperty(k)) {\n          oxide = NPKOxides[k] as string\n        }\n        return {\n          formula: oxide,\n          percent: v\n        }\n      }\n    )\n  return {\n    id,\n    composition\n  }\n}\n\nexport function compositionToNPKElements(composition: FertilizerComposition[]): Elements {\n  const elements: Elements = getEmptyElements()\n  for (let comp of composition) {\n    let atomCounts = parseMolecule(comp.formula)\n    let massParts = calculateMassParts(atomCounts)\n    for (let [atom, mass] of entries(massParts)) {\n      let subAtoms = {[atom]: 1}\n      if (atom === \"N\") {\n        subAtoms = parseNitrates(comp.formula)\n        if (keys(elements).includes(comp.formula as keyof Elements)) {\n          mass = 1\n        }\n      }\n      const totalSubAtoms = sum(values(subAtoms))\n      for (let [a, k] of entries(subAtoms)) {\n        if (elements.hasOwnProperty(a)) {\n          let percent = 100\n          if (comp.percent) {\n            percent = comp.percent;\n          }\n          percent *= (k / totalSubAtoms)\n          elements[a as keyof Elements] += round(percent * mass, 2)\n        }\n      }\n    }\n  }\n  return elements\n}\n\n/**\n * Конвертация чистых элементов в NPK оксиды\n * @param {Elements} elements - чистые элементы\n */\nexport function elementsToNPK(elements: NPKElements): Elements {\n  const e = entries(elements).map(([atom, val]) => {\n    const oxide: string = (NPKOxides as any)[atom] || atom\n    const massParts = calculateMassParts(parseMolecule(oxide))\n    const skipElements = massParts.hasOwnProperty(\"N\") || massParts.hasOwnProperty(\"S\")\n    const elementMassPart = massParts[atom as AtomNameType]\n    if (!skipElements && elementMassPart) {\n      const k = round(sum(values(massParts)) / elementMassPart, 2)\n      val = round(val * k, 2)\n    }\n    return [atom, val]\n  })\n  return Object.fromEntries(e)\n}\n\n/**\n * Расчет состава удобрения в чистые элементы\n * @param {FertilizerInfo} fertilizerInfo\n * @param convertMass - преобразовать ли в чистые элементы\n * @return {Fertilizer}\n */\nexport function normalizeFertilizer(fertilizerInfo: FertilizerInfo, convertMass = true): Fertilizer {\n  let elements: Elements = getEmptyElements()\n  let composition = fertilizerInfo.composition;\n  if (fertilizerInfo.npk) {\n    composition = buildNPKFertilizer(fertilizerInfo.id, fertilizerInfo.npk).composition\n  }\n  if (composition) {\n    elements = compositionToNPKElements(composition)\n  }\n  if (!convertMass) {\n    // Оксиды нужны только для отображения.\n    elements = elementsToNPK(elements)\n  }\n  return {\n    id: fertilizerInfo.id,\n    elements\n  }\n\n}\n\n","import {ATOMIC_MASS, AtomNameType} from \"../constants\";\n\nexport interface SubgroupType {\n  formula: string,\n  count: number\n}\n\nexport type ParsedMolecule = { [Atom in AtomNameType]?: number }\n\n/**\n * @param formula String A molecular formula, eg CH(CH(CH2)2)2OH\n * @return subgroups An array of first-level subgroups.\n * Eg [{formula: 'CH', count:1}, {formula:'CH(CH2)2', count:2,\n * {formula:'OH', count:1}]\n */\nexport const findSubgroups = function (formula: string): SubgroupType[] {\n  let finishingNestedSubgroup;\n  let subgroups: SubgroupType[] = [];\n  let currentFormula = '', currentCount = '';\n  let level = 0;\n\n  //This pushes the current state of currentFormula and currentCount to subgroups.\n  //It also resets currentFormula and currentCount.\n  const pushSubgroup = function () {\n    if (!currentFormula) return;\n    const countStr = currentCount || '1';\n    const count = parseInt(countStr, 10);\n    subgroups.push({formula: currentFormula, count: count});\n    currentFormula = '';\n    currentCount = '';\n  };\n\n  let i=-1;\n\n  for (let ch of formula) {\n    i++\n    if (/[A-Za-z]/.test(ch)) {\n      if (finishingNestedSubgroup) {\n        pushSubgroup();\n        finishingNestedSubgroup = false;\n      }\n      currentFormula += ch;\n      continue;\n    } else if (ch === '(') {\n      //If we are outside of parenthesis start a new subgroup\n      if (level === 0 && currentFormula) {\n        pushSubgroup();\n      }\n      if (level > 0) {\n        //If we are in a subgroup, the ( is part of the formula\n        currentFormula += ch;\n      }\n      level += 1;\n    } else if (ch === ')') {\n      level -= 1;\n      if (level === 0) {\n        //Finishing top-level subgroup; mark it so we can count multiples\n        finishingNestedSubgroup = true;\n      } else {\n        //If we are in a subgroup, the ( is part of the formula\n        currentFormula += ch;\n      }\n    } else if (/[*+]/.test(ch)) {\n      if (level === 0 && currentFormula) {\n        pushSubgroup();\n      }\n      if (level > 0) {\n        currentFormula += ch\n      }\n      level += 1\n    } else if (/\\d/.test(ch)) {\n      // TODO check numbers > 9\n      if (finishingNestedSubgroup) {\n        currentCount += ch;\n      } else {\n        if (i === 0) {\n          currentCount += ch\n          continue\n        }\n        currentFormula += ch;\n      }\n    }\n  }\n  //Once more to pick up any straggling formula\n  pushSubgroup();\n  return subgroups;\n}\n\n/**\n * @param formula String A primitive (ie, without subgroups/parentheses, like\n * CH4) molecular formula\n * @return elementCounts A map of element:count, eg {C:1, H:4}\n * @api private\n */\nconst _decomposePrimitiveFormula = function (formula: string): ParsedMolecule {\n  let elementCounts: ParsedMolecule = {};\n  let match = formula.match(elementRe)\n  if (!match) {\n    return elementCounts\n  }\n  for (let token of match) {\n    //matcher will be of the form ['Na2', 'Na', '2', ...] or ['H', 'H', '', ...]\n    let matcher = token.match(singleElementRe);\n    if (!matcher) {\n      continue\n    }\n    const element = matcher[1];\n    const count = parseInt((matcher[2] || '1'), 10);\n\n    if (!ATOMIC_MASS.hasOwnProperty(element)) {\n      continue\n    }\n    let _el = element as AtomNameType\n    if (element in elementCounts) {\n      elementCounts[_el] = (elementCounts[_el] || 0) + count;\n    } else {\n      elementCounts[_el] = count;\n    }\n  }\n\n\n  return elementCounts;\n};\n/**\n * @param formula String A molecular formula, eg CH(CH3)3\n * @return elementCounts A map of element:count, eg\n * {\n *   C: 4,\n *   H: 10\n * }\n */\nexport const decomposeFormula = function (formula: string): ParsedMolecule {\n  if (!formula) return {};\n  const subgroups = findSubgroups(formula);\n  if (subgroups.length === 1 && subgroups[0].formula === formula) {\n    //We have a primitive formula that we can just count!\n    return _decomposePrimitiveFormula(formula);\n  } else {\n    //We have subgroups\n    let combinedCounts: ParsedMolecule = {};\n    subgroups.forEach(function (subgroup) {\n      const subgroupCounts = decomposeFormula(subgroup.formula);\n      let elementCount;\n      for (let element in subgroupCounts) {\n        if (ATOMIC_MASS.hasOwnProperty(element)) {\n          let _el = element as AtomNameType\n          elementCount = (subgroupCounts[_el] || 0) * subgroup.count;\n          if (element in combinedCounts) {\n            combinedCounts[_el] = (combinedCounts[_el] || 0) + elementCount;\n          } else {\n            combinedCounts[_el] = elementCount;\n          }\n\n        }\n      }\n    });\n    return combinedCounts;\n  }\n}\n\nlet elementRe: RegExp = /([A-Z][a-z]{0,2})(\\d*)/g\nlet singleElementRe: RegExp = /([A-Z][a-z]{0,2})(\\d*)/\n\n\n","import {entries, round, sum, values} from \"../utils\";\nimport {ATOMIC_MASS, AtomNameType} from \"./constants\";\nimport {decomposeFormula, findSubgroups} from './molecular-parser/molecularParser';\n\nexport type DecomposedChemFormula = {\n  [Atom in AtomNameType]?: number;\n}\n\ntype ParsedNitrateType = {\n  NH4: number,\n  NO3: number\n}\n\n/**\n *\n * @param formula\n * @return\n */\nexport function parseMolecule(formula: string): DecomposedChemFormula {\n  return decomposeFormula(formula)\n}\n\nexport function parseNitrates(formula: string): ParsedNitrateType {\n  const nitrates: ParsedNitrateType = {\"NH4\": 0, \"NO3\": 0}\n  const re = /NH4|NO3|NH2/g\n  for (let s of findSubgroups(formula)) {\n    let subFormula = s.formula\n    if (subFormula === 'NH2') {\n      subFormula = 'NH4'\n    }\n    if (nitrates.hasOwnProperty(subFormula)) {\n      nitrates[subFormula as keyof typeof nitrates] += s.count\n      continue\n    }\n    if (subFormula !== formula) {\n      for (let [n, c] of entries(parseNitrates(subFormula))) {\n        (nitrates as ParsedNitrateType)[n] += c\n      }\n    } else {\n      for (let r of subFormula.matchAll(re)) {\n        let nType = r[0];\n        // Для мочевины, она соответствует аммонийному азоту\n        if (nType === 'NH2') {\n          nType = 'NH4'\n        }\n        (nitrates as ParsedNitrateType)[nType as keyof ParsedNitrateType] += s.count\n      }\n    }\n  }\n  return nitrates\n}\n\nexport function calculateMassParts(formula: DecomposedChemFormula): DecomposedChemFormula {\n  const atomMasses = Object.fromEntries(entries(formula).map(\n    ([atom, count]) =>\n      [atom, ATOMIC_MASS[atom] * count]\n    )\n  ) as DecomposedChemFormula\n\n  const totalMass = sum(values(atomMasses))\n  return Object.fromEntries(\n    entries(atomMasses).map(([atom, mass]) => [atom, round(mass / totalMass, 2)])\n  ) as DecomposedChemFormula\n}\n\n","\nexport const FERTILIZER_EDIT_FORM_NAME = 'fertilizerEdit'\n","import {Recipe} from \"@/components/Calculator/types\";\nimport {NeedElements} from \"@/calculator/types\";\n\nexport const DEFAULT_MICRO_RECIPE: NeedElements = {\n  Fe: 4500 / 1000,\n  Mn: 636 / 1000,\n  B: 636 / 1000,\n  Zn: 384 / 1000,\n  Cu: 69 / 1000,\n  Mo: 69 / 1000,\n}\n\nexport const DEFAULT_RECIPES: Recipe[] = [\n  {\n    name: \"Универсальное\",\n    elements: {NO3: 214, NH4: 14, P: 60, K: 250, Ca: 170, Mg: 50, S: 46}\n  },\n  {\n    name: \"Перец вегетация\",\n    color: 'green',\n    elements: {NO3: 224, NH4: 14, P: 39, K: 264, Ca: 200, Mg: 36, S: 56}\n  },\n  {\n    name: \"Перец цветение\",\n    color: 'yellow',\n    elements: {NO3: 150, NH4: 0, P: 90, K: 280, Ca: 170, Mg: 50, S: 56}\n  },\n  {\n    name: \"Перец плодоношение\",\n    color: 'red',\n    elements: {NO3: 140, NH4: 0, P: 50, K: 330, Ca: 170, Mg: 50, S: 56}\n  },\n  {\n    name: \"Томат вегетация\",\n    color: 'green',\n    elements: {NO3: 220, NH4: 0, P: 50, K: 260, Ca: 220, Mg: 60, S: 141}\n  },\n  {\n    name: \"Томат цветение\",\n    color: 'yellow',\n    elements: {NO3: 220, NH4: 0, P: 50, K: 280, Ca: 200, Mg: 60, S: 141}\n  },\n  {\n    name: \"Томат плодоношение\",\n    color: 'red',\n    elements: {NO3: 200, NH4: 0, P: 50, K: 320, Ca: 180, Mg: 60, S: 141}\n  },\n  {\n    name: \"Огурцы\",\n    elements: {NO3: 180, NH4: 0, P: 80, K: 320, Ca: 180, Mg: 50, S: 44}\n  },\n  {\n    name: \"Салат\",\n    elements: {NO3: 200, NH4: 0, P: 80, K: 200, Ca: 170, Mg: 50, S: 0}\n  },\n  {\n    name: \"Бобовые\",\n    elements: {NO3: 80, NH4: 0, P: 110, K: 400, Ca: 170, Mg: 50, S: 0}\n  },\n  {\n    name: \"Капуста\",\n    elements: {NO3: 200, NH4: 0, P: 70, K: 200, Ca: 170, Mg: 50, S: 0}\n  },\n  {\n    name: \"Клубника\",\n    elements: {NO3: 150, NH4: 0, P: 70, K: 350, Ca: 200, Mg: 50, S: 48}\n  },\n  {\n    name: \"Картофель\",\n    elements: {NO3: 200, NH4: 0, P: 80, K: 200, Ca: 170, Mg: 50, S: 0}\n  },\n  {\n    name: \"Тыква\",\n    elements: {NO3: 100, NH4: 0, P: 95, K: 320, Ca: 170, Mg: 50, S: 0}\n  },\n]\n","import * as ActionNames from \"./constants\";\nimport {CalculateResult} from \"@/calculator\";\nimport {CalculatorFormValues, Recipe} from \"@/components/Calculator/types\";\nimport {FertilizerInfo} from \"@/calculator/types\";\n\nexport const storeCalculateForm = (form: CalculatorFormValues) => ({\n  type: ActionNames.STORE_CALCULATE_FORM,\n  form,\n} as const)\n\nexport const calculateStart = () => ({\n  type: ActionNames.CALCULATE_START,\n} as const)\n\nexport const calculateSuccess = (result: CalculateResult) => ({\n  type: ActionNames.CALCULATE_SUCCESS,\n  result\n} as const)\n\nexport const calculateError = () => ({\n  type: ActionNames.CALCULATE_ERROR,\n} as const)\n\nexport const fertilizerPush = (payload: FertilizerInfo) => ({\n  type: ActionNames.FERTILIZERS_PUSH,\n  payload\n})\n\nexport const fertilizerRemove = (payload: FertilizerInfo) => ({\n  type: ActionNames.FERTILIZERS_REMOVE,\n  payload\n})\n\nexport const fertilizerSet = (payload: FertilizerInfo[]) => ({\n  type: ActionNames.FERTILIZERS_SET,\n  payload,\n})\n\nexport const fertilizerReset = () => ({\n  type: ActionNames.FERTILIZERS_RESET,\n})\n\n\nexport const recipePush = (payload: Recipe) => ({\n  type: ActionNames.RECIPE_PUSH,\n  payload\n})\n\nexport const recipeRemove = (payload: Recipe) => ({\n  type: ActionNames.RECIPE_REMOVE,\n  payload\n})\n\nexport const recipeReset = () => ({\n  type: ActionNames.RECIPE_RESET,\n})\n\n\n","import React, {forwardRef, useEffect, useState} from \"react\";\nimport {Box, BoxProps} from \"rebass\";\nimport {EmotionIcon} from '@emotion-icons/emotion-icon'\n\nimport {useTheme} from \"emotion-theming\";\nimport {Theme} from \"@/themes/types\";\n\n\ninterface IconProps extends Omit<BoxProps, keyof HTMLDivElement | 'css'> {\n  component: EmotionIcon,\n  disabled?: boolean,\n  size?: number | string\n}\n\nexport const Icon = forwardRef<HTMLDivElement, IconProps>(\n  (props, buttonRef) => {\n    const {\n      component: IconComponent,\n      size = \"1.5em\",\n      children,\n      ...extraProps\n    } = props\n    const [containerSize, setSize] = useState<number | string>(size || 0)\n    const theme = useTheme<Theme>()\n\n    useEffect(() => {\n      if (!size && buttonRef && 'current' in buttonRef) {\n        setSize(buttonRef.current?.offsetWidth || 0)\n      }\n    }, [buttonRef, setSize, size])\n\n    return (\n      <Box {...extraProps} ref={buttonRef}>\n        <IconComponent\n          color={theme.colors?.text}\n          size={containerSize}\n        />\n      </Box>\n    )\n  })\n"],"sourceRoot":""}